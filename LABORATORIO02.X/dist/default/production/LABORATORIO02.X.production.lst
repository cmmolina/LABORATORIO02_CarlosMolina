

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Feb 01 22:37:45 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    54                           	dabs	1,0x7E,2
    55     0000                     
    56                           ; Version 2.40
    57                           ; Generated 17/11/2021 GMT
    58                           ; 
    59                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution. Publication is not required when
    73                           ;        this file is used in an embedded application.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC16F887 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91     0000                     	;# 
    92     0001                     	;# 
    93     0002                     	;# 
    94     0003                     	;# 
    95     0004                     	;# 
    96     0005                     	;# 
    97     0006                     	;# 
    98     0007                     	;# 
    99     0008                     	;# 
   100     0009                     	;# 
   101     000A                     	;# 
   102     000B                     	;# 
   103     000C                     	;# 
   104     000D                     	;# 
   105     000E                     	;# 
   106     000E                     	;# 
   107     000F                     	;# 
   108     0010                     	;# 
   109     0011                     	;# 
   110     0012                     	;# 
   111     0013                     	;# 
   112     0014                     	;# 
   113     0015                     	;# 
   114     0015                     	;# 
   115     0016                     	;# 
   116     0017                     	;# 
   117     0018                     	;# 
   118     0019                     	;# 
   119     001A                     	;# 
   120     001B                     	;# 
   121     001B                     	;# 
   122     001C                     	;# 
   123     001D                     	;# 
   124     001E                     	;# 
   125     001F                     	;# 
   126     0081                     	;# 
   127     0085                     	;# 
   128     0086                     	;# 
   129     0087                     	;# 
   130     0088                     	;# 
   131     0089                     	;# 
   132     008C                     	;# 
   133     008D                     	;# 
   134     008E                     	;# 
   135     008F                     	;# 
   136     0090                     	;# 
   137     0091                     	;# 
   138     0092                     	;# 
   139     0093                     	;# 
   140     0093                     	;# 
   141     0093                     	;# 
   142     0094                     	;# 
   143     0095                     	;# 
   144     0096                     	;# 
   145     0097                     	;# 
   146     0098                     	;# 
   147     0099                     	;# 
   148     009A                     	;# 
   149     009B                     	;# 
   150     009C                     	;# 
   151     009D                     	;# 
   152     009E                     	;# 
   153     009F                     	;# 
   154     0105                     	;# 
   155     0107                     	;# 
   156     0108                     	;# 
   157     0109                     	;# 
   158     010C                     	;# 
   159     010C                     	;# 
   160     010D                     	;# 
   161     010E                     	;# 
   162     010F                     	;# 
   163     0185                     	;# 
   164     0187                     	;# 
   165     0188                     	;# 
   166     0189                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     0000                     	;# 
   170     0001                     	;# 
   171     0002                     	;# 
   172     0003                     	;# 
   173     0004                     	;# 
   174     0005                     	;# 
   175     0006                     	;# 
   176     0007                     	;# 
   177     0008                     	;# 
   178     0009                     	;# 
   179     000A                     	;# 
   180     000B                     	;# 
   181     000C                     	;# 
   182     000D                     	;# 
   183     000E                     	;# 
   184     000E                     	;# 
   185     000F                     	;# 
   186     0010                     	;# 
   187     0011                     	;# 
   188     0012                     	;# 
   189     0013                     	;# 
   190     0014                     	;# 
   191     0015                     	;# 
   192     0015                     	;# 
   193     0016                     	;# 
   194     0017                     	;# 
   195     0018                     	;# 
   196     0019                     	;# 
   197     001A                     	;# 
   198     001B                     	;# 
   199     001B                     	;# 
   200     001C                     	;# 
   201     001D                     	;# 
   202     001E                     	;# 
   203     001F                     	;# 
   204     0081                     	;# 
   205     0085                     	;# 
   206     0086                     	;# 
   207     0087                     	;# 
   208     0088                     	;# 
   209     0089                     	;# 
   210     008C                     	;# 
   211     008D                     	;# 
   212     008E                     	;# 
   213     008F                     	;# 
   214     0090                     	;# 
   215     0091                     	;# 
   216     0092                     	;# 
   217     0093                     	;# 
   218     0093                     	;# 
   219     0093                     	;# 
   220     0094                     	;# 
   221     0095                     	;# 
   222     0096                     	;# 
   223     0097                     	;# 
   224     0098                     	;# 
   225     0099                     	;# 
   226     009A                     	;# 
   227     009B                     	;# 
   228     009C                     	;# 
   229     009D                     	;# 
   230     009E                     	;# 
   231     009F                     	;# 
   232     0105                     	;# 
   233     0107                     	;# 
   234     0108                     	;# 
   235     0109                     	;# 
   236     010C                     	;# 
   237     010C                     	;# 
   238     010D                     	;# 
   239     010E                     	;# 
   240     010F                     	;# 
   241     0185                     	;# 
   242     0187                     	;# 
   243     0188                     	;# 
   244     0189                     	;# 
   245     018C                     	;# 
   246     018D                     	;# 
   247     0000                     	;# 
   248     0001                     	;# 
   249     0002                     	;# 
   250     0003                     	;# 
   251     0004                     	;# 
   252     0005                     	;# 
   253     0006                     	;# 
   254     0007                     	;# 
   255     0008                     	;# 
   256     0009                     	;# 
   257     000A                     	;# 
   258     000B                     	;# 
   259     000C                     	;# 
   260     000D                     	;# 
   261     000E                     	;# 
   262     000E                     	;# 
   263     000F                     	;# 
   264     0010                     	;# 
   265     0011                     	;# 
   266     0012                     	;# 
   267     0013                     	;# 
   268     0014                     	;# 
   269     0015                     	;# 
   270     0015                     	;# 
   271     0016                     	;# 
   272     0017                     	;# 
   273     0018                     	;# 
   274     0019                     	;# 
   275     001A                     	;# 
   276     001B                     	;# 
   277     001B                     	;# 
   278     001C                     	;# 
   279     001D                     	;# 
   280     001E                     	;# 
   281     001F                     	;# 
   282     0081                     	;# 
   283     0085                     	;# 
   284     0086                     	;# 
   285     0087                     	;# 
   286     0088                     	;# 
   287     0089                     	;# 
   288     008C                     	;# 
   289     008D                     	;# 
   290     008E                     	;# 
   291     008F                     	;# 
   292     0090                     	;# 
   293     0091                     	;# 
   294     0092                     	;# 
   295     0093                     	;# 
   296     0093                     	;# 
   297     0093                     	;# 
   298     0094                     	;# 
   299     0095                     	;# 
   300     0096                     	;# 
   301     0097                     	;# 
   302     0098                     	;# 
   303     0099                     	;# 
   304     009A                     	;# 
   305     009B                     	;# 
   306     009C                     	;# 
   307     009D                     	;# 
   308     009E                     	;# 
   309     009F                     	;# 
   310     0105                     	;# 
   311     0107                     	;# 
   312     0108                     	;# 
   313     0109                     	;# 
   314     010C                     	;# 
   315     010C                     	;# 
   316     010D                     	;# 
   317     010E                     	;# 
   318     010F                     	;# 
   319     0185                     	;# 
   320     0187                     	;# 
   321     0188                     	;# 
   322     0189                     	;# 
   323     018C                     	;# 
   324     018D                     	;# 
   325     0000                     	;# 
   326     0001                     	;# 
   327     0002                     	;# 
   328     0003                     	;# 
   329     0004                     	;# 
   330     0005                     	;# 
   331     0006                     	;# 
   332     0007                     	;# 
   333     0008                     	;# 
   334     0009                     	;# 
   335     000A                     	;# 
   336     000B                     	;# 
   337     000C                     	;# 
   338     000D                     	;# 
   339     000E                     	;# 
   340     000E                     	;# 
   341     000F                     	;# 
   342     0010                     	;# 
   343     0011                     	;# 
   344     0012                     	;# 
   345     0013                     	;# 
   346     0014                     	;# 
   347     0015                     	;# 
   348     0015                     	;# 
   349     0016                     	;# 
   350     0017                     	;# 
   351     0018                     	;# 
   352     0019                     	;# 
   353     001A                     	;# 
   354     001B                     	;# 
   355     001B                     	;# 
   356     001C                     	;# 
   357     001D                     	;# 
   358     001E                     	;# 
   359     001F                     	;# 
   360     0081                     	;# 
   361     0085                     	;# 
   362     0086                     	;# 
   363     0087                     	;# 
   364     0088                     	;# 
   365     0089                     	;# 
   366     008C                     	;# 
   367     008D                     	;# 
   368     008E                     	;# 
   369     008F                     	;# 
   370     0090                     	;# 
   371     0091                     	;# 
   372     0092                     	;# 
   373     0093                     	;# 
   374     0093                     	;# 
   375     0093                     	;# 
   376     0094                     	;# 
   377     0095                     	;# 
   378     0096                     	;# 
   379     0097                     	;# 
   380     0098                     	;# 
   381     0099                     	;# 
   382     009A                     	;# 
   383     009B                     	;# 
   384     009C                     	;# 
   385     009D                     	;# 
   386     009E                     	;# 
   387     009F                     	;# 
   388     0105                     	;# 
   389     0107                     	;# 
   390     0108                     	;# 
   391     0109                     	;# 
   392     010C                     	;# 
   393     010C                     	;# 
   394     010D                     	;# 
   395     010E                     	;# 
   396     010F                     	;# 
   397     0185                     	;# 
   398     0187                     	;# 
   399     0188                     	;# 
   400     0189                     	;# 
   401     018C                     	;# 
   402     018D                     	;# 
   403     0000                     	;# 
   404     0001                     	;# 
   405     0002                     	;# 
   406     0003                     	;# 
   407     0004                     	;# 
   408     0005                     	;# 
   409     0006                     	;# 
   410     0007                     	;# 
   411     0008                     	;# 
   412     0009                     	;# 
   413     000A                     	;# 
   414     000B                     	;# 
   415     000C                     	;# 
   416     000D                     	;# 
   417     000E                     	;# 
   418     000E                     	;# 
   419     000F                     	;# 
   420     0010                     	;# 
   421     0011                     	;# 
   422     0012                     	;# 
   423     0013                     	;# 
   424     0014                     	;# 
   425     0015                     	;# 
   426     0015                     	;# 
   427     0016                     	;# 
   428     0017                     	;# 
   429     0018                     	;# 
   430     0019                     	;# 
   431     001A                     	;# 
   432     001B                     	;# 
   433     001B                     	;# 
   434     001C                     	;# 
   435     001D                     	;# 
   436     001E                     	;# 
   437     001F                     	;# 
   438     0081                     	;# 
   439     0085                     	;# 
   440     0086                     	;# 
   441     0087                     	;# 
   442     0088                     	;# 
   443     0089                     	;# 
   444     008C                     	;# 
   445     008D                     	;# 
   446     008E                     	;# 
   447     008F                     	;# 
   448     0090                     	;# 
   449     0091                     	;# 
   450     0092                     	;# 
   451     0093                     	;# 
   452     0093                     	;# 
   453     0093                     	;# 
   454     0094                     	;# 
   455     0095                     	;# 
   456     0096                     	;# 
   457     0097                     	;# 
   458     0098                     	;# 
   459     0099                     	;# 
   460     009A                     	;# 
   461     009B                     	;# 
   462     009C                     	;# 
   463     009D                     	;# 
   464     009E                     	;# 
   465     009F                     	;# 
   466     0105                     	;# 
   467     0107                     	;# 
   468     0108                     	;# 
   469     0109                     	;# 
   470     010C                     	;# 
   471     010C                     	;# 
   472     010D                     	;# 
   473     010E                     	;# 
   474     010F                     	;# 
   475     0185                     	;# 
   476     0187                     	;# 
   477     0188                     	;# 
   478     0189                     	;# 
   479     018C                     	;# 
   480     018D                     	;# 
   481                           
   482                           	psect	strings
   483     0720                     __pstrings:
   484     0720                     stringtab:
   485     0720                     __stringtab:
   486                           
   487                           ;	String table - string pointers are 1 byte each
   488     0720  1BFF               	btfsc	btemp+1,7
   489     0721  2F2A               	ljmp	stringcode
   490     0722  1383               	bcf	3,7
   491     0723  187F               	btfsc	btemp+1,0
   492     0724  1783               	bsf	3,7
   493     0725  0800               	movf	0,w
   494     0726  0A84               	incf	4,f
   495     0727  1903               	skipnz
   496     0728  0AFF               	incf	btemp+1,f
   497     0729  0008               	return
   498     072A                     stringcode:
   499     072A                     stringdir:
   500     072A  3007               	movlw	high stringdir
   501     072B  008A               	movwf	10
   502     072C  0804               	movf	4,w
   503     072D  0A84               	incf	4,f
   504     072E  0782               	addwf	2,f
   505     072F                     __stringbase:
   506     072F  3400               	retlw	0
   507     0730                     __end_of__stringtab:
   508     0730                     __powers_:
   509     0730  3400               	retlw	0
   510     0731  3400               	retlw	0
   511     0732  3480               	retlw	128
   512     0733  343F               	retlw	63
   513     0734  3400               	retlw	0
   514     0735  3400               	retlw	0
   515     0736  3420               	retlw	32
   516     0737  3441               	retlw	65
   517     0738  3400               	retlw	0
   518     0739  3400               	retlw	0
   519     073A  34C8               	retlw	200
   520     073B  3442               	retlw	66
   521     073C  3400               	retlw	0
   522     073D  3400               	retlw	0
   523     073E  347A               	retlw	122
   524     073F  3444               	retlw	68
   525     0740  3400               	retlw	0
   526     0741  3440               	retlw	64
   527     0742  341C               	retlw	28
   528     0743  3446               	retlw	70
   529     0744  3400               	retlw	0
   530     0745  3450               	retlw	80
   531     0746  34C3               	retlw	195
   532     0747  3447               	retlw	71
   533     0748  3400               	retlw	0
   534     0749  3424               	retlw	36
   535     074A  3474               	retlw	116
   536     074B  3449               	retlw	73
   537     074C  3480               	retlw	128
   538     074D  3496               	retlw	150
   539     074E  3418               	retlw	24
   540     074F  344B               	retlw	75
   541     0750  3420               	retlw	32
   542     0751  34BC               	retlw	188
   543     0752  34BE               	retlw	190
   544     0753  344C               	retlw	76
   545     0754  3428               	retlw	40
   546     0755  346B               	retlw	107
   547     0756  346E               	retlw	110
   548     0757  344E               	retlw	78
   549     0758  34F9               	retlw	249
   550     0759  3402               	retlw	2
   551     075A  3415               	retlw	21
   552     075B  3450               	retlw	80
   553     075C  34EC               	retlw	236
   554     075D  3478               	retlw	120
   555     075E  34AD               	retlw	173
   556     075F  3460               	retlw	96
   557     0760  34CA               	retlw	202
   558     0761  34F2               	retlw	242
   559     0762  3449               	retlw	73
   560     0763  3471               	retlw	113
   561     0764                     __end_of__powers_:
   562     0764                     __npowers_:
   563     0764  3400               	retlw	0
   564     0765  3400               	retlw	0
   565     0766  3480               	retlw	128
   566     0767  343F               	retlw	63
   567     0768  34CD               	retlw	205
   568     0769  34CC               	retlw	204
   569     076A  34CC               	retlw	204
   570     076B  343D               	retlw	61
   571     076C  340A               	retlw	10
   572     076D  34D7               	retlw	215
   573     076E  3423               	retlw	35
   574     076F  343C               	retlw	60
   575     0770  346F               	retlw	111
   576     0771  3412               	retlw	18
   577     0772  3483               	retlw	131
   578     0773  343A               	retlw	58
   579     0774  3417               	retlw	23
   580     0775  34B7               	retlw	183
   581     0776  34D1               	retlw	209
   582     0777  3438               	retlw	56
   583     0778  34AC               	retlw	172
   584     0779  34C5               	retlw	197
   585     077A  3427               	retlw	39
   586     077B  3437               	retlw	55
   587     077C  34BD               	retlw	189
   588     077D  3437               	retlw	55
   589     077E  3486               	retlw	134
   590     077F  3435               	retlw	53
   591     0780  3495               	retlw	149
   592     0781  34BF               	retlw	191
   593     0782  34D6               	retlw	214
   594     0783  3433               	retlw	51
   595     0784  3477               	retlw	119
   596     0785  34CC               	retlw	204
   597     0786  342B               	retlw	43
   598     0787  3432               	retlw	50
   599     0788  345F               	retlw	95
   600     0789  3470               	retlw	112
   601     078A  3489               	retlw	137
   602     078B  3430               	retlw	48
   603     078C  34FF               	retlw	255
   604     078D  34E6               	retlw	230
   605     078E  34DB               	retlw	219
   606     078F  342E               	retlw	46
   607     0790  3408               	retlw	8
   608     0791  34E5               	retlw	229
   609     0792  343C               	retlw	60
   610     0793  341E               	retlw	30
   611     0794  3460               	retlw	96
   612     0795  3442               	retlw	66
   613     0796  34A2               	retlw	162
   614     0797  340D               	retlw	13
   615     0798                     __end_of__npowers_:
   616     0798                     _dpowers:
   617     0798  3401               	retlw	1
   618     0799  3400               	retlw	0
   619     079A  3400               	retlw	0
   620     079B  3400               	retlw	0
   621     079C  340A               	retlw	10
   622     079D  3400               	retlw	0
   623     079E  3400               	retlw	0
   624     079F  3400               	retlw	0
   625     07A0  3464               	retlw	100
   626     07A1  3400               	retlw	0
   627     07A2  3400               	retlw	0
   628     07A3  3400               	retlw	0
   629     07A4  34E8               	retlw	232
   630     07A5  3403               	retlw	3
   631     07A6  3400               	retlw	0
   632     07A7  3400               	retlw	0
   633     07A8  3410               	retlw	16
   634     07A9  3427               	retlw	39
   635     07AA  3400               	retlw	0
   636     07AB  3400               	retlw	0
   637     07AC  34A0               	retlw	160
   638     07AD  3486               	retlw	134
   639     07AE  3401               	retlw	1
   640     07AF  3400               	retlw	0
   641     07B0  3440               	retlw	64
   642     07B1  3442               	retlw	66
   643     07B2  340F               	retlw	15
   644     07B3  3400               	retlw	0
   645     07B4  3480               	retlw	128
   646     07B5  3496               	retlw	150
   647     07B6  3498               	retlw	152
   648     07B7  3400               	retlw	0
   649     07B8  3400               	retlw	0
   650     07B9  34E1               	retlw	225
   651     07BA  34F5               	retlw	245
   652     07BB  3405               	retlw	5
   653     07BC  3400               	retlw	0
   654     07BD  34CA               	retlw	202
   655     07BE  349A               	retlw	154
   656     07BF  343B               	retlw	59
   657     07C0                     __end_of_dpowers:
   658     001A                     _RCREG	set	26
   659     0019                     _TXREG	set	25
   660     0018                     _RCSTAbits	set	24
   661     001E                     _ADRESH	set	30
   662     001F                     _ADCON0bits	set	31
   663     0006                     _PORTBbits	set	6
   664     0008                     _PORTDbits	set	8
   665     0009                     _PORTE	set	9
   666     0008                     _PORTD	set	8
   667     0007                     _PORTC	set	7
   668     0006                     _PORTB	set	6
   669     0005                     _PORTA	set	5
   670     0001                     _TMR0	set	1
   671     000B                     _INTCONbits	set	11
   672     000C                     _PIR1bits	set	12
   673     0064                     _TXIF	set	100
   674     0047                     _RD7	set	71
   675     0046                     _RD6	set	70
   676     0045                     _RD5	set	69
   677     0044                     _RD4	set	68
   678     0043                     _RD3	set	67
   679     0042                     _RD2	set	66
   680     0041                     _RD1	set	65
   681     0098                     _TXSTAbits	set	152
   682     0099                     _SPBRG	set	153
   683     009F                     _ADCON1bits	set	159
   684     0081                     _OPTION_REGbits	set	129
   685     008C                     _PIE1bits	set	140
   686     008F                     _OSCCONbits	set	143
   687     0089                     _TRISE	set	137
   688     0088                     _TRISD	set	136
   689     0087                     _TRISC	set	135
   690     0086                     _TRISB	set	134
   691     0085                     _TRISA	set	133
   692     0189                     _ANSELH	set	393
   693     0188                     _ANSEL	set	392
   694     07C0                     STR_1:
   695     07C0  340D               	retlw	13
   696     07C1  3453               	retlw	83	;'S'
   697     07C2  3469               	retlw	105	;'i'
   698     07C3  3467               	retlw	103	;'g'
   699     07C4  346E               	retlw	110	;'n'
   700     07C5  346F               	retlw	111	;'o'
   701     07C6  340D               	retlw	13
   702     07C7  3400               	retlw	0
   703     07C8                     STR_5:
   704     07C8  3425               	retlw	37	;'%'
   705     07C9  342E               	retlw	46	;'.'
   706     07CA  3432               	retlw	50	;'2'
   707     07CB  3466               	retlw	102	;'f'
   708     07CC  3400               	retlw	0
   709     07CD                     STR_4:
   710     07CD  3443               	retlw	67	;'C'
   711     07CE  344F               	retlw	79	;'O'
   712     07CF  344E               	retlw	78	;'N'
   713     07D0  3400               	retlw	0
   714     07D1                     STR_2:
   715     07D1  3453               	retlw	83	;'S'
   716     07D2  3431               	retlw	49	;'1'
   717     07D3  3400               	retlw	0
   718     07D4                     STR_3:
   719     07D4  3453               	retlw	83	;'S'
   720     07D5  3432               	retlw	50	;'2'
   721     07D6  3400               	retlw	0
   722     07D7                     STR_6:
   723     07D7  3456               	retlw	86	;'V'
   724     07D8  3400               	retlw	0
   725     07D7                     
   726                           	psect	cinit
   727     000F                     start_initialization:	
   728                           ; #config settings
   729                           
   730     000F                     __initialization:
   731                           
   732                           ; Clear objects allocated to COMMON
   733     000F  01FB               	clrf	__pbssCOMMON& (0+127)
   734                           
   735                           ; Clear objects allocated to BANK1
   736     0010  1383               	bcf	3,7	;select IRP bank0
   737     0011  30CA               	movlw	low __pbssBANK1
   738     0012  0084               	movwf	4
   739     0013  30EF               	movlw	low (__pbssBANK1+37)
   740     0014  160A  158A  208A  120A  118A  	fcall	clear_ram0
   741     0019                     end_of_initialization:	
   742                           ;End of C runtime variable initialization code
   743                           
   744     0019                     __end_of__initialization:
   745     0019  0183               	clrf	3
   746     001A  160A  118A  2D97   	ljmp	_main	;jump to C main() function
   747                           
   748                           	psect	bssCOMMON
   749     007B                     __pbssCOMMON:
   750     007B                     _signo:
   751     007B                     	ds	1
   752                           
   753                           	psect	bssBANK1
   754     00CA                     __pbssBANK1:
   755     00CA                     _ADC_Voltaje:
   756     00CA                     	ds	4
   757     00CE                     _prueba:
   758     00CE                     	ds	4
   759     00D2                     _VOLTAJE2:
   760     00D2                     	ds	4
   761     00D6                     _VOLTAJE1:
   762     00D6                     	ds	4
   763     00DA                     _valorADC:
   764     00DA                     	ds	4
   765     00DE                     _cont:
   766     00DE                     	ds	2
   767     00E0                     _voltaje2:
   768     00E0                     	ds	2
   769     00E2                     _voltaje1:
   770     00E2                     	ds	2
   771     00E4                     _ones:
   772     00E4                     	ds	1
   773     00E5                     _tens:
   774     00E5                     	ds	1
   775     00E6                     _hundreds:
   776     00E6                     	ds	1
   777     00E7                     _ADC2:
   778     00E7                     	ds	4
   779     00EB                     _ADC1:
   780     00EB                     	ds	4
   781                           
   782                           	psect	clrtext
   783     188A                     clear_ram0:	
   784                           ;	Called with FSR containing the base address, and
   785                           ;	W with the last address+1
   786                           
   787     188A  0064               	clrwdt	;clear the watchdog before getting into this loop
   788     188B                     clrloop0:
   789     188B  0180               	clrf	0	;clear RAM location pointed to by FSR
   790     188C  0A84               	incf	4,f	;increment pointer
   791     188D  0604               	xorwf	4,w	;XOR with final address
   792     188E  1903               	btfsc	3,2	;have we reached the end yet?
   793     188F  3400               	retlw	0	;all done for this memory range, return
   794     1890  0604               	xorwf	4,w	;XOR again to restore value
   795     1891  288B               	goto	clrloop0	;do the next byte
   796                           
   797                           	psect	cstackBANK1
   798     00A0                     __pcstackBANK1:
   799     00A0                     ?___flsub:
   800     00A0                     ___flsub@a:	
   801                           ; 4 bytes @ 0x0
   802                           
   803                           
   804                           ; 4 bytes @ 0x0
   805     00A0                     	ds	4
   806     00A4                     ___flsub@b:
   807                           
   808                           ; 4 bytes @ 0x4
   809     00A4                     	ds	4
   810     00A8                     ??_sprintf:
   811                           
   812                           ; 1 bytes @ 0x8
   813     00A8                     	ds	5
   814     00AD                     _sprintf$1273:
   815                           
   816                           ; 4 bytes @ 0xD
   817     00AD                     	ds	4
   818     00B1                     sprintf@ap:
   819                           
   820                           ; 1 bytes @ 0x11
   821     00B1                     	ds	1
   822     00B2                     sprintf@flag:
   823                           
   824                           ; 2 bytes @ 0x12
   825     00B2                     	ds	2
   826     00B4                     sprintf@val:
   827                           
   828                           ; 4 bytes @ 0x14
   829     00B4                     	ds	4
   830     00B8                     sprintf@eexp:
   831                           
   832                           ; 2 bytes @ 0x18
   833     00B8                     	ds	2
   834     00BA                     sprintf@tmpval:
   835                           
   836                           ; 4 bytes @ 0x1A
   837     00BA                     	ds	4
   838     00BE                     sprintf@sp:
   839                           
   840                           ; 1 bytes @ 0x1E
   841     00BE                     	ds	1
   842     00BF                     sprintf@prec:
   843                           
   844                           ; 2 bytes @ 0x1F
   845     00BF                     	ds	2
   846     00C1                     sprintf@fval:
   847                           
   848                           ; 4 bytes @ 0x21
   849     00C1                     	ds	4
   850     00C5                     sprintf@c:
   851                           
   852                           ; 1 bytes @ 0x25
   853     00C5                     	ds	1
   854     00C6                     _main$1269:
   855                           
   856                           ; 4 bytes @ 0x26
   857     00C6                     	ds	4
   858                           
   859                           	psect	cstackCOMMON
   860     0070                     __pcstackCOMMON:
   861     0070                     ?_isdigit:
   862     0070                     ?_UART_read_char:	
   863                           ; 1 bit 
   864                           
   865     0070                     ??_UART_read_char:	
   866                           ; 1 bytes @ 0x0
   867                           
   868     0070                     ?_setup:	
   869                           ; 1 bytes @ 0x0
   870                           
   871     0070                     ?_setupADC:	
   872                           ; 1 bytes @ 0x0
   873                           
   874     0070                     ?_Lcd_Init:	
   875                           ; 1 bytes @ 0x0
   876                           
   877     0070                     ?_Lcd_Clear:	
   878                           ; 1 bytes @ 0x0
   879                           
   880     0070                     ?_UART_write_char:	
   881                           ; 1 bytes @ 0x0
   882                           
   883     0070                     ?_Lcd_Write_Char:	
   884                           ; 1 bytes @ 0x0
   885                           
   886     0070                     ?_isr:	
   887                           ; 1 bytes @ 0x0
   888                           
   889     0070                     ??_isr:	
   890                           ; 1 bytes @ 0x0
   891                           
   892     0070                     ?_main:	
   893                           ; 1 bytes @ 0x0
   894                           
   895     0070                     ?_Lcd_Port:	
   896                           ; 1 bytes @ 0x0
   897                           
   898     0070                     ?_Lcd_Cmd:	
   899                           ; 1 bytes @ 0x0
   900                           
   901                           
   902                           ; 1 bytes @ 0x0
   903     0070                     	ds	2
   904     0072                     ?___fleq:
   905     0072                     ?___flge:	
   906                           ; 1 bit 
   907                           
   908     0072                     ??_setup:	
   909                           ; 1 bit 
   910                           
   911     0072                     ??_setupADC:	
   912                           ; 1 bytes @ 0x2
   913                           
   914     0072                     ?_UART_TX_config:	
   915                           ; 1 bytes @ 0x2
   916                           
   917     0072                     ?_UART_RX_config:	
   918                           ; 1 bytes @ 0x2
   919                           
   920     0072                     ??_UART_write_char:	
   921                           ; 1 bytes @ 0x2
   922                           
   923     0072                     ??_isdigit:	
   924                           ; 1 bytes @ 0x2
   925                           
   926     0072                     ??_Lcd_Port:	
   927                           ; 1 bytes @ 0x2
   928                           
   929     0072                     ?__Umul8_16:	
   930                           ; 1 bytes @ 0x2
   931                           
   932     0072                     ?___wmul:	
   933                           ; 2 bytes @ 0x2
   934                           
   935     0072                     ?___awmod:	
   936                           ; 2 bytes @ 0x2
   937                           
   938     0072                     ?___lwdiv:	
   939                           ; 2 bytes @ 0x2
   940                           
   941     0072                     ?__tdiv_to_l_:	
   942                           ; 2 bytes @ 0x2
   943                           
   944     0072                     ?__div_to_l_:	
   945                           ; 4 bytes @ 0x2
   946                           
   947     0072                     ?___lldiv:	
   948                           ; 4 bytes @ 0x2
   949                           
   950     0072                     ?___flneg:	
   951                           ; 4 bytes @ 0x2
   952                           
   953     0072                     ?___llmod:	
   954                           ; 4 bytes @ 0x2
   955                           
   956     0072                     ?___xxtofl:	
   957                           ; 4 bytes @ 0x2
   958                           
   959     0072                     Lcd_Port@a:	
   960                           ; 4 bytes @ 0x2
   961                           
   962     0072                     __Umul8_16@multiplicand:	
   963                           ; 1 bytes @ 0x2
   964                           
   965     0072                     _isdigit$1087:	
   966                           ; 1 bytes @ 0x2
   967                           
   968     0072                     UART_RX_config@baudrate:	
   969                           ; 1 bytes @ 0x2
   970                           
   971     0072                     UART_TX_config@baudrate:	
   972                           ; 2 bytes @ 0x2
   973                           
   974     0072                     ___wmul@multiplier:	
   975                           ; 2 bytes @ 0x2
   976                           
   977     0072                     ___awmod@divisor:	
   978                           ; 2 bytes @ 0x2
   979                           
   980     0072                     ___lwdiv@divisor:	
   981                           ; 2 bytes @ 0x2
   982                           
   983     0072                     ___lldiv@divisor:	
   984                           ; 2 bytes @ 0x2
   985                           
   986     0072                     __div_to_l_@f1:	
   987                           ; 4 bytes @ 0x2
   988                           
   989     0072                     ___fleq@ff1:	
   990                           ; 4 bytes @ 0x2
   991                           
   992     0072                     ___flge@ff1:	
   993                           ; 4 bytes @ 0x2
   994                           
   995     0072                     ___flneg@f1:	
   996                           ; 4 bytes @ 0x2
   997                           
   998     0072                     __tdiv_to_l_@f1:	
   999                           ; 4 bytes @ 0x2
  1000                           
  1001     0072                     ___llmod@divisor:	
  1002                           ; 4 bytes @ 0x2
  1003                           
  1004     0072                     ___xxtofl@val:	
  1005                           ; 4 bytes @ 0x2
  1006                           
  1007                           
  1008                           ; 4 bytes @ 0x2
  1009     0072                     	ds	1
  1010     0073                     ??_Lcd_Write_Char:
  1011     0073                     ??_Lcd_Cmd:	
  1012                           ; 1 bytes @ 0x3
  1013                           
  1014     0073                     UART_write_char@character:	
  1015                           ; 1 bytes @ 0x3
  1016                           
  1017     0073                     isdigit@c:	
  1018                           ; 1 bytes @ 0x3
  1019                           
  1020                           
  1021                           ; 1 bytes @ 0x3
  1022     0073                     	ds	1
  1023     0074                     ??_UART_TX_config:
  1024     0074                     ??_UART_RX_config:	
  1025                           ; 1 bytes @ 0x4
  1026                           
  1027     0074                     ??__Umul8_16:	
  1028                           ; 1 bytes @ 0x4
  1029                           
  1030     0074                     Lcd_Write_Char@a:	
  1031                           ; 1 bytes @ 0x4
  1032                           
  1033     0074                     ___wmul@multiplicand:	
  1034                           ; 1 bytes @ 0x4
  1035                           
  1036     0074                     ___awmod@dividend:	
  1037                           ; 2 bytes @ 0x4
  1038                           
  1039     0074                     ___lwdiv@dividend:	
  1040                           ; 2 bytes @ 0x4
  1041                           
  1042                           
  1043                           ; 2 bytes @ 0x4
  1044     0074                     	ds	1
  1045     0075                     ?_Lcd_Write_String:
  1046     0075                     Lcd_Cmd@a:	
  1047                           ; 1 bytes @ 0x5
  1048                           
  1049     0075                     Lcd_Write_String@a:	
  1050                           ; 1 bytes @ 0x5
  1051                           
  1052                           
  1053                           ; 2 bytes @ 0x5
  1054     0075                     	ds	1
  1055     0076                     ??_Lcd_Init:
  1056     0076                     ??_Lcd_Clear:	
  1057                           ; 1 bytes @ 0x6
  1058                           
  1059     0076                     ?_Lcd_Set_Cursor:	
  1060                           ; 1 bytes @ 0x6
  1061                           
  1062     0076                     ??___wmul:	
  1063                           ; 1 bytes @ 0x6
  1064                           
  1065     0076                     ??___awmod:	
  1066                           ; 1 bytes @ 0x6
  1067                           
  1068     0076                     ??___flneg:	
  1069                           ; 1 bytes @ 0x6
  1070                           
  1071     0076                     ??___lwdiv:	
  1072                           ; 1 bytes @ 0x6
  1073                           
  1074     0076                     ??___xxtofl:	
  1075                           ; 1 bytes @ 0x6
  1076                           
  1077     0076                     Lcd_Set_Cursor@b:	
  1078                           ; 1 bytes @ 0x6
  1079                           
  1080     0076                     ___wmul@product:	
  1081                           ; 1 bytes @ 0x6
  1082                           
  1083     0076                     __Umul8_16@product:	
  1084                           ; 2 bytes @ 0x6
  1085                           
  1086     0076                     ___lldiv@dividend:	
  1087                           ; 2 bytes @ 0x6
  1088                           
  1089     0076                     __div_to_l_@f2:	
  1090                           ; 4 bytes @ 0x6
  1091                           
  1092     0076                     ___fleq@ff2:	
  1093                           ; 4 bytes @ 0x6
  1094                           
  1095     0076                     ___flge@ff2:	
  1096                           ; 4 bytes @ 0x6
  1097                           
  1098     0076                     __tdiv_to_l_@f2:	
  1099                           ; 4 bytes @ 0x6
  1100                           
  1101     0076                     ___llmod@dividend:	
  1102                           ; 4 bytes @ 0x6
  1103                           
  1104                           
  1105                           ; 4 bytes @ 0x6
  1106     0076                     	ds	1
  1107     0077                     ??_Lcd_Set_Cursor:
  1108     0077                     ??_Lcd_Write_String:	
  1109                           ; 1 bytes @ 0x7
  1110                           
  1111     0077                     Lcd_Set_Cursor@a:	
  1112                           ; 1 bytes @ 0x7
  1113                           
  1114     0077                     ___awmod@counter:	
  1115                           ; 1 bytes @ 0x7
  1116                           
  1117     0077                     ___lwdiv@quotient:	
  1118                           ; 1 bytes @ 0x7
  1119                           
  1120                           
  1121                           ; 2 bytes @ 0x7
  1122     0077                     	ds	1
  1123     0078                     Lcd_Set_Cursor@temp:
  1124     0078                     ___awmod@sign:	
  1125                           ; 1 bytes @ 0x8
  1126                           
  1127     0078                     __Umul8_16@word_mpld:	
  1128                           ; 1 bytes @ 0x8
  1129                           
  1130                           
  1131                           ; 2 bytes @ 0x8
  1132     0078                     	ds	1
  1133     0079                     ??___awdiv:
  1134     0079                     ___lwdiv@counter:	
  1135                           ; 1 bytes @ 0x9
  1136                           
  1137                           
  1138                           ; 1 bytes @ 0x9
  1139     0079                     	ds	1
  1140     007A                     ??__div_to_l_:
  1141     007A                     ??___lldiv:	
  1142                           ; 1 bytes @ 0xA
  1143                           
  1144     007A                     ??___llmod:	
  1145                           ; 1 bytes @ 0xA
  1146                           
  1147     007A                     ??___lwmod:	
  1148                           ; 1 bytes @ 0xA
  1149                           
  1150     007A                     __Umul8_16@multiplier:	
  1151                           ; 1 bytes @ 0xA
  1152                           
  1153                           
  1154                           ; 1 bytes @ 0xA
  1155     007A                     	ds	1
  1156     007B                     ??_main:
  1157     007B                     ??___flsub:	
  1158                           ; 1 bytes @ 0xB
  1159                           
  1160                           
  1161                           	psect	cstackBANK0
  1162     0020                     __pcstackBANK0:	
  1163                           ; 1 bytes @ 0xB
  1164                           
  1165     0020                     ??__tdiv_to_l_:
  1166     0020                     ??___fleq:	
  1167                           ; 1 bytes @ 0x0
  1168                           
  1169     0020                     ??___flge:	
  1170                           ; 1 bytes @ 0x0
  1171                           
  1172     0020                     ?___awdiv:	
  1173                           ; 1 bytes @ 0x0
  1174                           
  1175     0020                     ?___lwmod:	
  1176                           ; 2 bytes @ 0x0
  1177                           
  1178     0020                     ___llmod@counter:	
  1179                           ; 2 bytes @ 0x0
  1180                           
  1181     0020                     ___xxtofl@sign:	
  1182                           ; 1 bytes @ 0x0
  1183                           
  1184     0020                     Lcd_Write_String@i:	
  1185                           ; 1 bytes @ 0x0
  1186                           
  1187     0020                     ___awdiv@divisor:	
  1188                           ; 2 bytes @ 0x0
  1189                           
  1190     0020                     ___lwmod@divisor:	
  1191                           ; 2 bytes @ 0x0
  1192                           
  1193     0020                     ___lldiv@quotient:	
  1194                           ; 2 bytes @ 0x0
  1195                           
  1196     0020                     __div_to_l_@quot:	
  1197                           ; 4 bytes @ 0x0
  1198                           
  1199                           
  1200                           ; 4 bytes @ 0x0
  1201     0020                     	ds	1
  1202     0021                     ___xxtofl@exp:
  1203                           
  1204                           ; 1 bytes @ 0x1
  1205     0021                     	ds	1
  1206     0022                     ___awdiv@dividend:
  1207     0022                     ___lwmod@dividend:	
  1208                           ; 2 bytes @ 0x2
  1209                           
  1210     0022                     ___xxtofl@arg:	
  1211                           ; 2 bytes @ 0x2
  1212                           
  1213                           
  1214                           ; 4 bytes @ 0x2
  1215     0022                     	ds	1
  1216     0023                     __tdiv_to_l_@quot:
  1217                           
  1218                           ; 4 bytes @ 0x3
  1219     0023                     	ds	1
  1220     0024                     ___lldiv@counter:
  1221     0024                     ___awdiv@counter:	
  1222                           ; 1 bytes @ 0x4
  1223                           
  1224     0024                     __div_to_l_@cntr:	
  1225                           ; 1 bytes @ 0x4
  1226                           
  1227     0024                     ___lwmod@counter:	
  1228                           ; 1 bytes @ 0x4
  1229                           
  1230                           
  1231                           ; 1 bytes @ 0x4
  1232     0024                     	ds	1
  1233     0025                     ___awdiv@sign:
  1234     0025                     __div_to_l_@exp1:	
  1235                           ; 1 bytes @ 0x5
  1236                           
  1237                           
  1238                           ; 1 bytes @ 0x5
  1239     0025                     	ds	1
  1240     0026                     ___awdiv@quotient:
  1241                           
  1242                           ; 2 bytes @ 0x6
  1243     0026                     	ds	1
  1244     0027                     __tdiv_to_l_@cntr:
  1245                           
  1246                           ; 1 bytes @ 0x7
  1247     0027                     	ds	1
  1248     0028                     ?___flmul:
  1249     0028                     __tdiv_to_l_@exp1:	
  1250                           ; 4 bytes @ 0x8
  1251                           
  1252     0028                     ___flmul@b:	
  1253                           ; 1 bytes @ 0x8
  1254                           
  1255                           
  1256                           ; 4 bytes @ 0x8
  1257     0028                     	ds	4
  1258     002C                     ___flmul@a:
  1259                           
  1260                           ; 4 bytes @ 0xC
  1261     002C                     	ds	4
  1262     0030                     ??___flmul:
  1263                           
  1264                           ; 1 bytes @ 0x10
  1265     0030                     	ds	5
  1266     0035                     ___flmul@sign:
  1267                           
  1268                           ; 1 bytes @ 0x15
  1269     0035                     	ds	1
  1270     0036                     ___flmul@grs:
  1271                           
  1272                           ; 4 bytes @ 0x16
  1273     0036                     	ds	4
  1274     003A                     ___flmul@aexp:
  1275                           
  1276                           ; 1 bytes @ 0x1A
  1277     003A                     	ds	1
  1278     003B                     ___flmul@bexp:
  1279                           
  1280                           ; 1 bytes @ 0x1B
  1281     003B                     	ds	1
  1282     003C                     ___flmul@prod:
  1283                           
  1284                           ; 4 bytes @ 0x1C
  1285     003C                     	ds	4
  1286     0040                     ___flmul@temp:
  1287                           
  1288                           ; 2 bytes @ 0x20
  1289     0040                     	ds	2
  1290     0042                     ?_fround:
  1291     0042                     ?_scale:	
  1292                           ; 4 bytes @ 0x22
  1293                           
  1294     0042                     ?___fldiv:	
  1295                           ; 4 bytes @ 0x22
  1296                           
  1297     0042                     ___fldiv@a:	
  1298                           ; 4 bytes @ 0x22
  1299                           
  1300                           
  1301                           ; 4 bytes @ 0x22
  1302     0042                     	ds	4
  1303     0046                     ??_fround:
  1304     0046                     ??_scale:	
  1305                           ; 1 bytes @ 0x26
  1306                           
  1307     0046                     ___fldiv@b:	
  1308                           ; 1 bytes @ 0x26
  1309                           
  1310                           
  1311                           ; 4 bytes @ 0x26
  1312     0046                     	ds	4
  1313     004A                     ??___fldiv:
  1314                           
  1315                           ; 1 bytes @ 0x2A
  1316     004A                     	ds	3
  1317     004D                     _fround$1271:
  1318                           
  1319                           ; 4 bytes @ 0x2D
  1320     004D                     	ds	2
  1321     004F                     ___fldiv@rem:
  1322                           
  1323                           ; 4 bytes @ 0x2F
  1324     004F                     	ds	1
  1325     0050                     _scale$1272:
  1326                           
  1327                           ; 4 bytes @ 0x30
  1328     0050                     	ds	1
  1329     0051                     _fround$1270:
  1330                           
  1331                           ; 4 bytes @ 0x31
  1332     0051                     	ds	2
  1333     0053                     ___fldiv@sign:
  1334                           
  1335                           ; 1 bytes @ 0x33
  1336     0053                     	ds	1
  1337     0054                     scale@scl:
  1338     0054                     ___fldiv@new_exp:	
  1339                           ; 1 bytes @ 0x34
  1340                           
  1341                           
  1342                           ; 2 bytes @ 0x34
  1343     0054                     	ds	1
  1344     0055                     ?___fltol:
  1345     0055                     fround@prec:	
  1346                           ; 4 bytes @ 0x35
  1347                           
  1348     0055                     ___fltol@f1:	
  1349                           ; 1 bytes @ 0x35
  1350                           
  1351                           
  1352                           ; 4 bytes @ 0x35
  1353     0055                     	ds	1
  1354     0056                     ?___fladd:
  1355     0056                     ___fladd@b:	
  1356                           ; 4 bytes @ 0x36
  1357                           
  1358     0056                     ___fldiv@grs:	
  1359                           ; 4 bytes @ 0x36
  1360                           
  1361                           
  1362                           ; 4 bytes @ 0x36
  1363     0056                     	ds	3
  1364     0059                     ??___fltol:
  1365                           
  1366                           ; 1 bytes @ 0x39
  1367     0059                     	ds	1
  1368     005A                     ___fldiv@bexp:
  1369     005A                     ___fladd@a:	
  1370                           ; 1 bytes @ 0x3A
  1371                           
  1372                           
  1373                           ; 4 bytes @ 0x3A
  1374     005A                     	ds	1
  1375     005B                     ___fldiv@aexp:
  1376                           
  1377                           ; 1 bytes @ 0x3B
  1378     005B                     	ds	2
  1379     005D                     ___fltol@sign1:
  1380                           
  1381                           ; 1 bytes @ 0x3D
  1382     005D                     	ds	1
  1383     005E                     ??___fladd:
  1384     005E                     ___fltol@exp1:	
  1385                           ; 1 bytes @ 0x3E
  1386                           
  1387                           
  1388                           ; 1 bytes @ 0x3E
  1389     005E                     	ds	1
  1390     005F                     ?_readADC:
  1391     005F                     readADC@canal:	
  1392                           ; 2 bytes @ 0x3F
  1393                           
  1394                           
  1395                           ; 2 bytes @ 0x3F
  1396     005F                     	ds	2
  1397     0061                     ??_readADC:
  1398                           
  1399                           ; 1 bytes @ 0x41
  1400     0061                     	ds	5
  1401     0066                     ___fladd@signs:
  1402                           
  1403                           ; 1 bytes @ 0x46
  1404     0066                     	ds	1
  1405     0067                     ___fladd@aexp:
  1406                           
  1407                           ; 1 bytes @ 0x47
  1408     0067                     	ds	1
  1409     0068                     ___fladd@bexp:
  1410                           
  1411                           ; 1 bytes @ 0x48
  1412     0068                     	ds	1
  1413     0069                     ___fladd@grs:
  1414                           
  1415                           ; 1 bytes @ 0x49
  1416     0069                     	ds	1
  1417     006A                     ?_sprintf:
  1418     006A                     sprintf@f:	
  1419                           ; 2 bytes @ 0x4A
  1420                           
  1421                           
  1422                           ; 1 bytes @ 0x4A
  1423     006A                     	ds	5
  1424                           
  1425                           	psect	maintext
  1426     1597                     __pmaintext:	
  1427 ;;
  1428 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1429 ;;
  1430 ;; *************** function _main *****************
  1431 ;; Defined at:
  1432 ;;		line 138 in file "main.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;		None
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;		None
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  1    wreg      void 
  1439 ;; Registers used:
  1440 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1441 ;; Tracked objects:
  1442 ;;		On entry : B00/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1446 ;;      Params:         0       0       0       0       0
  1447 ;;      Locals:         0       0       4       0       0
  1448 ;;      Temps:          0       0       0       0       0
  1449 ;;      Totals:         0       0       4       0       0
  1450 ;;Total ram usage:        4 bytes
  1451 ;; Hardware stack levels required when called: 6
  1452 ;; This function calls:
  1453 ;;		_Lcd_Clear
  1454 ;;		_Lcd_Init
  1455 ;;		_Lcd_Set_Cursor
  1456 ;;		_Lcd_Write_Char
  1457 ;;		_Lcd_Write_String
  1458 ;;		_UART_RX_config
  1459 ;;		_UART_TX_config
  1460 ;;		_UART_write_char
  1461 ;;		___fldiv
  1462 ;;		___flmul
  1463 ;;		___lwdiv
  1464 ;;		___lwmod
  1465 ;;		___xxtofl
  1466 ;;		_readADC
  1467 ;;		_setup
  1468 ;;		_setupADC
  1469 ;;		_sprintf
  1470 ;; This function is called by:
  1471 ;;		Startup code after reset
  1472 ;; This function uses a non-reentrant model
  1473 ;;
  1474                           
  1475     1597                     _main:	
  1476                           ;psect for function _main
  1477                           
  1478     1597                     l4375:	
  1479                           ;incstack = 0
  1480                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1481                           
  1482                           
  1483                           ;main.c: 139:     setup();
  1484     1597  160A  158A  2166  160A  118A  	fcall	_setup
  1485                           
  1486                           ;main.c: 140:     setupADC();
  1487     159C  160A  158A  20CF  160A  118A  	fcall	_setupADC
  1488                           
  1489                           ;main.c: 141:     Lcd_Init();
  1490     15A1  160A  158A  23E8  160A  118A  	fcall	_Lcd_Init
  1491                           
  1492                           ;main.c: 142:     Lcd_Clear();
  1493     15A6  160A  158A  2083  160A  118A  	fcall	_Lcd_Clear
  1494                           
  1495                           ;main.c: 143:     UART_TX_config(9600);
  1496     15AB  3080               	movlw	128
  1497     15AC  00F2               	movwf	UART_TX_config@baudrate
  1498     15AD  3025               	movlw	37
  1499     15AE  00F3               	movwf	UART_TX_config@baudrate+1
  1500     15AF  120A  158A  2000  160A  118A  	fcall	_UART_TX_config
  1501                           
  1502                           ;main.c: 144:     UART_RX_config(9600);
  1503     15B4  3080               	movlw	128
  1504     15B5  00F2               	movwf	UART_RX_config@baudrate
  1505     15B6  3025               	movlw	37
  1506     15B7  00F3               	movwf	UART_RX_config@baudrate+1
  1507     15B8  160A  158A  2092  160A  118A  	fcall	_UART_RX_config
  1508     15BD                     l4377:
  1509                           
  1510                           ;main.c: 145:     cont=0;
  1511     15BD  1683               	bsf	3,5	;RP0=1, select bank1
  1512     15BE  1303               	bcf	3,6	;RP1=0, select bank1
  1513     15BF  01DE               	clrf	_cont^(0+128)
  1514     15C0  01DF               	clrf	(_cont+1)^(0+128)
  1515     15C1                     l4379:
  1516                           
  1517                           ;main.c: 148:     UART_write_char("\rSigno\r");
  1518     15C1  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1519     15C2  160A  158A  2120  160A  118A  	fcall	_UART_write_char
  1520     15C7                     l4381:
  1521                           
  1522                           ;main.c: 154:         Lcd_Set_Cursor(1,2);
  1523     15C7  3002               	movlw	2
  1524     15C8  00F6               	movwf	Lcd_Set_Cursor@b
  1525     15C9  3001               	movlw	1
  1526     15CA  160A  158A  2100  160A  118A  	fcall	_Lcd_Set_Cursor
  1527     15CF                     l4383:
  1528                           
  1529                           ;main.c: 155:         Lcd_Write_String("S1");
  1530     15CF  30A2               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1531     15D0  00F5               	movwf	Lcd_Write_String@a
  1532     15D1  3080               	movlw	128
  1533     15D2  00F6               	movwf	Lcd_Write_String@a+1
  1534     15D3  160A  158A  2253  160A  118A  	fcall	_Lcd_Write_String
  1535     15D8                     l4385:
  1536                           
  1537                           ;main.c: 156:         Lcd_Set_Cursor(1,8);
  1538     15D8  3008               	movlw	8
  1539     15D9  00F6               	movwf	Lcd_Set_Cursor@b
  1540     15DA  3001               	movlw	1
  1541     15DB  160A  158A  2100  160A  118A  	fcall	_Lcd_Set_Cursor
  1542     15E0                     l4387:
  1543                           
  1544                           ;main.c: 157:         Lcd_Write_String("S2");
  1545     15E0  30A5               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1546     15E1  00F5               	movwf	Lcd_Write_String@a
  1547     15E2  3080               	movlw	128
  1548     15E3  00F6               	movwf	Lcd_Write_String@a+1
  1549     15E4  160A  158A  2253  160A  118A  	fcall	_Lcd_Write_String
  1550     15E9                     l4389:
  1551                           
  1552                           ;main.c: 158:         Lcd_Set_Cursor(1,14);
  1553     15E9  300E               	movlw	14
  1554     15EA  00F6               	movwf	Lcd_Set_Cursor@b
  1555     15EB  3001               	movlw	1
  1556     15EC  160A  158A  2100  160A  118A  	fcall	_Lcd_Set_Cursor
  1557     15F1                     l4391:
  1558                           
  1559                           ;main.c: 159:         Lcd_Write_String("CON");
  1560     15F1  309E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1561     15F2  00F5               	movwf	Lcd_Write_String@a
  1562     15F3  3080               	movlw	128
  1563     15F4  00F6               	movwf	Lcd_Write_String@a+1
  1564     15F5  160A  158A  2253  160A  118A  	fcall	_Lcd_Write_String
  1565     15FA                     l4393:
  1566                           
  1567                           ;main.c: 163:         Lcd_Set_Cursor(2,1);
  1568     15FA  01F6               	clrf	Lcd_Set_Cursor@b
  1569     15FB  0AF6               	incf	Lcd_Set_Cursor@b,f
  1570     15FC  3002               	movlw	2
  1571     15FD  160A  158A  2100  160A  118A  	fcall	_Lcd_Set_Cursor
  1572     1602                     l4395:
  1573                           
  1574                           ;main.c: 164:         valorADC = readADC(0);
  1575     1602  3000               	movlw	0
  1576     1603  1283               	bcf	3,5	;RP0=0, select bank0
  1577     1604  1303               	bcf	3,6	;RP1=0, select bank0
  1578     1605  00DF               	movwf	readADC@canal
  1579     1606  00E0               	movwf	readADC@canal+1
  1580     1607  120A  158A  2007  160A  118A  	fcall	_readADC
  1581     160C  1283               	bcf	3,5	;RP0=0, select bank0
  1582     160D  1303               	bcf	3,6	;RP1=0, select bank0
  1583     160E  085F               	movf	?_readADC,w
  1584     160F  1683               	bsf	3,5	;RP0=1, select bank1
  1585     1610  1303               	bcf	3,6	;RP1=0, select bank1
  1586     1611  00C6               	movwf	_main$1269^(0+128)
  1587     1612  1283               	bcf	3,5	;RP0=0, select bank0
  1588     1613  1303               	bcf	3,6	;RP1=0, select bank0
  1589     1614  0860               	movf	?_readADC+1,w
  1590     1615  1683               	bsf	3,5	;RP0=1, select bank1
  1591     1616  1303               	bcf	3,6	;RP1=0, select bank1
  1592     1617  00C7               	movwf	(_main$1269+1)^(0+128)
  1593     1618  3000               	movlw	0
  1594     1619  1BC7               	btfsc	(_main$1269+1)^(0+128),7
  1595     161A  30FF               	movlw	255
  1596     161B  00C8               	movwf	(_main$1269+2)^(0+128)
  1597     161C  00C9               	movwf	(_main$1269+3)^(0+128)
  1598     161D                     l4397:
  1599                           
  1600                           ;main.c: 164:         valorADC = readADC(0);
  1601     161D  0849               	movf	(_main$1269+3)^(0+128),w
  1602     161E  00F5               	movwf	___xxtofl@val+3
  1603     161F  0848               	movf	(_main$1269+2)^(0+128),w
  1604     1620  00F4               	movwf	___xxtofl@val+2
  1605     1621  0847               	movf	(_main$1269+1)^(0+128),w
  1606     1622  00F3               	movwf	___xxtofl@val+1
  1607     1623  0846               	movf	_main$1269^(0+128),w
  1608     1624  00F2               	movwf	___xxtofl@val
  1609     1625  3001               	movlw	1
  1610     1626  120A  118A  2666  160A  118A  	fcall	___xxtofl
  1611     162B  0875               	movf	?___xxtofl+3,w
  1612     162C  1683               	bsf	3,5	;RP0=1, select bank1
  1613     162D  1303               	bcf	3,6	;RP1=0, select bank1
  1614     162E  00DD               	movwf	(_valorADC+3)^(0+128)
  1615     162F  0874               	movf	?___xxtofl+2,w
  1616     1630  00DC               	movwf	(_valorADC+2)^(0+128)
  1617     1631  0873               	movf	?___xxtofl+1,w
  1618     1632  00DB               	movwf	(_valorADC+1)^(0+128)
  1619     1633  0872               	movf	?___xxtofl,w
  1620     1634  00DA               	movwf	_valorADC^(0+128)
  1621     1635                     l4399:
  1622                           
  1623                           ;main.c: 165:         VOLTAJE1 = (valorADC*5)/255;
  1624     1635  3043               	movlw	67
  1625     1636  1283               	bcf	3,5	;RP0=0, select bank0
  1626     1637  1303               	bcf	3,6	;RP1=0, select bank0
  1627     1638  00C5               	movwf	___fldiv@a+3
  1628     1639  307F               	movlw	127
  1629     163A  00C4               	movwf	___fldiv@a+2
  1630     163B  3000               	movlw	0
  1631     163C  00C3               	movwf	___fldiv@a+1
  1632     163D  3000               	movlw	0
  1633     163E  00C2               	movwf	___fldiv@a
  1634     163F  3040               	movlw	64
  1635     1640  00AB               	movwf	___flmul@b+3
  1636     1641  30A0               	movlw	160
  1637     1642  00AA               	movwf	___flmul@b+2
  1638     1643  3000               	movlw	0
  1639     1644  00A9               	movwf	___flmul@b+1
  1640     1645  3000               	movlw	0
  1641     1646  00A8               	movwf	___flmul@b
  1642     1647  1683               	bsf	3,5	;RP0=1, select bank1
  1643     1648  1303               	bcf	3,6	;RP1=0, select bank1
  1644     1649  085D               	movf	(_valorADC+3)^(0+128),w
  1645     164A  1283               	bcf	3,5	;RP0=0, select bank0
  1646     164B  1303               	bcf	3,6	;RP1=0, select bank0
  1647     164C  00AF               	movwf	___flmul@a+3
  1648     164D  1683               	bsf	3,5	;RP0=1, select bank1
  1649     164E  1303               	bcf	3,6	;RP1=0, select bank1
  1650     164F  085C               	movf	(_valorADC+2)^(0+128),w
  1651     1650  1283               	bcf	3,5	;RP0=0, select bank0
  1652     1651  1303               	bcf	3,6	;RP1=0, select bank0
  1653     1652  00AE               	movwf	___flmul@a+2
  1654     1653  1683               	bsf	3,5	;RP0=1, select bank1
  1655     1654  1303               	bcf	3,6	;RP1=0, select bank1
  1656     1655  085B               	movf	(_valorADC+1)^(0+128),w
  1657     1656  1283               	bcf	3,5	;RP0=0, select bank0
  1658     1657  1303               	bcf	3,6	;RP1=0, select bank0
  1659     1658  00AD               	movwf	___flmul@a+1
  1660     1659  1683               	bsf	3,5	;RP0=1, select bank1
  1661     165A  1303               	bcf	3,6	;RP1=0, select bank1
  1662     165B  085A               	movf	_valorADC^(0+128),w
  1663     165C  1283               	bcf	3,5	;RP0=0, select bank0
  1664     165D  1303               	bcf	3,6	;RP1=0, select bank0
  1665     165E  00AC               	movwf	___flmul@a
  1666     165F  120A  158A  2158  160A  118A  	fcall	___flmul
  1667     1664  1283               	bcf	3,5	;RP0=0, select bank0
  1668     1665  1303               	bcf	3,6	;RP1=0, select bank0
  1669     1666  082B               	movf	?___flmul+3,w
  1670     1667  00C9               	movwf	___fldiv@b+3
  1671     1668  082A               	movf	?___flmul+2,w
  1672     1669  00C8               	movwf	___fldiv@b+2
  1673     166A  0829               	movf	?___flmul+1,w
  1674     166B  00C7               	movwf	___fldiv@b+1
  1675     166C  0828               	movf	?___flmul,w
  1676     166D  00C6               	movwf	___fldiv@b
  1677     166E  160A  158A  262D  160A  118A  	fcall	___fldiv
  1678     1673  1283               	bcf	3,5	;RP0=0, select bank0
  1679     1674  1303               	bcf	3,6	;RP1=0, select bank0
  1680     1675  0845               	movf	?___fldiv+3,w
  1681     1676  1683               	bsf	3,5	;RP0=1, select bank1
  1682     1677  1303               	bcf	3,6	;RP1=0, select bank1
  1683     1678  00D9               	movwf	(_VOLTAJE1+3)^(0+128)
  1684     1679  1283               	bcf	3,5	;RP0=0, select bank0
  1685     167A  1303               	bcf	3,6	;RP1=0, select bank0
  1686     167B  0844               	movf	?___fldiv+2,w
  1687     167C  1683               	bsf	3,5	;RP0=1, select bank1
  1688     167D  1303               	bcf	3,6	;RP1=0, select bank1
  1689     167E  00D8               	movwf	(_VOLTAJE1+2)^(0+128)
  1690     167F  1283               	bcf	3,5	;RP0=0, select bank0
  1691     1680  1303               	bcf	3,6	;RP1=0, select bank0
  1692     1681  0843               	movf	?___fldiv+1,w
  1693     1682  1683               	bsf	3,5	;RP0=1, select bank1
  1694     1683  1303               	bcf	3,6	;RP1=0, select bank1
  1695     1684  00D7               	movwf	(_VOLTAJE1+1)^(0+128)
  1696     1685  1283               	bcf	3,5	;RP0=0, select bank0
  1697     1686  1303               	bcf	3,6	;RP1=0, select bank0
  1698     1687  0842               	movf	?___fldiv,w
  1699     1688  1683               	bsf	3,5	;RP0=1, select bank1
  1700     1689  1303               	bcf	3,6	;RP1=0, select bank1
  1701     168A  00D6               	movwf	_VOLTAJE1^(0+128)
  1702     168B                     l4401:
  1703                           
  1704                           ;main.c: 166:         sprintf(ADC1,"%.2f", VOLTAJE1);
  1705     168B  3099               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1706     168C  1283               	bcf	3,5	;RP0=0, select bank0
  1707     168D  1303               	bcf	3,6	;RP1=0, select bank0
  1708     168E  00EA               	movwf	sprintf@f
  1709     168F  1683               	bsf	3,5	;RP0=1, select bank1
  1710     1690  1303               	bcf	3,6	;RP1=0, select bank1
  1711     1691  0859               	movf	(_VOLTAJE1+3)^(0+128),w
  1712     1692  1283               	bcf	3,5	;RP0=0, select bank0
  1713     1693  1303               	bcf	3,6	;RP1=0, select bank0
  1714     1694  00EE               	movwf	?_sprintf+4
  1715     1695  1683               	bsf	3,5	;RP0=1, select bank1
  1716     1696  1303               	bcf	3,6	;RP1=0, select bank1
  1717     1697  0858               	movf	(_VOLTAJE1+2)^(0+128),w
  1718     1698  1283               	bcf	3,5	;RP0=0, select bank0
  1719     1699  1303               	bcf	3,6	;RP1=0, select bank0
  1720     169A  00ED               	movwf	?_sprintf+3
  1721     169B  1683               	bsf	3,5	;RP0=1, select bank1
  1722     169C  1303               	bcf	3,6	;RP1=0, select bank1
  1723     169D  0857               	movf	(_VOLTAJE1+1)^(0+128),w
  1724     169E  1283               	bcf	3,5	;RP0=0, select bank0
  1725     169F  1303               	bcf	3,6	;RP1=0, select bank0
  1726     16A0  00EC               	movwf	?_sprintf+2
  1727     16A1  1683               	bsf	3,5	;RP0=1, select bank1
  1728     16A2  1303               	bcf	3,6	;RP1=0, select bank1
  1729     16A3  0856               	movf	_VOLTAJE1^(0+128),w
  1730     16A4  1283               	bcf	3,5	;RP0=0, select bank0
  1731     16A5  1303               	bcf	3,6	;RP1=0, select bank0
  1732     16A6  00EB               	movwf	?_sprintf+1
  1733     16A7  30EB               	movlw	(low (_ADC1| 0))& (0+255)
  1734     16A8  120A  118A  201D  160A  118A  	fcall	_sprintf
  1735     16AD                     l4403:
  1736                           
  1737                           ;main.c: 167:         Lcd_Write_String(ADC1);
  1738     16AD  30EB               	movlw	(low (_ADC1| 0))& (0+255)
  1739     16AE  00F5               	movwf	Lcd_Write_String@a
  1740     16AF  3000               	movlw	0
  1741     16B0  00F6               	movwf	Lcd_Write_String@a+1
  1742     16B1  160A  158A  2253  160A  118A  	fcall	_Lcd_Write_String
  1743     16B6                     l4405:
  1744                           
  1745                           ;main.c: 168:         Lcd_Write_String("V");
  1746     16B6  30A8               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1747     16B7  00F5               	movwf	Lcd_Write_String@a
  1748     16B8  3080               	movlw	128
  1749     16B9  00F6               	movwf	Lcd_Write_String@a+1
  1750     16BA  160A  158A  2253  160A  118A  	fcall	_Lcd_Write_String
  1751     16BF                     l4407:
  1752                           
  1753                           ;main.c: 171:         Lcd_Set_Cursor(2,7);
  1754     16BF  3007               	movlw	7
  1755     16C0  00F6               	movwf	Lcd_Set_Cursor@b
  1756     16C1  3002               	movlw	2
  1757     16C2  160A  158A  2100  160A  118A  	fcall	_Lcd_Set_Cursor
  1758     16C7                     l4409:
  1759                           
  1760                           ;main.c: 172:         valorADC = readADC(1);
  1761     16C7  3001               	movlw	1
  1762     16C8  1283               	bcf	3,5	;RP0=0, select bank0
  1763     16C9  1303               	bcf	3,6	;RP1=0, select bank0
  1764     16CA  00DF               	movwf	readADC@canal
  1765     16CB  3000               	movlw	0
  1766     16CC  00E0               	movwf	readADC@canal+1
  1767     16CD  120A  158A  2007  160A  118A  	fcall	_readADC
  1768     16D2  1283               	bcf	3,5	;RP0=0, select bank0
  1769     16D3  1303               	bcf	3,6	;RP1=0, select bank0
  1770     16D4  085F               	movf	?_readADC,w
  1771     16D5  1683               	bsf	3,5	;RP0=1, select bank1
  1772     16D6  1303               	bcf	3,6	;RP1=0, select bank1
  1773     16D7  00C6               	movwf	_main$1269^(0+128)
  1774     16D8  1283               	bcf	3,5	;RP0=0, select bank0
  1775     16D9  1303               	bcf	3,6	;RP1=0, select bank0
  1776     16DA  0860               	movf	?_readADC+1,w
  1777     16DB  1683               	bsf	3,5	;RP0=1, select bank1
  1778     16DC  1303               	bcf	3,6	;RP1=0, select bank1
  1779     16DD  00C7               	movwf	(_main$1269+1)^(0+128)
  1780     16DE  3000               	movlw	0
  1781     16DF  1BC7               	btfsc	(_main$1269+1)^(0+128),7
  1782     16E0  30FF               	movlw	255
  1783     16E1  00C8               	movwf	(_main$1269+2)^(0+128)
  1784     16E2  00C9               	movwf	(_main$1269+3)^(0+128)
  1785     16E3                     l4411:
  1786                           
  1787                           ;main.c: 172:         valorADC = readADC(1);
  1788     16E3  0849               	movf	(_main$1269+3)^(0+128),w
  1789     16E4  00F5               	movwf	___xxtofl@val+3
  1790     16E5  0848               	movf	(_main$1269+2)^(0+128),w
  1791     16E6  00F4               	movwf	___xxtofl@val+2
  1792     16E7  0847               	movf	(_main$1269+1)^(0+128),w
  1793     16E8  00F3               	movwf	___xxtofl@val+1
  1794     16E9  0846               	movf	_main$1269^(0+128),w
  1795     16EA  00F2               	movwf	___xxtofl@val
  1796     16EB  3001               	movlw	1
  1797     16EC  120A  118A  2666  160A  118A  	fcall	___xxtofl
  1798     16F1  0875               	movf	?___xxtofl+3,w
  1799     16F2  1683               	bsf	3,5	;RP0=1, select bank1
  1800     16F3  1303               	bcf	3,6	;RP1=0, select bank1
  1801     16F4  00DD               	movwf	(_valorADC+3)^(0+128)
  1802     16F5  0874               	movf	?___xxtofl+2,w
  1803     16F6  00DC               	movwf	(_valorADC+2)^(0+128)
  1804     16F7  0873               	movf	?___xxtofl+1,w
  1805     16F8  00DB               	movwf	(_valorADC+1)^(0+128)
  1806     16F9  0872               	movf	?___xxtofl,w
  1807     16FA  00DA               	movwf	_valorADC^(0+128)
  1808     16FB                     l4413:
  1809                           
  1810                           ;main.c: 173:         VOLTAJE2 = (valorADC*5)/255;
  1811     16FB  3043               	movlw	67
  1812     16FC  1283               	bcf	3,5	;RP0=0, select bank0
  1813     16FD  1303               	bcf	3,6	;RP1=0, select bank0
  1814     16FE  00C5               	movwf	___fldiv@a+3
  1815     16FF  307F               	movlw	127
  1816     1700  00C4               	movwf	___fldiv@a+2
  1817     1701  3000               	movlw	0
  1818     1702  00C3               	movwf	___fldiv@a+1
  1819     1703  3000               	movlw	0
  1820     1704  00C2               	movwf	___fldiv@a
  1821     1705  3040               	movlw	64
  1822     1706  00AB               	movwf	___flmul@b+3
  1823     1707  30A0               	movlw	160
  1824     1708  00AA               	movwf	___flmul@b+2
  1825     1709  3000               	movlw	0
  1826     170A  00A9               	movwf	___flmul@b+1
  1827     170B  3000               	movlw	0
  1828     170C  00A8               	movwf	___flmul@b
  1829     170D  1683               	bsf	3,5	;RP0=1, select bank1
  1830     170E  1303               	bcf	3,6	;RP1=0, select bank1
  1831     170F  085D               	movf	(_valorADC+3)^(0+128),w
  1832     1710  1283               	bcf	3,5	;RP0=0, select bank0
  1833     1711  1303               	bcf	3,6	;RP1=0, select bank0
  1834     1712  00AF               	movwf	___flmul@a+3
  1835     1713  1683               	bsf	3,5	;RP0=1, select bank1
  1836     1714  1303               	bcf	3,6	;RP1=0, select bank1
  1837     1715  085C               	movf	(_valorADC+2)^(0+128),w
  1838     1716  1283               	bcf	3,5	;RP0=0, select bank0
  1839     1717  1303               	bcf	3,6	;RP1=0, select bank0
  1840     1718  00AE               	movwf	___flmul@a+2
  1841     1719  1683               	bsf	3,5	;RP0=1, select bank1
  1842     171A  1303               	bcf	3,6	;RP1=0, select bank1
  1843     171B  085B               	movf	(_valorADC+1)^(0+128),w
  1844     171C  1283               	bcf	3,5	;RP0=0, select bank0
  1845     171D  1303               	bcf	3,6	;RP1=0, select bank0
  1846     171E  00AD               	movwf	___flmul@a+1
  1847     171F  1683               	bsf	3,5	;RP0=1, select bank1
  1848     1720  1303               	bcf	3,6	;RP1=0, select bank1
  1849     1721  085A               	movf	_valorADC^(0+128),w
  1850     1722  1283               	bcf	3,5	;RP0=0, select bank0
  1851     1723  1303               	bcf	3,6	;RP1=0, select bank0
  1852     1724  00AC               	movwf	___flmul@a
  1853     1725  120A  158A  2158  160A  118A  	fcall	___flmul
  1854     172A  1283               	bcf	3,5	;RP0=0, select bank0
  1855     172B  1303               	bcf	3,6	;RP1=0, select bank0
  1856     172C  082B               	movf	?___flmul+3,w
  1857     172D  00C9               	movwf	___fldiv@b+3
  1858     172E  082A               	movf	?___flmul+2,w
  1859     172F  00C8               	movwf	___fldiv@b+2
  1860     1730  0829               	movf	?___flmul+1,w
  1861     1731  00C7               	movwf	___fldiv@b+1
  1862     1732  0828               	movf	?___flmul,w
  1863     1733  00C6               	movwf	___fldiv@b
  1864     1734  160A  158A  262D  160A  118A  	fcall	___fldiv
  1865     1739  1283               	bcf	3,5	;RP0=0, select bank0
  1866     173A  1303               	bcf	3,6	;RP1=0, select bank0
  1867     173B  0845               	movf	?___fldiv+3,w
  1868     173C  1683               	bsf	3,5	;RP0=1, select bank1
  1869     173D  1303               	bcf	3,6	;RP1=0, select bank1
  1870     173E  00D5               	movwf	(_VOLTAJE2+3)^(0+128)
  1871     173F  1283               	bcf	3,5	;RP0=0, select bank0
  1872     1740  1303               	bcf	3,6	;RP1=0, select bank0
  1873     1741  0844               	movf	?___fldiv+2,w
  1874     1742  1683               	bsf	3,5	;RP0=1, select bank1
  1875     1743  1303               	bcf	3,6	;RP1=0, select bank1
  1876     1744  00D4               	movwf	(_VOLTAJE2+2)^(0+128)
  1877     1745  1283               	bcf	3,5	;RP0=0, select bank0
  1878     1746  1303               	bcf	3,6	;RP1=0, select bank0
  1879     1747  0843               	movf	?___fldiv+1,w
  1880     1748  1683               	bsf	3,5	;RP0=1, select bank1
  1881     1749  1303               	bcf	3,6	;RP1=0, select bank1
  1882     174A  00D3               	movwf	(_VOLTAJE2+1)^(0+128)
  1883     174B  1283               	bcf	3,5	;RP0=0, select bank0
  1884     174C  1303               	bcf	3,6	;RP1=0, select bank0
  1885     174D  0842               	movf	?___fldiv,w
  1886     174E  1683               	bsf	3,5	;RP0=1, select bank1
  1887     174F  1303               	bcf	3,6	;RP1=0, select bank1
  1888     1750  00D2               	movwf	_VOLTAJE2^(0+128)
  1889     1751                     l4415:
  1890                           
  1891                           ;main.c: 174:         sprintf(ADC2,"%.2f", VOLTAJE2);
  1892     1751  3099               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1893     1752  1283               	bcf	3,5	;RP0=0, select bank0
  1894     1753  1303               	bcf	3,6	;RP1=0, select bank0
  1895     1754  00EA               	movwf	sprintf@f
  1896     1755  1683               	bsf	3,5	;RP0=1, select bank1
  1897     1756  1303               	bcf	3,6	;RP1=0, select bank1
  1898     1757  0855               	movf	(_VOLTAJE2+3)^(0+128),w
  1899     1758  1283               	bcf	3,5	;RP0=0, select bank0
  1900     1759  1303               	bcf	3,6	;RP1=0, select bank0
  1901     175A  00EE               	movwf	?_sprintf+4
  1902     175B  1683               	bsf	3,5	;RP0=1, select bank1
  1903     175C  1303               	bcf	3,6	;RP1=0, select bank1
  1904     175D  0854               	movf	(_VOLTAJE2+2)^(0+128),w
  1905     175E  1283               	bcf	3,5	;RP0=0, select bank0
  1906     175F  1303               	bcf	3,6	;RP1=0, select bank0
  1907     1760  00ED               	movwf	?_sprintf+3
  1908     1761  1683               	bsf	3,5	;RP0=1, select bank1
  1909     1762  1303               	bcf	3,6	;RP1=0, select bank1
  1910     1763  0853               	movf	(_VOLTAJE2+1)^(0+128),w
  1911     1764  1283               	bcf	3,5	;RP0=0, select bank0
  1912     1765  1303               	bcf	3,6	;RP1=0, select bank0
  1913     1766  00EC               	movwf	?_sprintf+2
  1914     1767  1683               	bsf	3,5	;RP0=1, select bank1
  1915     1768  1303               	bcf	3,6	;RP1=0, select bank1
  1916     1769  0852               	movf	_VOLTAJE2^(0+128),w
  1917     176A  1283               	bcf	3,5	;RP0=0, select bank0
  1918     176B  1303               	bcf	3,6	;RP1=0, select bank0
  1919     176C  00EB               	movwf	?_sprintf+1
  1920     176D  30E7               	movlw	(low (_ADC2| 0))& (0+255)
  1921     176E  120A  118A  201D  160A  118A  	fcall	_sprintf
  1922     1773                     l4417:
  1923                           
  1924                           ;main.c: 175:         Lcd_Write_String(ADC2);
  1925     1773  30E7               	movlw	(low (_ADC2| 0))& (0+255)
  1926     1774  00F5               	movwf	Lcd_Write_String@a
  1927     1775  3000               	movlw	0
  1928     1776  00F6               	movwf	Lcd_Write_String@a+1
  1929     1777  160A  158A  2253  160A  118A  	fcall	_Lcd_Write_String
  1930     177C                     l4419:
  1931                           
  1932                           ;main.c: 176:         Lcd_Write_String("V");
  1933     177C  30A8               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1934     177D  00F5               	movwf	Lcd_Write_String@a
  1935     177E  3080               	movlw	128
  1936     177F  00F6               	movwf	Lcd_Write_String@a+1
  1937     1780  160A  158A  2253  160A  118A  	fcall	_Lcd_Write_String
  1938     1785                     l4421:
  1939                           
  1940                           ;main.c: 179:         Lcd_Set_Cursor(2,14);
  1941     1785  300E               	movlw	14
  1942     1786  00F6               	movwf	Lcd_Set_Cursor@b
  1943     1787  3002               	movlw	2
  1944     1788  160A  158A  2100  160A  118A  	fcall	_Lcd_Set_Cursor
  1945     178D                     l4423:
  1946                           
  1947                           ;main.c: 181:         hundreds = (cont/100);
  1948     178D  3064               	movlw	100
  1949     178E  00F2               	movwf	___lwdiv@divisor
  1950     178F  3000               	movlw	0
  1951     1790  00F3               	movwf	___lwdiv@divisor+1
  1952     1791  1683               	bsf	3,5	;RP0=1, select bank1
  1953     1792  1303               	bcf	3,6	;RP1=0, select bank1
  1954     1793  085F               	movf	(_cont+1)^(0+128),w
  1955     1794  00F5               	movwf	___lwdiv@dividend+1
  1956     1795  085E               	movf	_cont^(0+128),w
  1957     1796  00F4               	movwf	___lwdiv@dividend
  1958     1797  160A  158A  220F  160A  118A  	fcall	___lwdiv
  1959     179C  0872               	movf	?___lwdiv,w
  1960     179D  1683               	bsf	3,5	;RP0=1, select bank1
  1961     179E  1303               	bcf	3,6	;RP1=0, select bank1
  1962     179F  00E6               	movwf	_hundreds^(0+128)
  1963     17A0                     l4425:
  1964                           
  1965                           ;main.c: 182:         tens = (cont/10)%10;
  1966     17A0  300A               	movlw	10
  1967     17A1  1283               	bcf	3,5	;RP0=0, select bank0
  1968     17A2  1303               	bcf	3,6	;RP1=0, select bank0
  1969     17A3  00A0               	movwf	___lwmod@divisor
  1970     17A4  3000               	movlw	0
  1971     17A5  00A1               	movwf	___lwmod@divisor+1
  1972     17A6  300A               	movlw	10
  1973     17A7  00F2               	movwf	___lwdiv@divisor
  1974     17A8  3000               	movlw	0
  1975     17A9  00F3               	movwf	___lwdiv@divisor+1
  1976     17AA  1683               	bsf	3,5	;RP0=1, select bank1
  1977     17AB  1303               	bcf	3,6	;RP1=0, select bank1
  1978     17AC  085F               	movf	(_cont+1)^(0+128),w
  1979     17AD  00F5               	movwf	___lwdiv@dividend+1
  1980     17AE  085E               	movf	_cont^(0+128),w
  1981     17AF  00F4               	movwf	___lwdiv@dividend
  1982     17B0  160A  158A  220F  160A  118A  	fcall	___lwdiv
  1983     17B5  0873               	movf	?___lwdiv+1,w
  1984     17B6  1283               	bcf	3,5	;RP0=0, select bank0
  1985     17B7  1303               	bcf	3,6	;RP1=0, select bank0
  1986     17B8  00A3               	movwf	___lwmod@dividend+1
  1987     17B9  0872               	movf	?___lwdiv,w
  1988     17BA  00A2               	movwf	___lwmod@dividend
  1989     17BB  160A  158A  2195  160A  118A  	fcall	___lwmod
  1990     17C0  1283               	bcf	3,5	;RP0=0, select bank0
  1991     17C1  1303               	bcf	3,6	;RP1=0, select bank0
  1992     17C2  0820               	movf	?___lwmod,w
  1993     17C3  1683               	bsf	3,5	;RP0=1, select bank1
  1994     17C4  1303               	bcf	3,6	;RP1=0, select bank1
  1995     17C5  00E5               	movwf	_tens^(0+128)
  1996     17C6                     l4427:
  1997                           
  1998                           ;main.c: 183:         ones = cont%10;
  1999     17C6  300A               	movlw	10
  2000     17C7  1283               	bcf	3,5	;RP0=0, select bank0
  2001     17C8  1303               	bcf	3,6	;RP1=0, select bank0
  2002     17C9  00A0               	movwf	___lwmod@divisor
  2003     17CA  3000               	movlw	0
  2004     17CB  00A1               	movwf	___lwmod@divisor+1
  2005     17CC  1683               	bsf	3,5	;RP0=1, select bank1
  2006     17CD  1303               	bcf	3,6	;RP1=0, select bank1
  2007     17CE  085F               	movf	(_cont+1)^(0+128),w
  2008     17CF  1283               	bcf	3,5	;RP0=0, select bank0
  2009     17D0  1303               	bcf	3,6	;RP1=0, select bank0
  2010     17D1  00A3               	movwf	___lwmod@dividend+1
  2011     17D2  1683               	bsf	3,5	;RP0=1, select bank1
  2012     17D3  1303               	bcf	3,6	;RP1=0, select bank1
  2013     17D4  085E               	movf	_cont^(0+128),w
  2014     17D5  1283               	bcf	3,5	;RP0=0, select bank0
  2015     17D6  1303               	bcf	3,6	;RP1=0, select bank0
  2016     17D7  00A2               	movwf	___lwmod@dividend
  2017     17D8  160A  158A  2195  160A  118A  	fcall	___lwmod
  2018     17DD  1283               	bcf	3,5	;RP0=0, select bank0
  2019     17DE  1303               	bcf	3,6	;RP1=0, select bank0
  2020     17DF  0820               	movf	?___lwmod,w
  2021     17E0  1683               	bsf	3,5	;RP0=1, select bank1
  2022     17E1  1303               	bcf	3,6	;RP1=0, select bank1
  2023     17E2  00E4               	movwf	_ones^(0+128)
  2024     17E3                     l4429:
  2025                           
  2026                           ;main.c: 185:         Lcd_Write_Char(hundreds+48);
  2027     17E3  0866               	movf	_hundreds^(0+128),w
  2028     17E4  3E30               	addlw	48
  2029     17E5  160A  158A  20B9  160A  118A  	fcall	_Lcd_Write_Char
  2030     17EA                     l4431:
  2031                           
  2032                           ;main.c: 186:         Lcd_Write_Char(tens+48);
  2033     17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2034     17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2035     17EC  0865               	movf	_tens^(0+128),w
  2036     17ED  3E30               	addlw	48
  2037     17EE  160A  158A  20B9  160A  118A  	fcall	_Lcd_Write_Char
  2038     17F3                     l4433:
  2039                           
  2040                           ;main.c: 187:         Lcd_Write_Char(ones+48);
  2041     17F3  1683               	bsf	3,5	;RP0=1, select bank1
  2042     17F4  1303               	bcf	3,6	;RP1=0, select bank1
  2043     17F5  0864               	movf	_ones^(0+128),w
  2044     17F6  3E30               	addlw	48
  2045     17F7  160A  158A  20B9  160A  118A  	fcall	_Lcd_Write_Char
  2046     17FC  2DC7               	goto	l4381
  2047     17FD  120A  118A  280C   	ljmp	start
  2048     1800                     __end_of_main:
  2049                           
  2050                           	psect	text1
  2051     001D                     __ptext1:	
  2052 ;; *************** function _sprintf *****************
  2053 ;; Defined at:
  2054 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  2055 ;; Parameters:    Size  Location     Type
  2056 ;;  sp              1    wreg     PTR unsigned char 
  2057 ;;		 -> ADC2(4), ADC1(4), 
  2058 ;;  f               1   74[BANK0 ] PTR const unsigned char 
  2059 ;;		 -> STR_7(5), STR_5(5), 
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;  sp              1   30[BANK1 ] PTR unsigned char 
  2062 ;;		 -> ADC2(4), ADC1(4), 
  2063 ;;  fval            4   33[BANK1 ] PTR unsigned char 
  2064 ;;  tmpval          4   26[BANK1 ] struct .
  2065 ;;  val             4   20[BANK1 ] unsigned long 
  2066 ;;  prec            2   31[BANK1 ] int 
  2067 ;;  eexp            2   24[BANK1 ] int 
  2068 ;;  flag            2   18[BANK1 ] unsigned short 
  2069 ;;  cp              2    0        PTR const unsigned char 
  2070 ;;  len             2    0        unsigned int 
  2071 ;;  width           2    0        int 
  2072 ;;  c               1   37[BANK1 ] unsigned char 
  2073 ;;  ap              1   17[BANK1 ] PTR void [1]
  2074 ;;		 -> ?_sprintf(2), 
  2075 ;;  d               1    0        unsigned char 
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  2   74[BANK0 ] int 
  2078 ;; Registers used:
  2079 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2085 ;;      Params:         0       5       0       0       0
  2086 ;;      Locals:         0       0      25       0       0
  2087 ;;      Temps:          0       0       5       0       0
  2088 ;;      Totals:         0       5      30       0       0
  2089 ;;Total ram usage:       35 bytes
  2090 ;; Hardware stack levels used: 1
  2091 ;; Hardware stack levels required when called: 5
  2092 ;; This function calls:
  2093 ;;		___awdiv
  2094 ;;		___fladd
  2095 ;;		___fleq
  2096 ;;		___flge
  2097 ;;		___flmul
  2098 ;;		___flneg
  2099 ;;		___flsub
  2100 ;;		___fltol
  2101 ;;		___lldiv
  2102 ;;		___llmod
  2103 ;;		___wmul
  2104 ;;		___xxtofl
  2105 ;;		__div_to_l_
  2106 ;;		__tdiv_to_l_
  2107 ;;		_fround
  2108 ;;		_isdigit
  2109 ;;		_scale
  2110 ;; This function is called by:
  2111 ;;		_main
  2112 ;; This function uses a non-reentrant model
  2113 ;;
  2114                           
  2115     001D                     _sprintf:	
  2116                           ;psect for function _sprintf
  2117                           
  2118                           
  2119                           ;incstack = 0
  2120                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2121                           ;sprintf@sp stored from wreg
  2122     001D  1683               	bsf	3,5	;RP0=1, select bank1
  2123     001E  1303               	bcf	3,6	;RP1=0, select bank1
  2124     001F  00BE               	movwf	sprintf@sp^(0+128)
  2125     0020                     l4169:
  2126                           
  2127                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2128     0020  306B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2129     0021  00B1               	movwf	sprintf@ap^(0+128)
  2130                           
  2131                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2132     0022  2E4D               	goto	l4363
  2133     0023                     l4171:
  2134                           
  2135                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2136     0023  3025               	movlw	37
  2137     0024  0645               	xorwf	sprintf@c^(0+128),w
  2138     0025  1903               	btfsc	3,2
  2139     0026  2828               	goto	u6681
  2140     0027  2829               	goto	u6680
  2141     0028                     u6681:
  2142     0028  2833               	goto	l4177
  2143     0029                     u6680:
  2144     0029                     l4173:
  2145                           
  2146                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2147     0029  083E               	movf	sprintf@sp^(0+128),w
  2148     002A  0084               	movwf	4
  2149     002B  0845               	movf	sprintf@c^(0+128),w
  2150     002C  1383               	bcf	3,7	;select IRP bank0
  2151     002D  0080               	movwf	0
  2152     002E                     l4175:
  2153     002E  3001               	movlw	1
  2154     002F  00A8               	movwf	??_sprintf^(0+128)
  2155     0030  0828               	movf	??_sprintf^(0+128),w
  2156     0031  07BE               	addwf	sprintf@sp^(0+128),f
  2157                           
  2158                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  2159     0032  2E4D               	goto	l4363
  2160     0033                     l4177:
  2161                           
  2162                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2163     0033  01B2               	clrf	sprintf@flag^(0+128)
  2164     0034  01B3               	clrf	(sprintf@flag+1)^(0+128)
  2165     0035                     l4179:
  2166                           
  2167                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2168     0035  1283               	bcf	3,5	;RP0=0, select bank0
  2169     0036  1303               	bcf	3,6	;RP1=0, select bank0
  2170     0037  086A               	movf	sprintf@f,w
  2171     0038  0084               	movwf	4
  2172     0039  120A  118A  272A  120A  118A  	fcall	stringdir
  2173     003E  3A2E               	xorlw	46
  2174     003F  1D03               	skipz
  2175     0040  2842               	goto	u6691
  2176     0041  2843               	goto	u6690
  2177     0042                     u6691:
  2178     0042  2895               	goto	l4195
  2179     0043                     u6690:
  2180     0043                     l4181:
  2181                           
  2182                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2183     0043  1683               	bsf	3,5	;RP0=1, select bank1
  2184     0044  1303               	bcf	3,6	;RP1=0, select bank1
  2185     0045  1733               	bsf	(sprintf@flag^(0+128)+1),6
  2186     0046                     l4183:
  2187                           
  2188                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 630:    f++;
  2189     0046  3001               	movlw	1
  2190     0047  00A8               	movwf	??_sprintf^(0+128)
  2191     0048  0828               	movf	??_sprintf^(0+128),w
  2192     0049  1283               	bcf	3,5	;RP0=0, select bank0
  2193     004A  1303               	bcf	3,6	;RP1=0, select bank0
  2194     004B  07EA               	addwf	sprintf@f,f
  2195     004C                     l4185:
  2196                           
  2197                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2198     004C  1683               	bsf	3,5	;RP0=1, select bank1
  2199     004D  1303               	bcf	3,6	;RP1=0, select bank1
  2200     004E  01BF               	clrf	sprintf@prec^(0+128)
  2201     004F  01C0               	clrf	(sprintf@prec+1)^(0+128)
  2202                           
  2203                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2204     0050  2883               	goto	l4193
  2205     0051                     l4187:
  2206                           
  2207                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2208     0051  300A               	movlw	10
  2209     0052  00F2               	movwf	___wmul@multiplier
  2210     0053  3000               	movlw	0
  2211     0054  00F3               	movwf	___wmul@multiplier+1
  2212     0055  1683               	bsf	3,5	;RP0=1, select bank1
  2213     0056  1303               	bcf	3,6	;RP1=0, select bank1
  2214     0057  0840               	movf	(sprintf@prec+1)^(0+128),w
  2215     0058  00F5               	movwf	___wmul@multiplicand+1
  2216     0059  083F               	movf	sprintf@prec^(0+128),w
  2217     005A  00F4               	movwf	___wmul@multiplicand
  2218     005B  160A  158A  2141  120A  118A  	fcall	___wmul
  2219     0060  0873               	movf	?___wmul+1,w
  2220     0061  1683               	bsf	3,5	;RP0=1, select bank1
  2221     0062  1303               	bcf	3,6	;RP1=0, select bank1
  2222     0063  00C0               	movwf	(sprintf@prec+1)^(0+128)
  2223     0064  0872               	movf	?___wmul,w
  2224     0065  00BF               	movwf	sprintf@prec^(0+128)
  2225     0066                     l4189:
  2226                           
  2227                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2228     0066  1283               	bcf	3,5	;RP0=0, select bank0
  2229     0067  1303               	bcf	3,6	;RP1=0, select bank0
  2230     0068  086A               	movf	sprintf@f,w
  2231     0069  0084               	movwf	4
  2232     006A  120A  118A  272A  120A  118A  	fcall	stringdir
  2233     006F  3ED0               	addlw	208
  2234     0070  1683               	bsf	3,5	;RP0=1, select bank1
  2235     0071  1303               	bcf	3,6	;RP1=0, select bank1
  2236     0072  00A8               	movwf	??_sprintf^(0+128)
  2237     0073  30FF               	movlw	255
  2238     0074  1803               	skipnc
  2239     0075  3000               	movlw	0
  2240     0076  00A9               	movwf	(??_sprintf^(0+128)+1)
  2241     0077  0828               	movf	??_sprintf^(0+128),w
  2242     0078  07BF               	addwf	sprintf@prec^(0+128),f
  2243     0079  1803               	skipnc
  2244     007A  0AC0               	incf	(sprintf@prec+1)^(0+128),f
  2245     007B  0829               	movf	(??_sprintf+1)^(0+128),w
  2246     007C  07C0               	addwf	(sprintf@prec+1)^(0+128),f
  2247     007D                     l4191:
  2248     007D  3001               	movlw	1
  2249     007E  00A8               	movwf	??_sprintf^(0+128)
  2250     007F  0828               	movf	??_sprintf^(0+128),w
  2251     0080  1283               	bcf	3,5	;RP0=0, select bank0
  2252     0081  1303               	bcf	3,6	;RP1=0, select bank0
  2253     0082  07EA               	addwf	sprintf@f,f
  2254     0083                     l4193:
  2255                           
  2256                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2257     0083  1283               	bcf	3,5	;RP0=0, select bank0
  2258     0084  086A               	movf	sprintf@f,w
  2259     0085  0084               	movwf	4
  2260     0086  120A  118A  272A  120A  118A  	fcall	stringdir
  2261     008B  160A  158A  20A7  120A  118A  	fcall	_isdigit
  2262     0090  1803               	btfsc	3,0
  2263     0091  2893               	goto	u6701
  2264     0092  2894               	goto	u6700
  2265     0093                     u6701:
  2266     0093  2851               	goto	l4187
  2267     0094                     u6700:
  2268     0094  289D               	goto	l4201
  2269     0095                     l4195:
  2270                           
  2271                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2272     0095  1683               	bsf	3,5	;RP0=1, select bank1
  2273     0096  1303               	bcf	3,6	;RP1=0, select bank1
  2274     0097  01BF               	clrf	sprintf@prec^(0+128)
  2275     0098  01C0               	clrf	(sprintf@prec+1)^(0+128)
  2276     0099                     l4197:
  2277                           
  2278                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2279     0099  1633               	bsf	(sprintf@flag^(0+128)+1),4
  2280     009A  289D               	goto	l4201
  2281     009B                     l377:	
  2282                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2283                           
  2284                           
  2285                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2286     009B  1533               	bsf	(sprintf@flag^(0+128)+1),2
  2287                           
  2288                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 690:    break;
  2289     009C  28BB               	goto	l4203
  2290     009D                     l4201:
  2291     009D  3001               	movlw	1
  2292     009E  1283               	bcf	3,5	;RP0=0, select bank0
  2293     009F  1303               	bcf	3,6	;RP1=0, select bank0
  2294     00A0  07EA               	addwf	sprintf@f,f
  2295     00A1  30FF               	movlw	-1
  2296     00A2  076A               	addwf	sprintf@f,w
  2297     00A3  0084               	movwf	4
  2298     00A4  120A  118A  272A  120A  118A  	fcall	stringdir
  2299     00A9  1683               	bsf	3,5	;RP0=1, select bank1
  2300     00AA  1303               	bcf	3,6	;RP1=0, select bank1
  2301     00AB  00C5               	movwf	sprintf@c^(0+128)
  2302     00AC  00A8               	movwf	??_sprintf^(0+128)
  2303     00AD  01A9               	clrf	(??_sprintf^(0+128)+1)
  2304                           
  2305                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2306                           ; Switch size 1, requested type "simple"
  2307                           ; Number of cases is 1, Range of values is 0 to 0
  2308                           ; switch strategies available:
  2309                           ; Name         Instructions Cycles
  2310                           ; simple_byte            4     3 (average)
  2311                           ; direct_byte           11     8 (fixed)
  2312                           ; jumptable            260     6 (fixed)
  2313                           ;	Chosen strategy is simple_byte
  2314     00AE  0829               	movf	(??_sprintf+1)^(0+128),w
  2315     00AF  3A00               	xorlw	0	; case 0
  2316     00B0  1903               	skipnz
  2317     00B1  28B3               	goto	l4469
  2318     00B2  2E4D               	goto	l4363
  2319     00B3                     l4469:
  2320                           
  2321                           ; Switch size 1, requested type "simple"
  2322                           ; Number of cases is 2, Range of values is 0 to 102
  2323                           ; switch strategies available:
  2324                           ; Name         Instructions Cycles
  2325                           ; simple_byte            7     4 (average)
  2326                           ; jumptable            260     6 (fixed)
  2327                           ;	Chosen strategy is simple_byte
  2328     00B3  0828               	movf	??_sprintf^(0+128),w
  2329     00B4  3A00               	xorlw	0	; case 0
  2330     00B5  1903               	skipnz
  2331     00B6  2E61               	goto	l4365
  2332     00B7  3A66               	xorlw	102	; case 102
  2333     00B8  1903               	skipnz
  2334     00B9  289B               	goto	l377
  2335     00BA  2E4D               	goto	l4363
  2336     00BB                     l4203:
  2337                           
  2338                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2339     00BB  3000               	movlw	0
  2340     00BC  0532               	andwf	sprintf@flag^(0+128),w
  2341     00BD  00A8               	movwf	??_sprintf^(0+128)
  2342     00BE  3007               	movlw	7
  2343     00BF  0533               	andwf	(sprintf@flag+1)^(0+128),w
  2344     00C0  00A9               	movwf	(??_sprintf+1)^(0+128)
  2345     00C1  0828               	movf	??_sprintf^(0+128),w
  2346     00C2  0429               	iorwf	(??_sprintf^(0+128)+1),w
  2347     00C3  1903               	btfsc	3,2
  2348     00C4  28C6               	goto	u6711
  2349     00C5  28C7               	goto	u6710
  2350     00C6                     u6711:
  2351     00C6  2E0A               	goto	l4345
  2352     00C7                     u6710:
  2353     00C7                     l4205:
  2354                           
  2355                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2356     00C7  1E33               	btfss	(sprintf@flag+1)^(0+128),4
  2357     00C8  28CA               	goto	u6721
  2358     00C9  28CB               	goto	u6720
  2359     00CA                     u6721:
  2360     00CA  28CF               	goto	l4209
  2361     00CB                     u6720:
  2362     00CB                     l4207:
  2363                           
  2364                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2365     00CB  3006               	movlw	6
  2366     00CC  00BF               	movwf	sprintf@prec^(0+128)
  2367     00CD  3000               	movlw	0
  2368     00CE  00C0               	movwf	(sprintf@prec^(0+128)+1)
  2369     00CF                     l4209:
  2370                           
  2371                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2372     00CF  0831               	movf	sprintf@ap^(0+128),w
  2373     00D0  0084               	movwf	4
  2374     00D1  1383               	bcf	3,7	;select IRP bank0
  2375     00D2  0800               	movf	0,w
  2376     00D3  00C1               	movwf	sprintf@fval^(0+128)
  2377     00D4  0A84               	incf	4,f
  2378     00D5  0800               	movf	0,w
  2379     00D6  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2380     00D7  0A84               	incf	4,f
  2381     00D8  0800               	movf	0,w
  2382     00D9  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2383     00DA  0A84               	incf	4,f
  2384     00DB  0800               	movf	0,w
  2385     00DC  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2386     00DD                     l4211:
  2387     00DD  3004               	movlw	4
  2388     00DE  00A8               	movwf	??_sprintf^(0+128)
  2389     00DF  0828               	movf	??_sprintf^(0+128),w
  2390     00E0  07B1               	addwf	sprintf@ap^(0+128),f
  2391     00E1                     l4213:
  2392                           
  2393                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2394     00E1  0844               	movf	(sprintf@fval+3)^(0+128),w
  2395     00E2  00F5               	movwf	___flge@ff1+3
  2396     00E3  0843               	movf	(sprintf@fval+2)^(0+128),w
  2397     00E4  00F4               	movwf	___flge@ff1+2
  2398     00E5  0842               	movf	(sprintf@fval+1)^(0+128),w
  2399     00E6  00F3               	movwf	___flge@ff1+1
  2400     00E7  0841               	movf	sprintf@fval^(0+128),w
  2401     00E8  00F2               	movwf	___flge@ff1
  2402     00E9  3000               	movlw	0
  2403     00EA  00F9               	movwf	___flge@ff2+3
  2404     00EB  3000               	movlw	0
  2405     00EC  00F8               	movwf	___flge@ff2+2
  2406     00ED  3000               	movlw	0
  2407     00EE  00F7               	movwf	___flge@ff2+1
  2408     00EF  3000               	movlw	0
  2409     00F0  00F6               	movwf	___flge@ff2
  2410     00F1  160A  158A  2589  120A  118A  	fcall	___flge
  2411     00F6  1803               	btfsc	3,0
  2412     00F7  28F9               	goto	u6731
  2413     00F8  28FA               	goto	u6730
  2414     00F9                     u6731:
  2415     00F9  2917               	goto	l4219
  2416     00FA                     u6730:
  2417     00FA                     l4215:
  2418                           
  2419                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2420     00FA  1683               	bsf	3,5	;RP0=1, select bank1
  2421     00FB  1303               	bcf	3,6	;RP1=0, select bank1
  2422     00FC  0844               	movf	(sprintf@fval+3)^(0+128),w
  2423     00FD  00F5               	movwf	___flneg@f1+3
  2424     00FE  0843               	movf	(sprintf@fval+2)^(0+128),w
  2425     00FF  00F4               	movwf	___flneg@f1+2
  2426     0100  0842               	movf	(sprintf@fval+1)^(0+128),w
  2427     0101  00F3               	movwf	___flneg@f1+1
  2428     0102  0841               	movf	sprintf@fval^(0+128),w
  2429     0103  00F2               	movwf	___flneg@f1
  2430     0104  160A  158A  209C  120A  118A  	fcall	___flneg
  2431     0109  0875               	movf	?___flneg+3,w
  2432     010A  1683               	bsf	3,5	;RP0=1, select bank1
  2433     010B  1303               	bcf	3,6	;RP1=0, select bank1
  2434     010C  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2435     010D  0874               	movf	?___flneg+2,w
  2436     010E  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2437     010F  0873               	movf	?___flneg+1,w
  2438     0110  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2439     0111  0872               	movf	?___flneg,w
  2440     0112  00C1               	movwf	sprintf@fval^(0+128)
  2441     0113                     l4217:
  2442                           
  2443                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2444     0113  3003               	movlw	3
  2445     0114  04B2               	iorwf	sprintf@flag^(0+128),f
  2446     0115  3000               	movlw	0
  2447     0116  04B3               	iorwf	(sprintf@flag+1)^(0+128),f
  2448     0117                     l4219:
  2449                           
  2450                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2451     0117  1683               	bsf	3,5	;RP0=1, select bank1
  2452     0118  1303               	bcf	3,6	;RP1=0, select bank1
  2453     0119  01B8               	clrf	sprintf@eexp^(0+128)
  2454     011A  01B9               	clrf	(sprintf@eexp+1)^(0+128)
  2455     011B                     l4221:
  2456                           
  2457                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2458     011B  0844               	movf	(sprintf@fval+3)^(0+128),w
  2459     011C  00F5               	movwf	___fleq@ff1+3
  2460     011D  0843               	movf	(sprintf@fval+2)^(0+128),w
  2461     011E  00F4               	movwf	___fleq@ff1+2
  2462     011F  0842               	movf	(sprintf@fval+1)^(0+128),w
  2463     0120  00F3               	movwf	___fleq@ff1+1
  2464     0121  0841               	movf	sprintf@fval^(0+128),w
  2465     0122  00F2               	movwf	___fleq@ff1
  2466     0123  3000               	movlw	0
  2467     0124  00F9               	movwf	___fleq@ff2+3
  2468     0125  3000               	movlw	0
  2469     0126  00F8               	movwf	___fleq@ff2+2
  2470     0127  3000               	movlw	0
  2471     0128  00F7               	movwf	___fleq@ff2+1
  2472     0129  3000               	movlw	0
  2473     012A  00F6               	movwf	___fleq@ff2
  2474     012B  160A  158A  2299  120A  118A  	fcall	___fleq
  2475     0130  1803               	btfsc	3,0
  2476     0131  2933               	goto	u6741
  2477     0132  2934               	goto	u6740
  2478     0133                     u6741:
  2479     0133  2A34               	goto	l4247
  2480     0134                     u6740:
  2481     0134                     l4223:
  2482                           
  2483                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2484     0134  1003               	clrc
  2485     0135  1683               	bsf	3,5	;RP0=1, select bank1
  2486     0136  1303               	bcf	3,6	;RP1=0, select bank1
  2487     0137  0D43               	rlf	(sprintf@fval+2)^(0+128),w
  2488     0138  0D44               	rlf	(sprintf@fval+3)^(0+128),w
  2489     0139  3E82               	addlw	130
  2490     013A  00B8               	movwf	sprintf@eexp^(0+128)
  2491     013B  30FF               	movlw	255
  2492     013C  1803               	skipnc
  2493     013D  3000               	movlw	0
  2494     013E  00B9               	movwf	(sprintf@eexp^(0+128)+1)
  2495     013F                     l4225:
  2496                           
  2497                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2498     013F  30FF               	movlw	255
  2499     0140  07B8               	addwf	sprintf@eexp^(0+128),f
  2500     0141  1803               	skipnc
  2501     0142  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  2502     0143  30FF               	movlw	255
  2503     0144  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  2504     0145                     l4227:
  2505                           
  2506                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2507     0145  3003               	movlw	3
  2508     0146  00F2               	movwf	___wmul@multiplier
  2509     0147  3000               	movlw	0
  2510     0148  00F3               	movwf	___wmul@multiplier+1
  2511     0149  0839               	movf	(sprintf@eexp+1)^(0+128),w
  2512     014A  00F5               	movwf	___wmul@multiplicand+1
  2513     014B  0838               	movf	sprintf@eexp^(0+128),w
  2514     014C  00F4               	movwf	___wmul@multiplicand
  2515     014D  160A  158A  2141  120A  118A  	fcall	___wmul
  2516     0152  0873               	movf	?___wmul+1,w
  2517     0153  1683               	bsf	3,5	;RP0=1, select bank1
  2518     0154  1303               	bcf	3,6	;RP1=0, select bank1
  2519     0155  00B9               	movwf	(sprintf@eexp+1)^(0+128)
  2520     0156  0872               	movf	?___wmul,w
  2521     0157  00B8               	movwf	sprintf@eexp^(0+128)
  2522     0158                     l4229:
  2523                           
  2524                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2525     0158  300A               	movlw	10
  2526     0159  1283               	bcf	3,5	;RP0=0, select bank0
  2527     015A  1303               	bcf	3,6	;RP1=0, select bank0
  2528     015B  00A0               	movwf	___awdiv@divisor
  2529     015C  3000               	movlw	0
  2530     015D  00A1               	movwf	___awdiv@divisor+1
  2531     015E  1683               	bsf	3,5	;RP0=1, select bank1
  2532     015F  1303               	bcf	3,6	;RP1=0, select bank1
  2533     0160  0839               	movf	(sprintf@eexp+1)^(0+128),w
  2534     0161  1283               	bcf	3,5	;RP0=0, select bank0
  2535     0162  1303               	bcf	3,6	;RP1=0, select bank0
  2536     0163  00A3               	movwf	___awdiv@dividend+1
  2537     0164  1683               	bsf	3,5	;RP0=1, select bank1
  2538     0165  1303               	bcf	3,6	;RP1=0, select bank1
  2539     0166  0838               	movf	sprintf@eexp^(0+128),w
  2540     0167  1283               	bcf	3,5	;RP0=0, select bank0
  2541     0168  1303               	bcf	3,6	;RP1=0, select bank0
  2542     0169  00A2               	movwf	___awdiv@dividend
  2543     016A  160A  158A  24B4  120A  118A  	fcall	___awdiv
  2544     016F  1283               	bcf	3,5	;RP0=0, select bank0
  2545     0170  1303               	bcf	3,6	;RP1=0, select bank0
  2546     0171  0821               	movf	?___awdiv+1,w
  2547     0172  1683               	bsf	3,5	;RP0=1, select bank1
  2548     0173  1303               	bcf	3,6	;RP1=0, select bank1
  2549     0174  00B9               	movwf	(sprintf@eexp+1)^(0+128)
  2550     0175  1283               	bcf	3,5	;RP0=0, select bank0
  2551     0176  1303               	bcf	3,6	;RP1=0, select bank0
  2552     0177  0820               	movf	?___awdiv,w
  2553     0178  1683               	bsf	3,5	;RP0=1, select bank1
  2554     0179  1303               	bcf	3,6	;RP1=0, select bank1
  2555     017A  00B8               	movwf	sprintf@eexp^(0+128)
  2556     017B                     l4231:
  2557                           
  2558                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2559     017B  1FB9               	btfss	(sprintf@eexp+1)^(0+128),7
  2560     017C  297E               	goto	u6751
  2561     017D  297F               	goto	u6750
  2562     017E                     u6751:
  2563     017E  2985               	goto	l4235
  2564     017F                     u6750:
  2565     017F                     l4233:
  2566                           
  2567                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2568     017F  30FF               	movlw	255
  2569     0180  07B8               	addwf	sprintf@eexp^(0+128),f
  2570     0181  1803               	skipnc
  2571     0182  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  2572     0183  30FF               	movlw	255
  2573     0184  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  2574     0185                     l4235:
  2575                           
  2576                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2577     0185  0338               	decf	sprintf@eexp^(0+128),w
  2578     0186  3AFF               	xorlw	255
  2579     0187  120A  158A  249D  120A  118A  	fcall	_scale
  2580     018C  1283               	bcf	3,5	;RP0=0, select bank0
  2581     018D  1303               	bcf	3,6	;RP1=0, select bank0
  2582     018E  0845               	movf	?_scale+3,w
  2583     018F  1683               	bsf	3,5	;RP0=1, select bank1
  2584     0190  1303               	bcf	3,6	;RP1=0, select bank1
  2585     0191  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  2586     0192  1283               	bcf	3,5	;RP0=0, select bank0
  2587     0193  1303               	bcf	3,6	;RP1=0, select bank0
  2588     0194  0844               	movf	?_scale+2,w
  2589     0195  1683               	bsf	3,5	;RP0=1, select bank1
  2590     0196  1303               	bcf	3,6	;RP1=0, select bank1
  2591     0197  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  2592     0198  1283               	bcf	3,5	;RP0=0, select bank0
  2593     0199  1303               	bcf	3,6	;RP1=0, select bank0
  2594     019A  0843               	movf	?_scale+1,w
  2595     019B  1683               	bsf	3,5	;RP0=1, select bank1
  2596     019C  1303               	bcf	3,6	;RP1=0, select bank1
  2597     019D  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  2598     019E  1283               	bcf	3,5	;RP0=0, select bank0
  2599     019F  1303               	bcf	3,6	;RP1=0, select bank0
  2600     01A0  0842               	movf	?_scale,w
  2601     01A1  1683               	bsf	3,5	;RP0=1, select bank1
  2602     01A2  1303               	bcf	3,6	;RP1=0, select bank1
  2603     01A3  00BA               	movwf	sprintf@tmpval^(0+128)
  2604     01A4                     l4237:
  2605                           
  2606                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2607     01A4  0844               	movf	(sprintf@fval+3)^(0+128),w
  2608     01A5  1283               	bcf	3,5	;RP0=0, select bank0
  2609     01A6  1303               	bcf	3,6	;RP1=0, select bank0
  2610     01A7  00AB               	movwf	___flmul@b+3
  2611     01A8  1683               	bsf	3,5	;RP0=1, select bank1
  2612     01A9  1303               	bcf	3,6	;RP1=0, select bank1
  2613     01AA  0843               	movf	(sprintf@fval+2)^(0+128),w
  2614     01AB  1283               	bcf	3,5	;RP0=0, select bank0
  2615     01AC  1303               	bcf	3,6	;RP1=0, select bank0
  2616     01AD  00AA               	movwf	___flmul@b+2
  2617     01AE  1683               	bsf	3,5	;RP0=1, select bank1
  2618     01AF  1303               	bcf	3,6	;RP1=0, select bank1
  2619     01B0  0842               	movf	(sprintf@fval+1)^(0+128),w
  2620     01B1  1283               	bcf	3,5	;RP0=0, select bank0
  2621     01B2  1303               	bcf	3,6	;RP1=0, select bank0
  2622     01B3  00A9               	movwf	___flmul@b+1
  2623     01B4  1683               	bsf	3,5	;RP0=1, select bank1
  2624     01B5  1303               	bcf	3,6	;RP1=0, select bank1
  2625     01B6  0841               	movf	sprintf@fval^(0+128),w
  2626     01B7  1283               	bcf	3,5	;RP0=0, select bank0
  2627     01B8  1303               	bcf	3,6	;RP1=0, select bank0
  2628     01B9  00A8               	movwf	___flmul@b
  2629     01BA  1683               	bsf	3,5	;RP0=1, select bank1
  2630     01BB  1303               	bcf	3,6	;RP1=0, select bank1
  2631     01BC  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2632     01BD  1283               	bcf	3,5	;RP0=0, select bank0
  2633     01BE  1303               	bcf	3,6	;RP1=0, select bank0
  2634     01BF  00AF               	movwf	___flmul@a+3
  2635     01C0  1683               	bsf	3,5	;RP0=1, select bank1
  2636     01C1  1303               	bcf	3,6	;RP1=0, select bank1
  2637     01C2  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2638     01C3  1283               	bcf	3,5	;RP0=0, select bank0
  2639     01C4  1303               	bcf	3,6	;RP1=0, select bank0
  2640     01C5  00AE               	movwf	___flmul@a+2
  2641     01C6  1683               	bsf	3,5	;RP0=1, select bank1
  2642     01C7  1303               	bcf	3,6	;RP1=0, select bank1
  2643     01C8  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2644     01C9  1283               	bcf	3,5	;RP0=0, select bank0
  2645     01CA  1303               	bcf	3,6	;RP1=0, select bank0
  2646     01CB  00AD               	movwf	___flmul@a+1
  2647     01CC  1683               	bsf	3,5	;RP0=1, select bank1
  2648     01CD  1303               	bcf	3,6	;RP1=0, select bank1
  2649     01CE  083A               	movf	sprintf@tmpval^(0+128),w
  2650     01CF  1283               	bcf	3,5	;RP0=0, select bank0
  2651     01D0  1303               	bcf	3,6	;RP1=0, select bank0
  2652     01D1  00AC               	movwf	___flmul@a
  2653     01D2  120A  158A  2158  120A  118A  	fcall	___flmul
  2654     01D7  1283               	bcf	3,5	;RP0=0, select bank0
  2655     01D8  1303               	bcf	3,6	;RP1=0, select bank0
  2656     01D9  082B               	movf	?___flmul+3,w
  2657     01DA  1683               	bsf	3,5	;RP0=1, select bank1
  2658     01DB  1303               	bcf	3,6	;RP1=0, select bank1
  2659     01DC  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  2660     01DD  1283               	bcf	3,5	;RP0=0, select bank0
  2661     01DE  1303               	bcf	3,6	;RP1=0, select bank0
  2662     01DF  082A               	movf	?___flmul+2,w
  2663     01E0  1683               	bsf	3,5	;RP0=1, select bank1
  2664     01E1  1303               	bcf	3,6	;RP1=0, select bank1
  2665     01E2  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  2666     01E3  1283               	bcf	3,5	;RP0=0, select bank0
  2667     01E4  1303               	bcf	3,6	;RP1=0, select bank0
  2668     01E5  0829               	movf	?___flmul+1,w
  2669     01E6  1683               	bsf	3,5	;RP0=1, select bank1
  2670     01E7  1303               	bcf	3,6	;RP1=0, select bank1
  2671     01E8  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  2672     01E9  1283               	bcf	3,5	;RP0=0, select bank0
  2673     01EA  1303               	bcf	3,6	;RP1=0, select bank0
  2674     01EB  0828               	movf	?___flmul,w
  2675     01EC  1683               	bsf	3,5	;RP0=1, select bank1
  2676     01ED  1303               	bcf	3,6	;RP1=0, select bank1
  2677     01EE  00BA               	movwf	sprintf@tmpval^(0+128)
  2678     01EF                     l4239:
  2679                           
  2680                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2681     01EF  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2682     01F0  00F5               	movwf	___flge@ff1+3
  2683     01F1  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2684     01F2  00F4               	movwf	___flge@ff1+2
  2685     01F3  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2686     01F4  00F3               	movwf	___flge@ff1+1
  2687     01F5  083A               	movf	sprintf@tmpval^(0+128),w
  2688     01F6  00F2               	movwf	___flge@ff1
  2689     01F7  303F               	movlw	63
  2690     01F8  00F9               	movwf	___flge@ff2+3
  2691     01F9  3080               	movlw	128
  2692     01FA  00F8               	movwf	___flge@ff2+2
  2693     01FB  3000               	movlw	0
  2694     01FC  00F7               	movwf	___flge@ff2+1
  2695     01FD  3000               	movlw	0
  2696     01FE  00F6               	movwf	___flge@ff2
  2697     01FF  160A  158A  2589  120A  118A  	fcall	___flge
  2698     0204  1803               	btfsc	3,0
  2699     0205  2A07               	goto	u6761
  2700     0206  2A08               	goto	u6760
  2701     0207                     u6761:
  2702     0207  2A11               	goto	l4243
  2703     0208                     u6760:
  2704     0208                     l4241:
  2705                           
  2706                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2707     0208  30FF               	movlw	255
  2708     0209  1683               	bsf	3,5	;RP0=1, select bank1
  2709     020A  1303               	bcf	3,6	;RP1=0, select bank1
  2710     020B  07B8               	addwf	sprintf@eexp^(0+128),f
  2711     020C  1803               	skipnc
  2712     020D  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  2713     020E  30FF               	movlw	255
  2714     020F  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  2715     0210  2A34               	goto	l4247
  2716     0211                     l4243:
  2717     0211  1683               	bsf	3,5	;RP0=1, select bank1
  2718     0212  1303               	bcf	3,6	;RP1=0, select bank1
  2719     0213  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2720     0214  00F5               	movwf	___flge@ff1+3
  2721     0215  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2722     0216  00F4               	movwf	___flge@ff1+2
  2723     0217  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2724     0218  00F3               	movwf	___flge@ff1+1
  2725     0219  083A               	movf	sprintf@tmpval^(0+128),w
  2726     021A  00F2               	movwf	___flge@ff1
  2727     021B  3041               	movlw	65
  2728     021C  00F9               	movwf	___flge@ff2+3
  2729     021D  3020               	movlw	32
  2730     021E  00F8               	movwf	___flge@ff2+2
  2731     021F  3000               	movlw	0
  2732     0220  00F7               	movwf	___flge@ff2+1
  2733     0221  3000               	movlw	0
  2734     0222  00F6               	movwf	___flge@ff2
  2735     0223  160A  158A  2589  120A  118A  	fcall	___flge
  2736     0228  1C03               	btfss	3,0
  2737     0229  2A2B               	goto	u6771
  2738     022A  2A2C               	goto	u6770
  2739     022B                     u6771:
  2740     022B  2A34               	goto	l4247
  2741     022C                     u6770:
  2742     022C                     l4245:
  2743                           
  2744                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2745     022C  3001               	movlw	1
  2746     022D  1683               	bsf	3,5	;RP0=1, select bank1
  2747     022E  1303               	bcf	3,6	;RP1=0, select bank1
  2748     022F  07B8               	addwf	sprintf@eexp^(0+128),f
  2749     0230  1803               	skipnc
  2750     0231  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  2751     0232  3000               	movlw	0
  2752     0233  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  2753     0234                     l4247:
  2754                           
  2755                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2756     0234  1683               	bsf	3,5	;RP0=1, select bank1
  2757     0235  1303               	bcf	3,6	;RP1=0, select bank1
  2758     0236  0840               	movf	(sprintf@prec+1)^(0+128),w
  2759     0237  3A80               	xorlw	128
  2760     0238  00FF               	movwf	btemp+1
  2761     0239  3080               	movlw	128
  2762     023A  027F               	subwf	btemp+1,w
  2763     023B  1D03               	skipz
  2764     023C  2A3F               	goto	u6785
  2765     023D  300D               	movlw	13
  2766     023E  023F               	subwf	sprintf@prec^(0+128),w
  2767     023F                     u6785:
  2768     023F  1803               	skipnc
  2769     0240  2A42               	goto	u6781
  2770     0241  2A43               	goto	u6780
  2771     0242                     u6781:
  2772     0242  2A8A               	goto	l4251
  2773     0243                     u6780:
  2774     0243                     l4249:
  2775                           
  2776                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2777     0243  1683               	bsf	3,5	;RP0=1, select bank1
  2778     0244  1303               	bcf	3,6	;RP1=0, select bank1
  2779     0245  083F               	movf	sprintf@prec^(0+128),w
  2780     0246  160A  118A  2132  120A  118A  	fcall	_fround
  2781     024B  1283               	bcf	3,5	;RP0=0, select bank0
  2782     024C  1303               	bcf	3,6	;RP1=0, select bank0
  2783     024D  0845               	movf	?_fround+3,w
  2784     024E  00D9               	movwf	___fladd@b+3
  2785     024F  0844               	movf	?_fround+2,w
  2786     0250  00D8               	movwf	___fladd@b+2
  2787     0251  0843               	movf	?_fround+1,w
  2788     0252  00D7               	movwf	___fladd@b+1
  2789     0253  0842               	movf	?_fround,w
  2790     0254  00D6               	movwf	___fladd@b
  2791     0255  1683               	bsf	3,5	;RP0=1, select bank1
  2792     0256  1303               	bcf	3,6	;RP1=0, select bank1
  2793     0257  0844               	movf	(sprintf@fval+3)^(0+128),w
  2794     0258  1283               	bcf	3,5	;RP0=0, select bank0
  2795     0259  1303               	bcf	3,6	;RP1=0, select bank0
  2796     025A  00DD               	movwf	___fladd@a+3
  2797     025B  1683               	bsf	3,5	;RP0=1, select bank1
  2798     025C  1303               	bcf	3,6	;RP1=0, select bank1
  2799     025D  0843               	movf	(sprintf@fval+2)^(0+128),w
  2800     025E  1283               	bcf	3,5	;RP0=0, select bank0
  2801     025F  1303               	bcf	3,6	;RP1=0, select bank0
  2802     0260  00DC               	movwf	___fladd@a+2
  2803     0261  1683               	bsf	3,5	;RP0=1, select bank1
  2804     0262  1303               	bcf	3,6	;RP1=0, select bank1
  2805     0263  0842               	movf	(sprintf@fval+1)^(0+128),w
  2806     0264  1283               	bcf	3,5	;RP0=0, select bank0
  2807     0265  1303               	bcf	3,6	;RP1=0, select bank0
  2808     0266  00DB               	movwf	___fladd@a+1
  2809     0267  1683               	bsf	3,5	;RP0=1, select bank1
  2810     0268  1303               	bcf	3,6	;RP1=0, select bank1
  2811     0269  0841               	movf	sprintf@fval^(0+128),w
  2812     026A  1283               	bcf	3,5	;RP0=0, select bank0
  2813     026B  1303               	bcf	3,6	;RP1=0, select bank0
  2814     026C  00DA               	movwf	___fladd@a
  2815     026D  160A  118A  233F  120A  118A  	fcall	___fladd
  2816     0272  1283               	bcf	3,5	;RP0=0, select bank0
  2817     0273  1303               	bcf	3,6	;RP1=0, select bank0
  2818     0274  0859               	movf	?___fladd+3,w
  2819     0275  1683               	bsf	3,5	;RP0=1, select bank1
  2820     0276  1303               	bcf	3,6	;RP1=0, select bank1
  2821     0277  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2822     0278  1283               	bcf	3,5	;RP0=0, select bank0
  2823     0279  1303               	bcf	3,6	;RP1=0, select bank0
  2824     027A  0858               	movf	?___fladd+2,w
  2825     027B  1683               	bsf	3,5	;RP0=1, select bank1
  2826     027C  1303               	bcf	3,6	;RP1=0, select bank1
  2827     027D  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2828     027E  1283               	bcf	3,5	;RP0=0, select bank0
  2829     027F  1303               	bcf	3,6	;RP1=0, select bank0
  2830     0280  0857               	movf	?___fladd+1,w
  2831     0281  1683               	bsf	3,5	;RP0=1, select bank1
  2832     0282  1303               	bcf	3,6	;RP1=0, select bank1
  2833     0283  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2834     0284  1283               	bcf	3,5	;RP0=0, select bank0
  2835     0285  1303               	bcf	3,6	;RP1=0, select bank0
  2836     0286  0856               	movf	?___fladd,w
  2837     0287  1683               	bsf	3,5	;RP0=1, select bank1
  2838     0288  1303               	bcf	3,6	;RP1=0, select bank1
  2839     0289  00C1               	movwf	sprintf@fval^(0+128)
  2840     028A                     l4251:
  2841                           
  2842                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2843     028A  1683               	bsf	3,5	;RP0=1, select bank1
  2844     028B  1303               	bcf	3,6	;RP1=0, select bank1
  2845     028C  0839               	movf	(sprintf@eexp+1)^(0+128),w
  2846     028D  3A80               	xorlw	128
  2847     028E  00FF               	movwf	btemp+1
  2848     028F  3080               	movlw	128
  2849     0290  027F               	subwf	btemp+1,w
  2850     0291  1D03               	skipz
  2851     0292  2A95               	goto	u6795
  2852     0293  300A               	movlw	10
  2853     0294  0238               	subwf	sprintf@eexp^(0+128),w
  2854     0295                     u6795:
  2855     0295  1803               	skipnc
  2856     0296  2A98               	goto	u6791
  2857     0297  2A99               	goto	u6790
  2858     0298                     u6791:
  2859     0298  2AEA               	goto	l4259
  2860     0299                     u6790:
  2861     0299                     l4253:
  2862     0299  1683               	bsf	3,5	;RP0=1, select bank1
  2863     029A  1303               	bcf	3,6	;RP1=0, select bank1
  2864     029B  0844               	movf	(sprintf@fval+3)^(0+128),w
  2865     029C  00F5               	movwf	___fleq@ff1+3
  2866     029D  0843               	movf	(sprintf@fval+2)^(0+128),w
  2867     029E  00F4               	movwf	___fleq@ff1+2
  2868     029F  0842               	movf	(sprintf@fval+1)^(0+128),w
  2869     02A0  00F3               	movwf	___fleq@ff1+1
  2870     02A1  0841               	movf	sprintf@fval^(0+128),w
  2871     02A2  00F2               	movwf	___fleq@ff1
  2872     02A3  3000               	movlw	0
  2873     02A4  00F9               	movwf	___fleq@ff2+3
  2874     02A5  3000               	movlw	0
  2875     02A6  00F8               	movwf	___fleq@ff2+2
  2876     02A7  3000               	movlw	0
  2877     02A8  00F7               	movwf	___fleq@ff2+1
  2878     02A9  3000               	movlw	0
  2879     02AA  00F6               	movwf	___fleq@ff2
  2880     02AB  160A  158A  2299  120A  118A  	fcall	___fleq
  2881     02B0  1803               	btfsc	3,0
  2882     02B1  2AB3               	goto	u6801
  2883     02B2  2AB4               	goto	u6800
  2884     02B3                     u6801:
  2885     02B3  2B5C               	goto	l4273
  2886     02B4                     u6800:
  2887     02B4                     l4255:
  2888     02B4  1683               	bsf	3,5	;RP0=1, select bank1
  2889     02B5  1303               	bcf	3,6	;RP1=0, select bank1
  2890     02B6  0844               	movf	(sprintf@fval+3)^(0+128),w
  2891     02B7  1283               	bcf	3,5	;RP0=0, select bank0
  2892     02B8  1303               	bcf	3,6	;RP1=0, select bank0
  2893     02B9  00D8               	movwf	___fltol@f1+3
  2894     02BA  1683               	bsf	3,5	;RP0=1, select bank1
  2895     02BB  1303               	bcf	3,6	;RP1=0, select bank1
  2896     02BC  0843               	movf	(sprintf@fval+2)^(0+128),w
  2897     02BD  1283               	bcf	3,5	;RP0=0, select bank0
  2898     02BE  1303               	bcf	3,6	;RP1=0, select bank0
  2899     02BF  00D7               	movwf	___fltol@f1+2
  2900     02C0  1683               	bsf	3,5	;RP0=1, select bank1
  2901     02C1  1303               	bcf	3,6	;RP1=0, select bank1
  2902     02C2  0842               	movf	(sprintf@fval+1)^(0+128),w
  2903     02C3  1283               	bcf	3,5	;RP0=0, select bank0
  2904     02C4  1303               	bcf	3,6	;RP1=0, select bank0
  2905     02C5  00D6               	movwf	___fltol@f1+1
  2906     02C6  1683               	bsf	3,5	;RP0=1, select bank1
  2907     02C7  1303               	bcf	3,6	;RP1=0, select bank1
  2908     02C8  0841               	movf	sprintf@fval^(0+128),w
  2909     02C9  1283               	bcf	3,5	;RP0=0, select bank0
  2910     02CA  1303               	bcf	3,6	;RP1=0, select bank0
  2911     02CB  00D5               	movwf	___fltol@f1
  2912     02CC  160A  118A  2003  120A  118A  	fcall	___fltol
  2913     02D1  1283               	bcf	3,5	;RP0=0, select bank0
  2914     02D2  1303               	bcf	3,6	;RP1=0, select bank0
  2915     02D3  0858               	movf	?___fltol+3,w
  2916     02D4  0457               	iorwf	?___fltol+2,w
  2917     02D5  0456               	iorwf	?___fltol+1,w
  2918     02D6  0455               	iorwf	?___fltol,w
  2919     02D7  1D03               	skipz
  2920     02D8  2ADA               	goto	u6811
  2921     02D9  2ADB               	goto	u6810
  2922     02DA                     u6811:
  2923     02DA  2B5C               	goto	l4273
  2924     02DB                     u6810:
  2925     02DB                     l4257:
  2926     02DB  1683               	bsf	3,5	;RP0=1, select bank1
  2927     02DC  1303               	bcf	3,6	;RP1=0, select bank1
  2928     02DD  0839               	movf	(sprintf@eexp+1)^(0+128),w
  2929     02DE  3A80               	xorlw	128
  2930     02DF  00FF               	movwf	btemp+1
  2931     02E0  3080               	movlw	128
  2932     02E1  027F               	subwf	btemp+1,w
  2933     02E2  1D03               	skipz
  2934     02E3  2AE6               	goto	u6825
  2935     02E4  3002               	movlw	2
  2936     02E5  0238               	subwf	sprintf@eexp^(0+128),w
  2937     02E6                     u6825:
  2938     02E6  1C03               	skipc
  2939     02E7  2AE9               	goto	u6821
  2940     02E8  2AEA               	goto	u6820
  2941     02E9                     u6821:
  2942     02E9  2B5C               	goto	l4273
  2943     02EA                     u6820:
  2944     02EA                     l4259:
  2945                           
  2946                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2947     02EA  1683               	bsf	3,5	;RP0=1, select bank1
  2948     02EB  1303               	bcf	3,6	;RP1=0, select bank1
  2949     02EC  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2950     02ED  00F5               	movwf	___flge@ff1+3
  2951     02EE  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2952     02EF  00F4               	movwf	___flge@ff1+2
  2953     02F0  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2954     02F1  00F3               	movwf	___flge@ff1+1
  2955     02F2  083A               	movf	sprintf@tmpval^(0+128),w
  2956     02F3  00F2               	movwf	___flge@ff1
  2957     02F4  3040               	movlw	64
  2958     02F5  00F9               	movwf	___flge@ff2+3
  2959     02F6  3089               	movlw	137
  2960     02F7  00F8               	movwf	___flge@ff2+2
  2961     02F8  3070               	movlw	112
  2962     02F9  00F7               	movwf	___flge@ff2+1
  2963     02FA  305F               	movlw	95
  2964     02FB  00F6               	movwf	___flge@ff2
  2965     02FC  160A  158A  2589  120A  118A  	fcall	___flge
  2966     0301  1803               	btfsc	3,0
  2967     0302  2B04               	goto	u6831
  2968     0303  2B05               	goto	u6830
  2969     0304                     u6831:
  2970     0304  2B0E               	goto	l4263
  2971     0305                     u6830:
  2972     0305                     l4261:
  2973                           
  2974                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2975     0305  30F7               	movlw	247
  2976     0306  1683               	bsf	3,5	;RP0=1, select bank1
  2977     0307  1303               	bcf	3,6	;RP1=0, select bank1
  2978     0308  07B8               	addwf	sprintf@eexp^(0+128),f
  2979     0309  1803               	skipnc
  2980     030A  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  2981     030B  30FF               	movlw	255
  2982     030C  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  2983                           
  2984                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2985     030D  2B16               	goto	l4265
  2986     030E                     l4263:
  2987                           
  2988                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2989     030E  30F8               	movlw	248
  2990     030F  1683               	bsf	3,5	;RP0=1, select bank1
  2991     0310  1303               	bcf	3,6	;RP1=0, select bank1
  2992     0311  07B8               	addwf	sprintf@eexp^(0+128),f
  2993     0312  1803               	skipnc
  2994     0313  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  2995     0314  30FF               	movlw	255
  2996     0315  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  2997     0316                     l4265:
  2998                           
  2999                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  3000     0316  0838               	movf	sprintf@eexp^(0+128),w
  3001     0317  120A  158A  249D  120A  118A  	fcall	_scale
  3002     031C  1283               	bcf	3,5	;RP0=0, select bank0
  3003     031D  1303               	bcf	3,6	;RP1=0, select bank0
  3004     031E  0845               	movf	?_scale+3,w
  3005     031F  1683               	bsf	3,5	;RP0=1, select bank1
  3006     0320  1303               	bcf	3,6	;RP1=0, select bank1
  3007     0321  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  3008     0322  1283               	bcf	3,5	;RP0=0, select bank0
  3009     0323  1303               	bcf	3,6	;RP1=0, select bank0
  3010     0324  0844               	movf	?_scale+2,w
  3011     0325  1683               	bsf	3,5	;RP0=1, select bank1
  3012     0326  1303               	bcf	3,6	;RP1=0, select bank1
  3013     0327  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  3014     0328  1283               	bcf	3,5	;RP0=0, select bank0
  3015     0329  1303               	bcf	3,6	;RP1=0, select bank0
  3016     032A  0843               	movf	?_scale+1,w
  3017     032B  1683               	bsf	3,5	;RP0=1, select bank1
  3018     032C  1303               	bcf	3,6	;RP1=0, select bank1
  3019     032D  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  3020     032E  1283               	bcf	3,5	;RP0=0, select bank0
  3021     032F  1303               	bcf	3,6	;RP1=0, select bank0
  3022     0330  0842               	movf	?_scale,w
  3023     0331  1683               	bsf	3,5	;RP0=1, select bank1
  3024     0332  1303               	bcf	3,6	;RP1=0, select bank1
  3025     0333  00BA               	movwf	sprintf@tmpval^(0+128)
  3026     0334                     l4267:
  3027     0334  0844               	movf	(sprintf@fval+3)^(0+128),w
  3028     0335  00F5               	movwf	__div_to_l_@f1+3
  3029     0336  0843               	movf	(sprintf@fval+2)^(0+128),w
  3030     0337  00F4               	movwf	__div_to_l_@f1+2
  3031     0338  0842               	movf	(sprintf@fval+1)^(0+128),w
  3032     0339  00F3               	movwf	__div_to_l_@f1+1
  3033     033A  0841               	movf	sprintf@fval^(0+128),w
  3034     033B  00F2               	movwf	__div_to_l_@f1
  3035     033C  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  3036     033D  00F9               	movwf	__div_to_l_@f2+3
  3037     033E  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  3038     033F  00F8               	movwf	__div_to_l_@f2+2
  3039     0340  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  3040     0341  00F7               	movwf	__div_to_l_@f2+1
  3041     0342  083A               	movf	sprintf@tmpval^(0+128),w
  3042     0343  00F6               	movwf	__div_to_l_@f2
  3043     0344  120A  158A  20A0  120A  118A  	fcall	__div_to_l_
  3044     0349  0875               	movf	?__div_to_l_+3,w
  3045     034A  1683               	bsf	3,5	;RP0=1, select bank1
  3046     034B  1303               	bcf	3,6	;RP1=0, select bank1
  3047     034C  00B7               	movwf	(sprintf@val+3)^(0+128)
  3048     034D  0874               	movf	?__div_to_l_+2,w
  3049     034E  00B6               	movwf	(sprintf@val+2)^(0+128)
  3050     034F  0873               	movf	?__div_to_l_+1,w
  3051     0350  00B5               	movwf	(sprintf@val+1)^(0+128)
  3052     0351  0872               	movf	?__div_to_l_,w
  3053     0352  00B4               	movwf	sprintf@val^(0+128)
  3054     0353                     l4271:
  3055                           
  3056                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  3057     0353  3000               	movlw	0
  3058     0354  00C4               	movwf	(sprintf@fval+3)^(0+128)
  3059     0355  3000               	movlw	0
  3060     0356  00C3               	movwf	(sprintf@fval+2)^(0+128)
  3061     0357  3000               	movlw	0
  3062     0358  00C2               	movwf	(sprintf@fval+1)^(0+128)
  3063     0359  3000               	movlw	0
  3064     035A  00C1               	movwf	sprintf@fval^(0+128)
  3065                           
  3066                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  3067     035B  2BC2               	goto	l4279
  3068     035C                     l4273:
  3069                           
  3070                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  3071     035C  1683               	bsf	3,5	;RP0=1, select bank1
  3072     035D  1303               	bcf	3,6	;RP1=0, select bank1
  3073     035E  0844               	movf	(sprintf@fval+3)^(0+128),w
  3074     035F  1283               	bcf	3,5	;RP0=0, select bank0
  3075     0360  1303               	bcf	3,6	;RP1=0, select bank0
  3076     0361  00D8               	movwf	___fltol@f1+3
  3077     0362  1683               	bsf	3,5	;RP0=1, select bank1
  3078     0363  1303               	bcf	3,6	;RP1=0, select bank1
  3079     0364  0843               	movf	(sprintf@fval+2)^(0+128),w
  3080     0365  1283               	bcf	3,5	;RP0=0, select bank0
  3081     0366  1303               	bcf	3,6	;RP1=0, select bank0
  3082     0367  00D7               	movwf	___fltol@f1+2
  3083     0368  1683               	bsf	3,5	;RP0=1, select bank1
  3084     0369  1303               	bcf	3,6	;RP1=0, select bank1
  3085     036A  0842               	movf	(sprintf@fval+1)^(0+128),w
  3086     036B  1283               	bcf	3,5	;RP0=0, select bank0
  3087     036C  1303               	bcf	3,6	;RP1=0, select bank0
  3088     036D  00D6               	movwf	___fltol@f1+1
  3089     036E  1683               	bsf	3,5	;RP0=1, select bank1
  3090     036F  1303               	bcf	3,6	;RP1=0, select bank1
  3091     0370  0841               	movf	sprintf@fval^(0+128),w
  3092     0371  1283               	bcf	3,5	;RP0=0, select bank0
  3093     0372  1303               	bcf	3,6	;RP1=0, select bank0
  3094     0373  00D5               	movwf	___fltol@f1
  3095     0374  160A  118A  2003  120A  118A  	fcall	___fltol
  3096     0379  1283               	bcf	3,5	;RP0=0, select bank0
  3097     037A  1303               	bcf	3,6	;RP1=0, select bank0
  3098     037B  0858               	movf	?___fltol+3,w
  3099     037C  1683               	bsf	3,5	;RP0=1, select bank1
  3100     037D  1303               	bcf	3,6	;RP1=0, select bank1
  3101     037E  00B7               	movwf	(sprintf@val+3)^(0+128)
  3102     037F  1283               	bcf	3,5	;RP0=0, select bank0
  3103     0380  1303               	bcf	3,6	;RP1=0, select bank0
  3104     0381  0857               	movf	?___fltol+2,w
  3105     0382  1683               	bsf	3,5	;RP0=1, select bank1
  3106     0383  1303               	bcf	3,6	;RP1=0, select bank1
  3107     0384  00B6               	movwf	(sprintf@val+2)^(0+128)
  3108     0385  1283               	bcf	3,5	;RP0=0, select bank0
  3109     0386  1303               	bcf	3,6	;RP1=0, select bank0
  3110     0387  0856               	movf	?___fltol+1,w
  3111     0388  1683               	bsf	3,5	;RP0=1, select bank1
  3112     0389  1303               	bcf	3,6	;RP1=0, select bank1
  3113     038A  00B5               	movwf	(sprintf@val+1)^(0+128)
  3114     038B  1283               	bcf	3,5	;RP0=0, select bank0
  3115     038C  1303               	bcf	3,6	;RP1=0, select bank0
  3116     038D  0855               	movf	?___fltol,w
  3117     038E  1683               	bsf	3,5	;RP0=1, select bank1
  3118     038F  1303               	bcf	3,6	;RP1=0, select bank1
  3119     0390  00B4               	movwf	sprintf@val^(0+128)
  3120     0391                     l4275:
  3121                           
  3122                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  3123     0391  0837               	movf	(sprintf@val+3)^(0+128),w
  3124     0392  00F5               	movwf	___xxtofl@val+3
  3125     0393  0836               	movf	(sprintf@val+2)^(0+128),w
  3126     0394  00F4               	movwf	___xxtofl@val+2
  3127     0395  0835               	movf	(sprintf@val+1)^(0+128),w
  3128     0396  00F3               	movwf	___xxtofl@val+1
  3129     0397  0834               	movf	sprintf@val^(0+128),w
  3130     0398  00F2               	movwf	___xxtofl@val
  3131     0399  3000               	movlw	0
  3132     039A  120A  118A  2666  120A  118A  	fcall	___xxtofl
  3133     039F  0875               	movf	?___xxtofl+3,w
  3134     03A0  1683               	bsf	3,5	;RP0=1, select bank1
  3135     03A1  1303               	bcf	3,6	;RP1=0, select bank1
  3136     03A2  00A3               	movwf	(___flsub@a+3)^(0+128)
  3137     03A3  0874               	movf	?___xxtofl+2,w
  3138     03A4  00A2               	movwf	(___flsub@a+2)^(0+128)
  3139     03A5  0873               	movf	?___xxtofl+1,w
  3140     03A6  00A1               	movwf	(___flsub@a+1)^(0+128)
  3141     03A7  0872               	movf	?___xxtofl,w
  3142     03A8  00A0               	movwf	___flsub@a^(0+128)
  3143     03A9  0844               	movf	(sprintf@fval+3)^(0+128),w
  3144     03AA  00A7               	movwf	(___flsub@b+3)^(0+128)
  3145     03AB  0843               	movf	(sprintf@fval+2)^(0+128),w
  3146     03AC  00A6               	movwf	(___flsub@b+2)^(0+128)
  3147     03AD  0842               	movf	(sprintf@fval+1)^(0+128),w
  3148     03AE  00A5               	movwf	(___flsub@b+1)^(0+128)
  3149     03AF  0841               	movf	sprintf@fval^(0+128),w
  3150     03B0  00A4               	movwf	___flsub@b^(0+128)
  3151     03B1  160A  158A  22E9  120A  118A  	fcall	___flsub
  3152     03B6  1683               	bsf	3,5	;RP0=1, select bank1
  3153     03B7  1303               	bcf	3,6	;RP1=0, select bank1
  3154     03B8  0823               	movf	(?___flsub+3)^(0+128),w
  3155     03B9  00C4               	movwf	(sprintf@fval+3)^(0+128)
  3156     03BA  0822               	movf	(?___flsub+2)^(0+128),w
  3157     03BB  00C3               	movwf	(sprintf@fval+2)^(0+128)
  3158     03BC  0821               	movf	(?___flsub+1)^(0+128),w
  3159     03BD  00C2               	movwf	(sprintf@fval+1)^(0+128)
  3160     03BE  0820               	movf	?___flsub^(0+128),w
  3161     03BF  00C1               	movwf	sprintf@fval^(0+128)
  3162     03C0                     l4277:
  3163                           
  3164                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  3165     03C0  01B8               	clrf	sprintf@eexp^(0+128)
  3166     03C1  01B9               	clrf	(sprintf@eexp+1)^(0+128)
  3167     03C2                     l4279:
  3168                           
  3169                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3170     03C2  01C5               	clrf	sprintf@c^(0+128)
  3171     03C3  0AC5               	incf	sprintf@c^(0+128),f
  3172     03C4                     l4285:
  3173                           
  3174                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  3175     03C4  0845               	movf	sprintf@c^(0+128),w
  3176     03C5  00A8               	movwf	??_sprintf^(0+128)
  3177     03C6  3001               	movlw	1
  3178     03C7                     u6845:
  3179     03C7  1003               	clrc
  3180     03C8  0DA8               	rlf	??_sprintf^(0+128),f
  3181     03C9  3EFF               	addlw	-1
  3182     03CA  1D03               	skipz
  3183     03CB  2BC7               	goto	u6845
  3184     03CC  1003               	clrc
  3185     03CD  0D28               	rlf	??_sprintf^(0+128),w
  3186     03CE  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3187     03CF  0084               	movwf	4
  3188     03D0  120A  118A  272A  120A  118A  	fcall	stringdir
  3189     03D5  00A9               	movwf	(??_sprintf+1)^(0+128)
  3190     03D6  120A  118A  272A  120A  118A  	fcall	stringdir
  3191     03DB  00AA               	movwf	((??_sprintf+1)^(0+128)+1)
  3192     03DC  120A  118A  272A  120A  118A  	fcall	stringdir
  3193     03E1  00AB               	movwf	((??_sprintf+1)^(0+128)+2)
  3194     03E2  120A  118A  272A  120A  118A  	fcall	stringdir
  3195     03E7  00AC               	movwf	((??_sprintf+1)^(0+128)+3)
  3196     03E8  082C               	movf	(??_sprintf+4)^(0+128),w
  3197     03E9  0237               	subwf	(sprintf@val+3)^(0+128),w
  3198     03EA  1D03               	skipz
  3199     03EB  2BF6               	goto	u6855
  3200     03EC  082B               	movf	(??_sprintf+3)^(0+128),w
  3201     03ED  0236               	subwf	(sprintf@val+2)^(0+128),w
  3202     03EE  1D03               	skipz
  3203     03EF  2BF6               	goto	u6855
  3204     03F0  082A               	movf	(??_sprintf+2)^(0+128),w
  3205     03F1  0235               	subwf	(sprintf@val+1)^(0+128),w
  3206     03F2  1D03               	skipz
  3207     03F3  2BF6               	goto	u6855
  3208     03F4  0829               	movf	(??_sprintf+1)^(0+128),w
  3209     03F5  0234               	subwf	sprintf@val^(0+128),w
  3210     03F6                     u6855:
  3211     03F6  1803               	skipnc
  3212     03F7  2BF9               	goto	u6851
  3213     03F8  2BFA               	goto	u6850
  3214     03F9                     u6851:
  3215     03F9  2BFB               	goto	l4289
  3216     03FA                     u6850:
  3217     03FA  2C05               	goto	l4291
  3218     03FB                     l4289:
  3219     03FB  3001               	movlw	1
  3220     03FC  00A8               	movwf	??_sprintf^(0+128)
  3221     03FD  0828               	movf	??_sprintf^(0+128),w
  3222     03FE  07C5               	addwf	sprintf@c^(0+128),f
  3223     03FF  300A               	movlw	10
  3224     0400  0645               	xorwf	sprintf@c^(0+128),w
  3225     0401  1D03               	btfss	3,2
  3226     0402  2C04               	goto	u6861
  3227     0403  2C05               	goto	u6860
  3228     0404                     u6861:
  3229     0404  2BC4               	goto	l4285
  3230     0405                     u6860:
  3231     0405                     l4291:
  3232                           
  3233                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  3234     0405  3003               	movlw	3
  3235     0406  0532               	andwf	sprintf@flag^(0+128),w
  3236     0407  00A8               	movwf	??_sprintf^(0+128)
  3237     0408  3000               	movlw	0
  3238     0409  0533               	andwf	(sprintf@flag+1)^(0+128),w
  3239     040A  00A9               	movwf	(??_sprintf+1)^(0+128)
  3240     040B  0828               	movf	??_sprintf^(0+128),w
  3241     040C  0429               	iorwf	(??_sprintf^(0+128)+1),w
  3242     040D  1903               	btfsc	3,2
  3243     040E  2C10               	goto	u6871
  3244     040F  2C11               	goto	u6870
  3245     0410                     u6871:
  3246     0410  2C7F               	goto	l403
  3247     0411                     u6870:
  3248     0411                     l4293:
  3249                           
  3250                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3251     0411  083E               	movf	sprintf@sp^(0+128),w
  3252     0412  0084               	movwf	4
  3253     0413  302D               	movlw	45
  3254     0414  1383               	bcf	3,7	;select IRP bank0
  3255     0415  0080               	movwf	0
  3256     0416                     l4295:
  3257     0416  3001               	movlw	1
  3258     0417  00A8               	movwf	??_sprintf^(0+128)
  3259     0418  0828               	movf	??_sprintf^(0+128),w
  3260     0419  07BE               	addwf	sprintf@sp^(0+128),f
  3261     041A  2C7F               	goto	l403
  3262     041B                     l4297:
  3263                           
  3264                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3265     041B  0845               	movf	sprintf@c^(0+128),w
  3266     041C  00A8               	movwf	??_sprintf^(0+128)
  3267     041D  3001               	movlw	1
  3268     041E                     u6885:
  3269     041E  1003               	clrc
  3270     041F  0DA8               	rlf	??_sprintf^(0+128),f
  3271     0420  3EFF               	addlw	-1
  3272     0421  1D03               	skipz
  3273     0422  2C1E               	goto	u6885
  3274     0423  1003               	clrc
  3275     0424  0D28               	rlf	??_sprintf^(0+128),w
  3276     0425  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3277     0426  0084               	movwf	4
  3278     0427  120A  118A  272A  120A  118A  	fcall	stringdir
  3279     042C  00F2               	movwf	___lldiv@divisor
  3280     042D  120A  118A  272A  120A  118A  	fcall	stringdir
  3281     0432  00F3               	movwf	___lldiv@divisor+1
  3282     0433  120A  118A  272A  120A  118A  	fcall	stringdir
  3283     0438  00F4               	movwf	___lldiv@divisor+2
  3284     0439  120A  118A  272A  120A  118A  	fcall	stringdir
  3285     043E  00F5               	movwf	___lldiv@divisor+3
  3286     043F  0837               	movf	(sprintf@val+3)^(0+128),w
  3287     0440  00F9               	movwf	___lldiv@dividend+3
  3288     0441  0836               	movf	(sprintf@val+2)^(0+128),w
  3289     0442  00F8               	movwf	___lldiv@dividend+2
  3290     0443  0835               	movf	(sprintf@val+1)^(0+128),w
  3291     0444  00F7               	movwf	___lldiv@dividend+1
  3292     0445  0834               	movf	sprintf@val^(0+128),w
  3293     0446  00F6               	movwf	___lldiv@dividend
  3294     0447  160A  158A  244C  120A  118A  	fcall	___lldiv
  3295     044C  0875               	movf	?___lldiv+3,w
  3296     044D  1683               	bsf	3,5	;RP0=1, select bank1
  3297     044E  1303               	bcf	3,6	;RP1=0, select bank1
  3298     044F  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  3299     0450  0874               	movf	?___lldiv+2,w
  3300     0451  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  3301     0452  0873               	movf	?___lldiv+1,w
  3302     0453  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  3303     0454  0872               	movf	?___lldiv,w
  3304     0455  00BA               	movwf	sprintf@tmpval^(0+128)
  3305     0456                     l4299:
  3306                           
  3307                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3308     0456  3000               	movlw	0
  3309     0457  00F5               	movwf	___llmod@divisor+3
  3310     0458  3000               	movlw	0
  3311     0459  00F4               	movwf	___llmod@divisor+2
  3312     045A  3000               	movlw	0
  3313     045B  00F3               	movwf	___llmod@divisor+1
  3314     045C  300A               	movlw	10
  3315     045D  00F2               	movwf	___llmod@divisor
  3316     045E  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  3317     045F  00F9               	movwf	___llmod@dividend+3
  3318     0460  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  3319     0461  00F8               	movwf	___llmod@dividend+2
  3320     0462  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  3321     0463  00F7               	movwf	___llmod@dividend+1
  3322     0464  083A               	movf	sprintf@tmpval^(0+128),w
  3323     0465  00F6               	movwf	___llmod@dividend
  3324     0466  160A  158A  2339  120A  118A  	fcall	___llmod
  3325     046B  0875               	movf	?___llmod+3,w
  3326     046C  1683               	bsf	3,5	;RP0=1, select bank1
  3327     046D  1303               	bcf	3,6	;RP1=0, select bank1
  3328     046E  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  3329     046F  0874               	movf	?___llmod+2,w
  3330     0470  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  3331     0471  0873               	movf	?___llmod+1,w
  3332     0472  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  3333     0473  0872               	movf	?___llmod,w
  3334     0474  00BA               	movwf	sprintf@tmpval^(0+128)
  3335     0475                     l4301:
  3336                           
  3337                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3338     0475  083E               	movf	sprintf@sp^(0+128),w
  3339     0476  0084               	movwf	4
  3340     0477  083A               	movf	sprintf@tmpval^(0+128),w
  3341     0478  3E30               	addlw	48
  3342     0479  1383               	bcf	3,7	;select IRP bank0
  3343     047A  0080               	movwf	0
  3344     047B  3001               	movlw	1
  3345     047C  00A8               	movwf	??_sprintf^(0+128)
  3346     047D  0828               	movf	??_sprintf^(0+128),w
  3347     047E  07BE               	addwf	sprintf@sp^(0+128),f
  3348     047F                     l403:	
  3349                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1232:    }
  3350                           
  3351                           
  3352                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3353     047F  3001               	movlw	1
  3354     0480  02C5               	subwf	sprintf@c^(0+128),f
  3355     0481  0A45               	incf	sprintf@c^(0+128),w
  3356     0482  1D03               	btfss	3,2
  3357     0483  2C85               	goto	u6891
  3358     0484  2C86               	goto	u6890
  3359     0485                     u6891:
  3360     0485  2C1B               	goto	l4297
  3361     0486                     u6890:
  3362     0486  2C98               	goto	l4309
  3363     0487                     l4303:
  3364                           
  3365                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3366     0487  1683               	bsf	3,5	;RP0=1, select bank1
  3367     0488  1303               	bcf	3,6	;RP1=0, select bank1
  3368     0489  083E               	movf	sprintf@sp^(0+128),w
  3369     048A  0084               	movwf	4
  3370     048B  3030               	movlw	48
  3371     048C  1383               	bcf	3,7	;select IRP bank0
  3372     048D  0080               	movwf	0
  3373     048E                     l4305:
  3374     048E  3001               	movlw	1
  3375     048F  00A8               	movwf	??_sprintf^(0+128)
  3376     0490  0828               	movf	??_sprintf^(0+128),w
  3377     0491  07BE               	addwf	sprintf@sp^(0+128),f
  3378     0492                     l4307:
  3379                           
  3380                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3381     0492  30FF               	movlw	255
  3382     0493  07B8               	addwf	sprintf@eexp^(0+128),f
  3383     0494  1803               	skipnc
  3384     0495  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  3385     0496  30FF               	movlw	255
  3386     0497  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  3387     0498                     l4309:
  3388                           
  3389                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3390     0498  0839               	movf	(sprintf@eexp+1)^(0+128),w
  3391     0499  3A80               	xorlw	128
  3392     049A  00FF               	movwf	btemp+1
  3393     049B  3080               	movlw	128
  3394     049C  027F               	subwf	btemp+1,w
  3395     049D  1D03               	skipz
  3396     049E  2CA1               	goto	u6905
  3397     049F  3001               	movlw	1
  3398     04A0  0238               	subwf	sprintf@eexp^(0+128),w
  3399     04A1                     u6905:
  3400     04A1  1803               	skipnc
  3401     04A2  2CA4               	goto	u6901
  3402     04A3  2CA5               	goto	u6900
  3403     04A4                     u6901:
  3404     04A4  2C87               	goto	l4303
  3405     04A5                     u6900:
  3406     04A5                     l4311:
  3407                           
  3408                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3409     04A5  1683               	bsf	3,5	;RP0=1, select bank1
  3410     04A6  1303               	bcf	3,6	;RP1=0, select bank1
  3411     04A7  0840               	movf	(sprintf@prec+1)^(0+128),w
  3412     04A8  3A80               	xorlw	128
  3413     04A9  00FF               	movwf	btemp+1
  3414     04AA  3080               	movlw	128
  3415     04AB  027F               	subwf	btemp+1,w
  3416     04AC  1D03               	skipz
  3417     04AD  2CB0               	goto	u6915
  3418     04AE  3009               	movlw	9
  3419     04AF  023F               	subwf	sprintf@prec^(0+128),w
  3420     04B0                     u6915:
  3421     04B0  1C03               	skipc
  3422     04B1  2CB3               	goto	u6911
  3423     04B2  2CB4               	goto	u6910
  3424     04B3                     u6911:
  3425     04B3  2CB9               	goto	l4315
  3426     04B4                     u6910:
  3427     04B4                     l4313:
  3428                           
  3429                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3430     04B4  3008               	movlw	8
  3431     04B5  1683               	bsf	3,5	;RP0=1, select bank1
  3432     04B6  1303               	bcf	3,6	;RP1=0, select bank1
  3433     04B7  00C5               	movwf	sprintf@c^(0+128)
  3434     04B8  2CBD               	goto	l410
  3435     04B9                     l4315:
  3436                           
  3437                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3438     04B9  1683               	bsf	3,5	;RP0=1, select bank1
  3439     04BA  1303               	bcf	3,6	;RP1=0, select bank1
  3440     04BB  083F               	movf	sprintf@prec^(0+128),w
  3441     04BC  00C5               	movwf	sprintf@c^(0+128)
  3442     04BD                     l410:
  3443                           
  3444                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3445     04BD  0845               	movf	sprintf@c^(0+128),w
  3446     04BE  00A8               	movwf	??_sprintf^(0+128)
  3447     04BF  01A9               	clrf	(??_sprintf^(0+128)+1)
  3448     04C0  0828               	movf	??_sprintf^(0+128),w
  3449     04C1  02BF               	subwf	sprintf@prec^(0+128),f
  3450     04C2  0829               	movf	(??_sprintf+1)^(0+128),w
  3451     04C3  1C03               	skipc
  3452     04C4  03C0               	decf	(sprintf@prec+1)^(0+128),f
  3453     04C5  02C0               	subwf	(sprintf@prec+1)^(0+128),f
  3454     04C6                     l4317:
  3455                           
  3456                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3457     04C6  0845               	movf	sprintf@c^(0+128),w
  3458     04C7  1903               	btfsc	3,2
  3459     04C8  2CCA               	goto	u6921
  3460     04C9  2CCB               	goto	u6920
  3461     04CA                     u6921:
  3462     04CA  2CD4               	goto	l4323
  3463     04CB                     u6920:
  3464     04CB                     l4319:
  3465                           
  3466                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3467     04CB  083E               	movf	sprintf@sp^(0+128),w
  3468     04CC  0084               	movwf	4
  3469     04CD  302E               	movlw	46
  3470     04CE  1383               	bcf	3,7	;select IRP bank0
  3471     04CF  0080               	movwf	0
  3472     04D0                     l4321:
  3473     04D0  3001               	movlw	1
  3474     04D1  00A8               	movwf	??_sprintf^(0+128)
  3475     04D2  0828               	movf	??_sprintf^(0+128),w
  3476     04D3  07BE               	addwf	sprintf@sp^(0+128),f
  3477     04D4                     l4323:
  3478                           
  3479                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3480     04D4  0845               	movf	sprintf@c^(0+128),w
  3481     04D5  120A  158A  249D  120A  118A  	fcall	_scale
  3482     04DA  1283               	bcf	3,5	;RP0=0, select bank0
  3483     04DB  1303               	bcf	3,6	;RP1=0, select bank0
  3484     04DC  0845               	movf	?_scale+3,w
  3485     04DD  1683               	bsf	3,5	;RP0=1, select bank1
  3486     04DE  1303               	bcf	3,6	;RP1=0, select bank1
  3487     04DF  00B0               	movwf	(_sprintf$1273+3)^(0+128)
  3488     04E0  1283               	bcf	3,5	;RP0=0, select bank0
  3489     04E1  1303               	bcf	3,6	;RP1=0, select bank0
  3490     04E2  0844               	movf	?_scale+2,w
  3491     04E3  1683               	bsf	3,5	;RP0=1, select bank1
  3492     04E4  1303               	bcf	3,6	;RP1=0, select bank1
  3493     04E5  00AF               	movwf	(_sprintf$1273+2)^(0+128)
  3494     04E6  1283               	bcf	3,5	;RP0=0, select bank0
  3495     04E7  1303               	bcf	3,6	;RP1=0, select bank0
  3496     04E8  0843               	movf	?_scale+1,w
  3497     04E9  1683               	bsf	3,5	;RP0=1, select bank1
  3498     04EA  1303               	bcf	3,6	;RP1=0, select bank1
  3499     04EB  00AE               	movwf	(_sprintf$1273+1)^(0+128)
  3500     04EC  1283               	bcf	3,5	;RP0=0, select bank0
  3501     04ED  1303               	bcf	3,6	;RP1=0, select bank0
  3502     04EE  0842               	movf	?_scale,w
  3503     04EF  1683               	bsf	3,5	;RP0=1, select bank1
  3504     04F0  1303               	bcf	3,6	;RP1=0, select bank1
  3505     04F1  00AD               	movwf	_sprintf$1273^(0+128)
  3506     04F2                     l4325:
  3507                           
  3508                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3509     04F2  0830               	movf	(_sprintf$1273+3)^(0+128),w
  3510     04F3  1283               	bcf	3,5	;RP0=0, select bank0
  3511     04F4  1303               	bcf	3,6	;RP1=0, select bank0
  3512     04F5  00AF               	movwf	___flmul@a+3
  3513     04F6  1683               	bsf	3,5	;RP0=1, select bank1
  3514     04F7  1303               	bcf	3,6	;RP1=0, select bank1
  3515     04F8  082F               	movf	(_sprintf$1273+2)^(0+128),w
  3516     04F9  1283               	bcf	3,5	;RP0=0, select bank0
  3517     04FA  1303               	bcf	3,6	;RP1=0, select bank0
  3518     04FB  00AE               	movwf	___flmul@a+2
  3519     04FC  1683               	bsf	3,5	;RP0=1, select bank1
  3520     04FD  1303               	bcf	3,6	;RP1=0, select bank1
  3521     04FE  082E               	movf	(_sprintf$1273+1)^(0+128),w
  3522     04FF  1283               	bcf	3,5	;RP0=0, select bank0
  3523     0500  1303               	bcf	3,6	;RP1=0, select bank0
  3524     0501  00AD               	movwf	___flmul@a+1
  3525     0502  1683               	bsf	3,5	;RP0=1, select bank1
  3526     0503  1303               	bcf	3,6	;RP1=0, select bank1
  3527     0504  082D               	movf	_sprintf$1273^(0+128),w
  3528     0505  1283               	bcf	3,5	;RP0=0, select bank0
  3529     0506  1303               	bcf	3,6	;RP1=0, select bank0
  3530     0507  00AC               	movwf	___flmul@a
  3531     0508  1683               	bsf	3,5	;RP0=1, select bank1
  3532     0509  1303               	bcf	3,6	;RP1=0, select bank1
  3533     050A  0844               	movf	(sprintf@fval+3)^(0+128),w
  3534     050B  1283               	bcf	3,5	;RP0=0, select bank0
  3535     050C  1303               	bcf	3,6	;RP1=0, select bank0
  3536     050D  00AB               	movwf	___flmul@b+3
  3537     050E  1683               	bsf	3,5	;RP0=1, select bank1
  3538     050F  1303               	bcf	3,6	;RP1=0, select bank1
  3539     0510  0843               	movf	(sprintf@fval+2)^(0+128),w
  3540     0511  1283               	bcf	3,5	;RP0=0, select bank0
  3541     0512  1303               	bcf	3,6	;RP1=0, select bank0
  3542     0513  00AA               	movwf	___flmul@b+2
  3543     0514  1683               	bsf	3,5	;RP0=1, select bank1
  3544     0515  1303               	bcf	3,6	;RP1=0, select bank1
  3545     0516  0842               	movf	(sprintf@fval+1)^(0+128),w
  3546     0517  1283               	bcf	3,5	;RP0=0, select bank0
  3547     0518  1303               	bcf	3,6	;RP1=0, select bank0
  3548     0519  00A9               	movwf	___flmul@b+1
  3549     051A  1683               	bsf	3,5	;RP0=1, select bank1
  3550     051B  1303               	bcf	3,6	;RP1=0, select bank1
  3551     051C  0841               	movf	sprintf@fval^(0+128),w
  3552     051D  1283               	bcf	3,5	;RP0=0, select bank0
  3553     051E  1303               	bcf	3,6	;RP1=0, select bank0
  3554     051F  00A8               	movwf	___flmul@b
  3555     0520  120A  158A  2158  120A  118A  	fcall	___flmul
  3556     0525  1283               	bcf	3,5	;RP0=0, select bank0
  3557     0526  1303               	bcf	3,6	;RP1=0, select bank0
  3558     0527  082B               	movf	?___flmul+3,w
  3559     0528  00D8               	movwf	___fltol@f1+3
  3560     0529  082A               	movf	?___flmul+2,w
  3561     052A  00D7               	movwf	___fltol@f1+2
  3562     052B  0829               	movf	?___flmul+1,w
  3563     052C  00D6               	movwf	___fltol@f1+1
  3564     052D  0828               	movf	?___flmul,w
  3565     052E  00D5               	movwf	___fltol@f1
  3566     052F  160A  118A  2003  120A  118A  	fcall	___fltol
  3567     0534  1283               	bcf	3,5	;RP0=0, select bank0
  3568     0535  1303               	bcf	3,6	;RP1=0, select bank0
  3569     0536  0858               	movf	?___fltol+3,w
  3570     0537  1683               	bsf	3,5	;RP0=1, select bank1
  3571     0538  1303               	bcf	3,6	;RP1=0, select bank1
  3572     0539  00B7               	movwf	(sprintf@val+3)^(0+128)
  3573     053A  1283               	bcf	3,5	;RP0=0, select bank0
  3574     053B  1303               	bcf	3,6	;RP1=0, select bank0
  3575     053C  0857               	movf	?___fltol+2,w
  3576     053D  1683               	bsf	3,5	;RP0=1, select bank1
  3577     053E  1303               	bcf	3,6	;RP1=0, select bank1
  3578     053F  00B6               	movwf	(sprintf@val+2)^(0+128)
  3579     0540  1283               	bcf	3,5	;RP0=0, select bank0
  3580     0541  1303               	bcf	3,6	;RP1=0, select bank0
  3581     0542  0856               	movf	?___fltol+1,w
  3582     0543  1683               	bsf	3,5	;RP0=1, select bank1
  3583     0544  1303               	bcf	3,6	;RP1=0, select bank1
  3584     0545  00B5               	movwf	(sprintf@val+1)^(0+128)
  3585     0546  1283               	bcf	3,5	;RP0=0, select bank0
  3586     0547  1303               	bcf	3,6	;RP1=0, select bank0
  3587     0548  0855               	movf	?___fltol,w
  3588     0549  1683               	bsf	3,5	;RP0=1, select bank1
  3589     054A  1303               	bcf	3,6	;RP1=0, select bank1
  3590     054B  00B4               	movwf	sprintf@val^(0+128)
  3591                           
  3592                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3593     054C  2DEC               	goto	l4335
  3594     054D                     l4327:
  3595                           
  3596                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3597     054D  0845               	movf	sprintf@c^(0+128),w
  3598     054E  00A8               	movwf	??_sprintf^(0+128)
  3599     054F  3001               	movlw	1
  3600     0550                     u6935:
  3601     0550  1003               	clrc
  3602     0551  0DA8               	rlf	??_sprintf^(0+128),f
  3603     0552  3EFF               	addlw	-1
  3604     0553  1D03               	skipz
  3605     0554  2D50               	goto	u6935
  3606     0555  1003               	clrc
  3607     0556  0D28               	rlf	??_sprintf^(0+128),w
  3608     0557  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3609     0558  0084               	movwf	4
  3610     0559  120A  118A  272A  120A  118A  	fcall	stringdir
  3611     055E  00F2               	movwf	___lldiv@divisor
  3612     055F  120A  118A  272A  120A  118A  	fcall	stringdir
  3613     0564  00F3               	movwf	___lldiv@divisor+1
  3614     0565  120A  118A  272A  120A  118A  	fcall	stringdir
  3615     056A  00F4               	movwf	___lldiv@divisor+2
  3616     056B  120A  118A  272A  120A  118A  	fcall	stringdir
  3617     0570  00F5               	movwf	___lldiv@divisor+3
  3618     0571  0837               	movf	(sprintf@val+3)^(0+128),w
  3619     0572  00F9               	movwf	___lldiv@dividend+3
  3620     0573  0836               	movf	(sprintf@val+2)^(0+128),w
  3621     0574  00F8               	movwf	___lldiv@dividend+2
  3622     0575  0835               	movf	(sprintf@val+1)^(0+128),w
  3623     0576  00F7               	movwf	___lldiv@dividend+1
  3624     0577  0834               	movf	sprintf@val^(0+128),w
  3625     0578  00F6               	movwf	___lldiv@dividend
  3626     0579  160A  158A  244C  120A  118A  	fcall	___lldiv
  3627     057E  0875               	movf	?___lldiv+3,w
  3628     057F  1683               	bsf	3,5	;RP0=1, select bank1
  3629     0580  1303               	bcf	3,6	;RP1=0, select bank1
  3630     0581  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  3631     0582  0874               	movf	?___lldiv+2,w
  3632     0583  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  3633     0584  0873               	movf	?___lldiv+1,w
  3634     0585  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  3635     0586  0872               	movf	?___lldiv,w
  3636     0587  00BA               	movwf	sprintf@tmpval^(0+128)
  3637     0588                     l4329:
  3638                           
  3639                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3640     0588  3000               	movlw	0
  3641     0589  00F5               	movwf	___llmod@divisor+3
  3642     058A  3000               	movlw	0
  3643     058B  00F4               	movwf	___llmod@divisor+2
  3644     058C  3000               	movlw	0
  3645     058D  00F3               	movwf	___llmod@divisor+1
  3646     058E  300A               	movlw	10
  3647     058F  00F2               	movwf	___llmod@divisor
  3648     0590  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  3649     0591  00F9               	movwf	___llmod@dividend+3
  3650     0592  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  3651     0593  00F8               	movwf	___llmod@dividend+2
  3652     0594  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  3653     0595  00F7               	movwf	___llmod@dividend+1
  3654     0596  083A               	movf	sprintf@tmpval^(0+128),w
  3655     0597  00F6               	movwf	___llmod@dividend
  3656     0598  160A  158A  2339  120A  118A  	fcall	___llmod
  3657     059D  0875               	movf	?___llmod+3,w
  3658     059E  1683               	bsf	3,5	;RP0=1, select bank1
  3659     059F  1303               	bcf	3,6	;RP1=0, select bank1
  3660     05A0  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  3661     05A1  0874               	movf	?___llmod+2,w
  3662     05A2  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  3663     05A3  0873               	movf	?___llmod+1,w
  3664     05A4  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  3665     05A5  0872               	movf	?___llmod,w
  3666     05A6  00BA               	movwf	sprintf@tmpval^(0+128)
  3667     05A7                     l4331:
  3668                           
  3669                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3670     05A7  083E               	movf	sprintf@sp^(0+128),w
  3671     05A8  0084               	movwf	4
  3672     05A9  083A               	movf	sprintf@tmpval^(0+128),w
  3673     05AA  3E30               	addlw	48
  3674     05AB  1383               	bcf	3,7	;select IRP bank0
  3675     05AC  0080               	movwf	0
  3676     05AD  3001               	movlw	1
  3677     05AE  00A8               	movwf	??_sprintf^(0+128)
  3678     05AF  0828               	movf	??_sprintf^(0+128),w
  3679     05B0  07BE               	addwf	sprintf@sp^(0+128),f
  3680     05B1                     l4333:
  3681                           
  3682                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3683     05B1  0845               	movf	sprintf@c^(0+128),w
  3684     05B2  00A8               	movwf	??_sprintf^(0+128)
  3685     05B3  3001               	movlw	1
  3686     05B4                     u6945:
  3687     05B4  1003               	clrc
  3688     05B5  0DA8               	rlf	??_sprintf^(0+128),f
  3689     05B6  3EFF               	addlw	-1
  3690     05B7  1D03               	skipz
  3691     05B8  2DB4               	goto	u6945
  3692     05B9  1003               	clrc
  3693     05BA  0D28               	rlf	??_sprintf^(0+128),w
  3694     05BB  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3695     05BC  0084               	movwf	4
  3696     05BD  120A  118A  272A  120A  118A  	fcall	stringdir
  3697     05C2  00F2               	movwf	___llmod@divisor
  3698     05C3  120A  118A  272A  120A  118A  	fcall	stringdir
  3699     05C8  00F3               	movwf	___llmod@divisor+1
  3700     05C9  120A  118A  272A  120A  118A  	fcall	stringdir
  3701     05CE  00F4               	movwf	___llmod@divisor+2
  3702     05CF  120A  118A  272A  120A  118A  	fcall	stringdir
  3703     05D4  00F5               	movwf	___llmod@divisor+3
  3704     05D5  0837               	movf	(sprintf@val+3)^(0+128),w
  3705     05D6  00F9               	movwf	___llmod@dividend+3
  3706     05D7  0836               	movf	(sprintf@val+2)^(0+128),w
  3707     05D8  00F8               	movwf	___llmod@dividend+2
  3708     05D9  0835               	movf	(sprintf@val+1)^(0+128),w
  3709     05DA  00F7               	movwf	___llmod@dividend+1
  3710     05DB  0834               	movf	sprintf@val^(0+128),w
  3711     05DC  00F6               	movwf	___llmod@dividend
  3712     05DD  160A  158A  2339  120A  118A  	fcall	___llmod
  3713     05E2  0875               	movf	?___llmod+3,w
  3714     05E3  1683               	bsf	3,5	;RP0=1, select bank1
  3715     05E4  1303               	bcf	3,6	;RP1=0, select bank1
  3716     05E5  00B7               	movwf	(sprintf@val+3)^(0+128)
  3717     05E6  0874               	movf	?___llmod+2,w
  3718     05E7  00B6               	movwf	(sprintf@val+2)^(0+128)
  3719     05E8  0873               	movf	?___llmod+1,w
  3720     05E9  00B5               	movwf	(sprintf@val+1)^(0+128)
  3721     05EA  0872               	movf	?___llmod,w
  3722     05EB  00B4               	movwf	sprintf@val^(0+128)
  3723     05EC                     l4335:
  3724                           
  3725                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3726     05EC  3001               	movlw	1
  3727     05ED  02C5               	subwf	sprintf@c^(0+128),f
  3728     05EE  0A45               	incf	sprintf@c^(0+128),w
  3729     05EF  1D03               	btfss	3,2
  3730     05F0  2DF2               	goto	u6951
  3731     05F1  2DF3               	goto	u6950
  3732     05F2                     u6951:
  3733     05F2  2D4D               	goto	l4327
  3734     05F3                     u6950:
  3735     05F3  2E03               	goto	l4343
  3736     05F4                     l4337:
  3737                           
  3738                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3739     05F4  083E               	movf	sprintf@sp^(0+128),w
  3740     05F5  0084               	movwf	4
  3741     05F6  3030               	movlw	48
  3742     05F7  1383               	bcf	3,7	;select IRP bank0
  3743     05F8  0080               	movwf	0
  3744     05F9                     l4339:
  3745     05F9  3001               	movlw	1
  3746     05FA  00A8               	movwf	??_sprintf^(0+128)
  3747     05FB  0828               	movf	??_sprintf^(0+128),w
  3748     05FC  07BE               	addwf	sprintf@sp^(0+128),f
  3749     05FD                     l4341:
  3750                           
  3751                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3752     05FD  30FF               	movlw	255
  3753     05FE  07BF               	addwf	sprintf@prec^(0+128),f
  3754     05FF  1803               	skipnc
  3755     0600  0AC0               	incf	(sprintf@prec+1)^(0+128),f
  3756     0601  30FF               	movlw	255
  3757     0602  07C0               	addwf	(sprintf@prec+1)^(0+128),f
  3758     0603                     l4343:
  3759                           
  3760                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3761     0603  083F               	movf	sprintf@prec^(0+128),w
  3762     0604  0440               	iorwf	(sprintf@prec+1)^(0+128),w
  3763     0605  1D03               	btfss	3,2
  3764     0606  2E08               	goto	u6961
  3765     0607  2E09               	goto	u6960
  3766     0608                     u6961:
  3767     0608  2DF4               	goto	l4337
  3768     0609                     u6960:
  3769     0609  2E4D               	goto	l4363
  3770     060A                     l4345:
  3771                           
  3772                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3773     060A  083F               	movf	sprintf@prec^(0+128),w
  3774     060B  0440               	iorwf	(sprintf@prec+1)^(0+128),w
  3775     060C  1D03               	btfss	3,2
  3776     060D  2E0F               	goto	u6971
  3777     060E  2E10               	goto	u6970
  3778     060F                     u6971:
  3779     060F  2E1E               	goto	l418
  3780     0610                     u6970:
  3781     0610                     l4347:
  3782     0610  0837               	movf	(sprintf@val+3)^(0+128),w
  3783     0611  0436               	iorwf	(sprintf@val+2)^(0+128),w
  3784     0612  0435               	iorwf	(sprintf@val+1)^(0+128),w
  3785     0613  0434               	iorwf	sprintf@val^(0+128),w
  3786     0614  1D03               	skipz
  3787     0615  2E17               	goto	u6981
  3788     0616  2E18               	goto	u6980
  3789     0617                     u6981:
  3790     0617  2E1E               	goto	l418
  3791     0618                     u6980:
  3792     0618                     l4349:
  3793                           
  3794                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3795     0618  3001               	movlw	1
  3796     0619  07BF               	addwf	sprintf@prec^(0+128),f
  3797     061A  1803               	skipnc
  3798     061B  0AC0               	incf	(sprintf@prec+1)^(0+128),f
  3799     061C  3000               	movlw	0
  3800     061D  07C0               	addwf	(sprintf@prec+1)^(0+128),f
  3801     061E                     l418:
  3802                           
  3803                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3804     061E  0840               	movf	(sprintf@prec+1)^(0+128),w
  3805     061F  3A80               	xorlw	128
  3806     0620  3C80               	sublw	128
  3807     0621  1D03               	skipz
  3808     0622  2E25               	goto	u6995
  3809     0623  083F               	movf	sprintf@prec^(0+128),w
  3810     0624  0245               	subwf	sprintf@c^(0+128),w
  3811     0625                     u6995:
  3812     0625  1803               	skipnc
  3813     0626  2E28               	goto	u6991
  3814     0627  2E29               	goto	u6990
  3815     0628                     u6991:
  3816     0628  2E2A               	goto	l4353
  3817     0629                     u6990:
  3818     0629                     l4351:
  3819     0629  2E39               	goto	l4357
  3820     062A                     l4353:
  3821     062A  1683               	bsf	3,5	;RP0=1, select bank1
  3822     062B  1303               	bcf	3,6	;RP1=0, select bank1
  3823     062C  0840               	movf	(sprintf@prec+1)^(0+128),w
  3824     062D  3A80               	xorlw	128
  3825     062E  00A8               	movwf	??_sprintf^(0+128)
  3826     062F  3080               	movlw	128
  3827     0630  0228               	subwf	??_sprintf^(0+128),w
  3828     0631  1D03               	skipz
  3829     0632  2E35               	goto	u7005
  3830     0633  0845               	movf	sprintf@c^(0+128),w
  3831     0634  023F               	subwf	sprintf@prec^(0+128),w
  3832     0635                     u7005:
  3833     0635  1803               	skipnc
  3834     0636  2E38               	goto	u7001
  3835     0637  2E39               	goto	u7000
  3836     0638                     u7001:
  3837     0638  2E39               	goto	l4357
  3838     0639                     u7000:
  3839     0639                     l4355:
  3840     0639                     l4357:
  3841                           
  3842                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3843     0639  3003               	movlw	3
  3844     063A  1683               	bsf	3,5	;RP0=1, select bank1
  3845     063B  1303               	bcf	3,6	;RP1=0, select bank1
  3846     063C  0532               	andwf	sprintf@flag^(0+128),w
  3847     063D  00A8               	movwf	??_sprintf^(0+128)
  3848     063E  3000               	movlw	0
  3849     063F  0533               	andwf	(sprintf@flag+1)^(0+128),w
  3850     0640  00A9               	movwf	(??_sprintf+1)^(0+128)
  3851     0641  0828               	movf	??_sprintf^(0+128),w
  3852     0642  0429               	iorwf	(??_sprintf^(0+128)+1),w
  3853     0643  1903               	btfsc	3,2
  3854     0644  2E46               	goto	u7011
  3855     0645  2E47               	goto	u7010
  3856     0646                     u7011:
  3857     0646  2E4D               	goto	l4363
  3858     0647                     u7010:
  3859     0647                     l4359:
  3860                           
  3861                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3862     0647  083E               	movf	sprintf@sp^(0+128),w
  3863     0648  0084               	movwf	4
  3864     0649  302D               	movlw	45
  3865     064A  1383               	bcf	3,7	;select IRP bank0
  3866     064B  0080               	movwf	0
  3867     064C  282E               	goto	l4175
  3868     064D                     l4363:
  3869                           
  3870                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3871     064D  3001               	movlw	1
  3872     064E  1283               	bcf	3,5	;RP0=0, select bank0
  3873     064F  1303               	bcf	3,6	;RP1=0, select bank0
  3874     0650  07EA               	addwf	sprintf@f,f
  3875     0651  30FF               	movlw	-1
  3876     0652  076A               	addwf	sprintf@f,w
  3877     0653  0084               	movwf	4
  3878     0654  120A  118A  272A  120A  118A  	fcall	stringdir
  3879     0659  1683               	bsf	3,5	;RP0=1, select bank1
  3880     065A  1303               	bcf	3,6	;RP1=0, select bank1
  3881     065B  00C5               	movwf	sprintf@c^(0+128)
  3882     065C  0845               	movf	sprintf@c^(0+128),w
  3883     065D  1D03               	btfss	3,2
  3884     065E  2E60               	goto	u7021
  3885     065F  2E61               	goto	u7020
  3886     0660                     u7021:
  3887     0660  2823               	goto	l4171
  3888     0661                     u7020:
  3889     0661                     l4365:
  3890                           
  3891                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3892     0661  083E               	movf	sprintf@sp^(0+128),w
  3893     0662  0084               	movwf	4
  3894     0663  1383               	bcf	3,7	;select IRP bank0
  3895     0664  0180               	clrf	0
  3896     0665                     l424:
  3897     0665  0008               	return
  3898     0666                     __end_of_sprintf:
  3899                           
  3900                           	psect	text2
  3901     0C9D                     __ptext2:	
  3902 ;; *************** function _scale *****************
  3903 ;; Defined at:
  3904 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  3905 ;; Parameters:    Size  Location     Type
  3906 ;;  scl             1    wreg     char 
  3907 ;; Auto vars:     Size  Location     Type
  3908 ;;  scl             1   52[BANK0 ] char 
  3909 ;; Return value:  Size  Location     Type
  3910 ;;                  4   34[BANK0 ] char 
  3911 ;; Registers used:
  3912 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3913 ;; Tracked objects:
  3914 ;;		On entry : 0/0
  3915 ;;		On exit  : 0/0
  3916 ;;		Unchanged: 0/0
  3917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3918 ;;      Params:         0       4       0       0       0
  3919 ;;      Locals:         0       5       0       0       0
  3920 ;;      Temps:          0      10       0       0       0
  3921 ;;      Totals:         0      19       0       0       0
  3922 ;;Total ram usage:       19 bytes
  3923 ;; Hardware stack levels used: 1
  3924 ;; Hardware stack levels required when called: 4
  3925 ;; This function calls:
  3926 ;;		___awdiv
  3927 ;;		___awmod
  3928 ;;		___flmul
  3929 ;; This function is called by:
  3930 ;;		_sprintf
  3931 ;; This function uses a non-reentrant model
  3932 ;;
  3933                           
  3934     0C9D                     _scale:	
  3935                           ;psect for function _scale
  3936                           
  3937                           
  3938                           ;incstack = 0
  3939                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3940                           ;scale@scl stored from wreg
  3941     0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  3942     0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  3943     0C9F  00D4               	movwf	scale@scl
  3944     0CA0                     l3045:
  3945                           
  3946                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3947     0CA0  1FD4               	btfss	scale@scl,7
  3948     0CA1  2CA3               	goto	u4521
  3949     0CA2  2CA4               	goto	u4520
  3950     0CA3                     u4521:
  3951     0CA3  2E53               	goto	l3067
  3952     0CA4                     u4520:
  3953     0CA4                     l3047:
  3954                           
  3955                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3956     0CA4  09D4               	comf	scale@scl,f
  3957     0CA5  0AD4               	incf	scale@scl,f
  3958     0CA6                     l3049:
  3959                           
  3960                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3961     0CA6  0854               	movf	scale@scl,w
  3962     0CA7  3A80               	xorlw	128
  3963     0CA8  3E12               	addlw	-238
  3964     0CA9  1C03               	skipc
  3965     0CAA  2CAC               	goto	u4531
  3966     0CAB  2CAD               	goto	u4530
  3967     0CAC                     u4531:
  3968     0CAC  2D97               	goto	l3057
  3969     0CAD                     u4530:
  3970     0CAD                     l3051:
  3971                           
  3972                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3973     0CAD  300A               	movlw	10
  3974     0CAE  00A0               	movwf	___awdiv@divisor
  3975     0CAF  3000               	movlw	0
  3976     0CB0  00A1               	movwf	___awdiv@divisor+1
  3977     0CB1  0854               	movf	scale@scl,w
  3978     0CB2  00F4               	movwf	___awmod@dividend
  3979     0CB3  01F5               	clrf	___awmod@dividend+1
  3980     0CB4  1BF4               	btfsc	___awmod@dividend,7
  3981     0CB5  03F5               	decf	___awmod@dividend+1,f
  3982     0CB6  3064               	movlw	100
  3983     0CB7  00F2               	movwf	___awmod@divisor
  3984     0CB8  3000               	movlw	0
  3985     0CB9  00F3               	movwf	___awmod@divisor+1
  3986     0CBA  160A  158A  238F  120A  158A  	fcall	___awmod
  3987     0CBF  0873               	movf	?___awmod+1,w
  3988     0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  3989     0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  3990     0CC2  00A3               	movwf	___awdiv@dividend+1
  3991     0CC3  0872               	movf	?___awmod,w
  3992     0CC4  00A2               	movwf	___awdiv@dividend
  3993     0CC5  160A  158A  24B4  120A  158A  	fcall	___awdiv
  3994     0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  3995     0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  3996     0CCC  0820               	movf	?___awdiv,w
  3997     0CCD  00C6               	movwf	??_scale
  3998     0CCE  3001               	movlw	1
  3999     0CCF                     u4545:
  4000     0CCF  1003               	clrc
  4001     0CD0  0DC6               	rlf	??_scale,f
  4002     0CD1  3EFF               	addlw	-1
  4003     0CD2  1D03               	skipz
  4004     0CD3  2CCF               	goto	u4545
  4005     0CD4  1003               	clrc
  4006     0CD5  0D46               	rlf	??_scale,w
  4007     0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4008     0CD7  0084               	movwf	4
  4009     0CD8  120A  118A  272A  120A  158A  	fcall	stringdir
  4010     0CDD  00C7               	movwf	??_scale+1
  4011     0CDE  120A  118A  272A  120A  158A  	fcall	stringdir
  4012     0CE3  00C8               	movwf	??_scale+2
  4013     0CE4  120A  118A  272A  120A  158A  	fcall	stringdir
  4014     0CE9  00C9               	movwf	??_scale+3
  4015     0CEA  120A  118A  272A  120A  158A  	fcall	stringdir
  4016     0CEF  00CA               	movwf	??_scale+4
  4017     0CF0  084A               	movf	??_scale+4,w
  4018     0CF1  00AB               	movwf	___flmul@b+3
  4019     0CF2  0849               	movf	??_scale+3,w
  4020     0CF3  00AA               	movwf	___flmul@b+2
  4021     0CF4  0848               	movf	??_scale+2,w
  4022     0CF5  00A9               	movwf	___flmul@b+1
  4023     0CF6  0847               	movf	??_scale+1,w
  4024     0CF7  00A8               	movwf	___flmul@b
  4025     0CF8  3064               	movlw	100
  4026     0CF9  00A0               	movwf	___awdiv@divisor
  4027     0CFA  3000               	movlw	0
  4028     0CFB  00A1               	movwf	___awdiv@divisor+1
  4029     0CFC  0854               	movf	scale@scl,w
  4030     0CFD  00A2               	movwf	___awdiv@dividend
  4031     0CFE  01A3               	clrf	___awdiv@dividend+1
  4032     0CFF  1BA2               	btfsc	___awdiv@dividend,7
  4033     0D00  03A3               	decf	___awdiv@dividend+1,f
  4034     0D01  160A  158A  24B4  120A  158A  	fcall	___awdiv
  4035     0D06  1283               	bcf	3,5	;RP0=0, select bank0
  4036     0D07  1303               	bcf	3,6	;RP1=0, select bank0
  4037     0D08  0820               	movf	?___awdiv,w
  4038     0D09  00CB               	movwf	??_scale+5
  4039     0D0A  3001               	movlw	1
  4040     0D0B                     u4555:
  4041     0D0B  1003               	clrc
  4042     0D0C  0DCB               	rlf	??_scale+5,f
  4043     0D0D  3EFF               	addlw	-1
  4044     0D0E  1D03               	skipz
  4045     0D0F  2D0B               	goto	u4555
  4046     0D10  1003               	clrc
  4047     0D11  0D4B               	rlf	??_scale+5,w
  4048     0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4049     0D13  0084               	movwf	4
  4050     0D14  120A  118A  272A  120A  158A  	fcall	stringdir
  4051     0D19  00CC               	movwf	??_scale+6
  4052     0D1A  120A  118A  272A  120A  158A  	fcall	stringdir
  4053     0D1F  00CD               	movwf	??_scale+7
  4054     0D20  120A  118A  272A  120A  158A  	fcall	stringdir
  4055     0D25  00CE               	movwf	??_scale+8
  4056     0D26  120A  118A  272A  120A  158A  	fcall	stringdir
  4057     0D2B  00CF               	movwf	??_scale+9
  4058     0D2C  084F               	movf	??_scale+9,w
  4059     0D2D  00AF               	movwf	___flmul@a+3
  4060     0D2E  084E               	movf	??_scale+8,w
  4061     0D2F  00AE               	movwf	___flmul@a+2
  4062     0D30  084D               	movf	??_scale+7,w
  4063     0D31  00AD               	movwf	___flmul@a+1
  4064     0D32  084C               	movf	??_scale+6,w
  4065     0D33  00AC               	movwf	___flmul@a
  4066     0D34  120A  158A  2158  120A  158A  	fcall	___flmul
  4067     0D39  1283               	bcf	3,5	;RP0=0, select bank0
  4068     0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  4069     0D3B  082B               	movf	?___flmul+3,w
  4070     0D3C  00D3               	movwf	_scale$1272+3
  4071     0D3D  082A               	movf	?___flmul+2,w
  4072     0D3E  00D2               	movwf	_scale$1272+2
  4073     0D3F  0829               	movf	?___flmul+1,w
  4074     0D40  00D1               	movwf	_scale$1272+1
  4075     0D41  0828               	movf	?___flmul,w
  4076     0D42  00D0               	movwf	_scale$1272
  4077                           
  4078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4079     0D43  300A               	movlw	10
  4080     0D44  00F2               	movwf	___awmod@divisor
  4081     0D45  3000               	movlw	0
  4082     0D46  00F3               	movwf	___awmod@divisor+1
  4083     0D47  0854               	movf	scale@scl,w
  4084     0D48  00F4               	movwf	___awmod@dividend
  4085     0D49  01F5               	clrf	___awmod@dividend+1
  4086     0D4A  1BF4               	btfsc	___awmod@dividend,7
  4087     0D4B  03F5               	decf	___awmod@dividend+1,f
  4088     0D4C  160A  158A  238F  120A  158A  	fcall	___awmod
  4089     0D51  0872               	movf	?___awmod,w
  4090     0D52  1283               	bcf	3,5	;RP0=0, select bank0
  4091     0D53  1303               	bcf	3,6	;RP1=0, select bank0
  4092     0D54  00C6               	movwf	??_scale
  4093     0D55  3001               	movlw	1
  4094     0D56                     u4565:
  4095     0D56  1003               	clrc
  4096     0D57  0DC6               	rlf	??_scale,f
  4097     0D58  3EFF               	addlw	-1
  4098     0D59  1D03               	skipz
  4099     0D5A  2D56               	goto	u4565
  4100     0D5B  1003               	clrc
  4101     0D5C  0D46               	rlf	??_scale,w
  4102     0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4103     0D5E  0084               	movwf	4
  4104     0D5F  120A  118A  272A  120A  158A  	fcall	stringdir
  4105     0D64  00C7               	movwf	??_scale+1
  4106     0D65  120A  118A  272A  120A  158A  	fcall	stringdir
  4107     0D6A  00C8               	movwf	??_scale+2
  4108     0D6B  120A  118A  272A  120A  158A  	fcall	stringdir
  4109     0D70  00C9               	movwf	??_scale+3
  4110     0D71  120A  118A  272A  120A  158A  	fcall	stringdir
  4111     0D76  00CA               	movwf	??_scale+4
  4112     0D77  084A               	movf	??_scale+4,w
  4113     0D78  00AB               	movwf	___flmul@b+3
  4114     0D79  0849               	movf	??_scale+3,w
  4115     0D7A  00AA               	movwf	___flmul@b+2
  4116     0D7B  0848               	movf	??_scale+2,w
  4117     0D7C  00A9               	movwf	___flmul@b+1
  4118     0D7D  0847               	movf	??_scale+1,w
  4119     0D7E  00A8               	movwf	___flmul@b
  4120     0D7F  0853               	movf	_scale$1272+3,w
  4121     0D80  00AF               	movwf	___flmul@a+3
  4122     0D81  0852               	movf	_scale$1272+2,w
  4123     0D82  00AE               	movwf	___flmul@a+2
  4124     0D83  0851               	movf	_scale$1272+1,w
  4125     0D84  00AD               	movwf	___flmul@a+1
  4126     0D85  0850               	movf	_scale$1272,w
  4127     0D86  00AC               	movwf	___flmul@a
  4128     0D87  120A  158A  2158  120A  158A  	fcall	___flmul
  4129     0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  4130     0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  4131     0D8E  082B               	movf	?___flmul+3,w
  4132     0D8F  00C5               	movwf	?_scale+3
  4133     0D90  082A               	movf	?___flmul+2,w
  4134     0D91  00C4               	movwf	?_scale+2
  4135     0D92  0829               	movf	?___flmul+1,w
  4136     0D93  00C3               	movwf	?_scale+1
  4137     0D94  0828               	movf	?___flmul,w
  4138     0D95  00C2               	movwf	?_scale
  4139     0D96  2FFF               	goto	l358
  4140     0D97                     l3057:
  4141     0D97  0854               	movf	scale@scl,w
  4142     0D98  3A80               	xorlw	128
  4143     0D99  3E75               	addlw	-139
  4144     0D9A  1C03               	skipc
  4145     0D9B  2D9D               	goto	u4571
  4146     0D9C  2D9E               	goto	u4570
  4147     0D9D                     u4571:
  4148     0D9D  2E26               	goto	l3063
  4149     0D9E                     u4570:
  4150     0D9E                     l3059:
  4151                           
  4152                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4153     0D9E  300A               	movlw	10
  4154     0D9F  00F2               	movwf	___awmod@divisor
  4155     0DA0  3000               	movlw	0
  4156     0DA1  00F3               	movwf	___awmod@divisor+1
  4157     0DA2  0854               	movf	scale@scl,w
  4158     0DA3  00F4               	movwf	___awmod@dividend
  4159     0DA4  01F5               	clrf	___awmod@dividend+1
  4160     0DA5  1BF4               	btfsc	___awmod@dividend,7
  4161     0DA6  03F5               	decf	___awmod@dividend+1,f
  4162     0DA7  160A  158A  238F  120A  158A  	fcall	___awmod
  4163     0DAC  0872               	movf	?___awmod,w
  4164     0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  4165     0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  4166     0DAF  00C6               	movwf	??_scale
  4167     0DB0  3001               	movlw	1
  4168     0DB1                     u4585:
  4169     0DB1  1003               	clrc
  4170     0DB2  0DC6               	rlf	??_scale,f
  4171     0DB3  3EFF               	addlw	-1
  4172     0DB4  1D03               	skipz
  4173     0DB5  2DB1               	goto	u4585
  4174     0DB6  1003               	clrc
  4175     0DB7  0D46               	rlf	??_scale,w
  4176     0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4177     0DB9  0084               	movwf	4
  4178     0DBA  120A  118A  272A  120A  158A  	fcall	stringdir
  4179     0DBF  00C7               	movwf	??_scale+1
  4180     0DC0  120A  118A  272A  120A  158A  	fcall	stringdir
  4181     0DC5  00C8               	movwf	??_scale+2
  4182     0DC6  120A  118A  272A  120A  158A  	fcall	stringdir
  4183     0DCB  00C9               	movwf	??_scale+3
  4184     0DCC  120A  118A  272A  120A  158A  	fcall	stringdir
  4185     0DD1  00CA               	movwf	??_scale+4
  4186     0DD2  084A               	movf	??_scale+4,w
  4187     0DD3  00AB               	movwf	___flmul@b+3
  4188     0DD4  0849               	movf	??_scale+3,w
  4189     0DD5  00AA               	movwf	___flmul@b+2
  4190     0DD6  0848               	movf	??_scale+2,w
  4191     0DD7  00A9               	movwf	___flmul@b+1
  4192     0DD8  0847               	movf	??_scale+1,w
  4193     0DD9  00A8               	movwf	___flmul@b
  4194     0DDA  300A               	movlw	10
  4195     0DDB  00A0               	movwf	___awdiv@divisor
  4196     0DDC  3000               	movlw	0
  4197     0DDD  00A1               	movwf	___awdiv@divisor+1
  4198     0DDE  0854               	movf	scale@scl,w
  4199     0DDF  00A2               	movwf	___awdiv@dividend
  4200     0DE0  01A3               	clrf	___awdiv@dividend+1
  4201     0DE1  1BA2               	btfsc	___awdiv@dividend,7
  4202     0DE2  03A3               	decf	___awdiv@dividend+1,f
  4203     0DE3  160A  158A  24B4  120A  158A  	fcall	___awdiv
  4204     0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  4205     0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  4206     0DEA  0820               	movf	?___awdiv,w
  4207     0DEB  00CB               	movwf	??_scale+5
  4208     0DEC  3001               	movlw	1
  4209     0DED                     u4595:
  4210     0DED  1003               	clrc
  4211     0DEE  0DCB               	rlf	??_scale+5,f
  4212     0DEF  3EFF               	addlw	-1
  4213     0DF0  1D03               	skipz
  4214     0DF1  2DED               	goto	u4595
  4215     0DF2  1003               	clrc
  4216     0DF3  0D4B               	rlf	??_scale+5,w
  4217     0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4218     0DF5  0084               	movwf	4
  4219     0DF6  120A  118A  272A  120A  158A  	fcall	stringdir
  4220     0DFB  00CC               	movwf	??_scale+6
  4221     0DFC  120A  118A  272A  120A  158A  	fcall	stringdir
  4222     0E01  00CD               	movwf	??_scale+7
  4223     0E02  120A  118A  272A  120A  158A  	fcall	stringdir
  4224     0E07  00CE               	movwf	??_scale+8
  4225     0E08  120A  118A  272A  120A  158A  	fcall	stringdir
  4226     0E0D  00CF               	movwf	??_scale+9
  4227     0E0E  084F               	movf	??_scale+9,w
  4228     0E0F  00AF               	movwf	___flmul@a+3
  4229     0E10  084E               	movf	??_scale+8,w
  4230     0E11  00AE               	movwf	___flmul@a+2
  4231     0E12  084D               	movf	??_scale+7,w
  4232     0E13  00AD               	movwf	___flmul@a+1
  4233     0E14  084C               	movf	??_scale+6,w
  4234     0E15  00AC               	movwf	___flmul@a
  4235     0E16  120A  158A  2158  120A  158A  	fcall	___flmul
  4236     0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  4237     0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  4238     0E1D  082B               	movf	?___flmul+3,w
  4239     0E1E  00C5               	movwf	?_scale+3
  4240     0E1F  082A               	movf	?___flmul+2,w
  4241     0E20  00C4               	movwf	?_scale+2
  4242     0E21  0829               	movf	?___flmul+1,w
  4243     0E22  00C3               	movwf	?_scale+1
  4244     0E23  0828               	movf	?___flmul,w
  4245     0E24  00C2               	movwf	?_scale
  4246     0E25  2FFF               	goto	l358
  4247     0E26                     l3063:
  4248                           
  4249                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4250     0E26  0854               	movf	scale@scl,w
  4251     0E27  00C6               	movwf	??_scale
  4252     0E28  3001               	movlw	1
  4253     0E29                     u4605:
  4254     0E29  1003               	clrc
  4255     0E2A  0DC6               	rlf	??_scale,f
  4256     0E2B  3EFF               	addlw	-1
  4257     0E2C  1D03               	skipz
  4258     0E2D  2E29               	goto	u4605
  4259     0E2E  1003               	clrc
  4260     0E2F  0D46               	rlf	??_scale,w
  4261     0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4262     0E31  0084               	movwf	4
  4263     0E32  120A  118A  272A  120A  158A  	fcall	stringdir
  4264     0E37  00C7               	movwf	??_scale+1
  4265     0E38  120A  118A  272A  120A  158A  	fcall	stringdir
  4266     0E3D  00C8               	movwf	??_scale+2
  4267     0E3E  120A  118A  272A  120A  158A  	fcall	stringdir
  4268     0E43  00C9               	movwf	??_scale+3
  4269     0E44  120A  118A  272A  120A  158A  	fcall	stringdir
  4270     0E49  00CA               	movwf	??_scale+4
  4271     0E4A  084A               	movf	??_scale+4,w
  4272     0E4B  00C5               	movwf	?_scale+3
  4273     0E4C  0849               	movf	??_scale+3,w
  4274     0E4D  00C4               	movwf	?_scale+2
  4275     0E4E  0848               	movf	??_scale+2,w
  4276     0E4F  00C3               	movwf	?_scale+1
  4277     0E50  0847               	movf	??_scale+1,w
  4278     0E51  00C2               	movwf	?_scale
  4279     0E52  2FFF               	goto	l358
  4280     0E53                     l3067:
  4281                           
  4282                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4283     0E53  0854               	movf	scale@scl,w
  4284     0E54  3A80               	xorlw	128
  4285     0E55  3E12               	addlw	-238
  4286     0E56  1C03               	skipc
  4287     0E57  2E59               	goto	u4611
  4288     0E58  2E5A               	goto	u4610
  4289     0E59                     u4611:
  4290     0E59  2F44               	goto	l3075
  4291     0E5A                     u4610:
  4292     0E5A                     l3069:
  4293                           
  4294                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4295     0E5A  300A               	movlw	10
  4296     0E5B  00A0               	movwf	___awdiv@divisor
  4297     0E5C  3000               	movlw	0
  4298     0E5D  00A1               	movwf	___awdiv@divisor+1
  4299     0E5E  0854               	movf	scale@scl,w
  4300     0E5F  00F4               	movwf	___awmod@dividend
  4301     0E60  01F5               	clrf	___awmod@dividend+1
  4302     0E61  1BF4               	btfsc	___awmod@dividend,7
  4303     0E62  03F5               	decf	___awmod@dividend+1,f
  4304     0E63  3064               	movlw	100
  4305     0E64  00F2               	movwf	___awmod@divisor
  4306     0E65  3000               	movlw	0
  4307     0E66  00F3               	movwf	___awmod@divisor+1
  4308     0E67  160A  158A  238F  120A  158A  	fcall	___awmod
  4309     0E6C  0873               	movf	?___awmod+1,w
  4310     0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  4311     0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  4312     0E6F  00A3               	movwf	___awdiv@dividend+1
  4313     0E70  0872               	movf	?___awmod,w
  4314     0E71  00A2               	movwf	___awdiv@dividend
  4315     0E72  160A  158A  24B4  120A  158A  	fcall	___awdiv
  4316     0E77  1283               	bcf	3,5	;RP0=0, select bank0
  4317     0E78  1303               	bcf	3,6	;RP1=0, select bank0
  4318     0E79  0820               	movf	?___awdiv,w
  4319     0E7A  00C6               	movwf	??_scale
  4320     0E7B  3001               	movlw	1
  4321     0E7C                     u4625:
  4322     0E7C  1003               	clrc
  4323     0E7D  0DC6               	rlf	??_scale,f
  4324     0E7E  3EFF               	addlw	-1
  4325     0E7F  1D03               	skipz
  4326     0E80  2E7C               	goto	u4625
  4327     0E81  1003               	clrc
  4328     0E82  0D46               	rlf	??_scale,w
  4329     0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4330     0E84  0084               	movwf	4
  4331     0E85  120A  118A  272A  120A  158A  	fcall	stringdir
  4332     0E8A  00C7               	movwf	??_scale+1
  4333     0E8B  120A  118A  272A  120A  158A  	fcall	stringdir
  4334     0E90  00C8               	movwf	??_scale+2
  4335     0E91  120A  118A  272A  120A  158A  	fcall	stringdir
  4336     0E96  00C9               	movwf	??_scale+3
  4337     0E97  120A  118A  272A  120A  158A  	fcall	stringdir
  4338     0E9C  00CA               	movwf	??_scale+4
  4339     0E9D  084A               	movf	??_scale+4,w
  4340     0E9E  00AB               	movwf	___flmul@b+3
  4341     0E9F  0849               	movf	??_scale+3,w
  4342     0EA0  00AA               	movwf	___flmul@b+2
  4343     0EA1  0848               	movf	??_scale+2,w
  4344     0EA2  00A9               	movwf	___flmul@b+1
  4345     0EA3  0847               	movf	??_scale+1,w
  4346     0EA4  00A8               	movwf	___flmul@b
  4347     0EA5  3064               	movlw	100
  4348     0EA6  00A0               	movwf	___awdiv@divisor
  4349     0EA7  3000               	movlw	0
  4350     0EA8  00A1               	movwf	___awdiv@divisor+1
  4351     0EA9  0854               	movf	scale@scl,w
  4352     0EAA  00A2               	movwf	___awdiv@dividend
  4353     0EAB  01A3               	clrf	___awdiv@dividend+1
  4354     0EAC  1BA2               	btfsc	___awdiv@dividend,7
  4355     0EAD  03A3               	decf	___awdiv@dividend+1,f
  4356     0EAE  160A  158A  24B4  120A  158A  	fcall	___awdiv
  4357     0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  4358     0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  4359     0EB5  0820               	movf	?___awdiv,w
  4360     0EB6  00CB               	movwf	??_scale+5
  4361     0EB7  3001               	movlw	1
  4362     0EB8                     u4635:
  4363     0EB8  1003               	clrc
  4364     0EB9  0DCB               	rlf	??_scale+5,f
  4365     0EBA  3EFF               	addlw	-1
  4366     0EBB  1D03               	skipz
  4367     0EBC  2EB8               	goto	u4635
  4368     0EBD  1003               	clrc
  4369     0EBE  0D4B               	rlf	??_scale+5,w
  4370     0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4371     0EC0  0084               	movwf	4
  4372     0EC1  120A  118A  272A  120A  158A  	fcall	stringdir
  4373     0EC6  00CC               	movwf	??_scale+6
  4374     0EC7  120A  118A  272A  120A  158A  	fcall	stringdir
  4375     0ECC  00CD               	movwf	??_scale+7
  4376     0ECD  120A  118A  272A  120A  158A  	fcall	stringdir
  4377     0ED2  00CE               	movwf	??_scale+8
  4378     0ED3  120A  118A  272A  120A  158A  	fcall	stringdir
  4379     0ED8  00CF               	movwf	??_scale+9
  4380     0ED9  084F               	movf	??_scale+9,w
  4381     0EDA  00AF               	movwf	___flmul@a+3
  4382     0EDB  084E               	movf	??_scale+8,w
  4383     0EDC  00AE               	movwf	___flmul@a+2
  4384     0EDD  084D               	movf	??_scale+7,w
  4385     0EDE  00AD               	movwf	___flmul@a+1
  4386     0EDF  084C               	movf	??_scale+6,w
  4387     0EE0  00AC               	movwf	___flmul@a
  4388     0EE1  120A  158A  2158  120A  158A  	fcall	___flmul
  4389     0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  4390     0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  4391     0EE8  082B               	movf	?___flmul+3,w
  4392     0EE9  00D3               	movwf	_scale$1272+3
  4393     0EEA  082A               	movf	?___flmul+2,w
  4394     0EEB  00D2               	movwf	_scale$1272+2
  4395     0EEC  0829               	movf	?___flmul+1,w
  4396     0EED  00D1               	movwf	_scale$1272+1
  4397     0EEE  0828               	movf	?___flmul,w
  4398     0EEF  00D0               	movwf	_scale$1272
  4399                           
  4400                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4401     0EF0  300A               	movlw	10
  4402     0EF1  00F2               	movwf	___awmod@divisor
  4403     0EF2  3000               	movlw	0
  4404     0EF3  00F3               	movwf	___awmod@divisor+1
  4405     0EF4  0854               	movf	scale@scl,w
  4406     0EF5  00F4               	movwf	___awmod@dividend
  4407     0EF6  01F5               	clrf	___awmod@dividend+1
  4408     0EF7  1BF4               	btfsc	___awmod@dividend,7
  4409     0EF8  03F5               	decf	___awmod@dividend+1,f
  4410     0EF9  160A  158A  238F  120A  158A  	fcall	___awmod
  4411     0EFE  0872               	movf	?___awmod,w
  4412     0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  4413     0F00  1303               	bcf	3,6	;RP1=0, select bank0
  4414     0F01  00C6               	movwf	??_scale
  4415     0F02  3001               	movlw	1
  4416     0F03                     u4645:
  4417     0F03  1003               	clrc
  4418     0F04  0DC6               	rlf	??_scale,f
  4419     0F05  3EFF               	addlw	-1
  4420     0F06  1D03               	skipz
  4421     0F07  2F03               	goto	u4645
  4422     0F08  1003               	clrc
  4423     0F09  0D46               	rlf	??_scale,w
  4424     0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4425     0F0B  0084               	movwf	4
  4426     0F0C  120A  118A  272A  120A  158A  	fcall	stringdir
  4427     0F11  00C7               	movwf	??_scale+1
  4428     0F12  120A  118A  272A  120A  158A  	fcall	stringdir
  4429     0F17  00C8               	movwf	??_scale+2
  4430     0F18  120A  118A  272A  120A  158A  	fcall	stringdir
  4431     0F1D  00C9               	movwf	??_scale+3
  4432     0F1E  120A  118A  272A  120A  158A  	fcall	stringdir
  4433     0F23  00CA               	movwf	??_scale+4
  4434     0F24  084A               	movf	??_scale+4,w
  4435     0F25  00AB               	movwf	___flmul@b+3
  4436     0F26  0849               	movf	??_scale+3,w
  4437     0F27  00AA               	movwf	___flmul@b+2
  4438     0F28  0848               	movf	??_scale+2,w
  4439     0F29  00A9               	movwf	___flmul@b+1
  4440     0F2A  0847               	movf	??_scale+1,w
  4441     0F2B  00A8               	movwf	___flmul@b
  4442     0F2C  0853               	movf	_scale$1272+3,w
  4443     0F2D  00AF               	movwf	___flmul@a+3
  4444     0F2E  0852               	movf	_scale$1272+2,w
  4445     0F2F  00AE               	movwf	___flmul@a+2
  4446     0F30  0851               	movf	_scale$1272+1,w
  4447     0F31  00AD               	movwf	___flmul@a+1
  4448     0F32  0850               	movf	_scale$1272,w
  4449     0F33  00AC               	movwf	___flmul@a
  4450     0F34  120A  158A  2158  120A  158A  	fcall	___flmul
  4451     0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4452     0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4453     0F3B  082B               	movf	?___flmul+3,w
  4454     0F3C  00C5               	movwf	?_scale+3
  4455     0F3D  082A               	movf	?___flmul+2,w
  4456     0F3E  00C4               	movwf	?_scale+2
  4457     0F3F  0829               	movf	?___flmul+1,w
  4458     0F40  00C3               	movwf	?_scale+1
  4459     0F41  0828               	movf	?___flmul,w
  4460     0F42  00C2               	movwf	?_scale
  4461     0F43  2FFF               	goto	l358
  4462     0F44                     l3075:
  4463     0F44  0854               	movf	scale@scl,w
  4464     0F45  3A80               	xorlw	128
  4465     0F46  3E75               	addlw	-139
  4466     0F47  1C03               	skipc
  4467     0F48  2F4A               	goto	u4651
  4468     0F49  2F4B               	goto	u4650
  4469     0F4A                     u4651:
  4470     0F4A  2FD3               	goto	l3081
  4471     0F4B                     u4650:
  4472     0F4B                     l3077:
  4473                           
  4474                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4475     0F4B  300A               	movlw	10
  4476     0F4C  00F2               	movwf	___awmod@divisor
  4477     0F4D  3000               	movlw	0
  4478     0F4E  00F3               	movwf	___awmod@divisor+1
  4479     0F4F  0854               	movf	scale@scl,w
  4480     0F50  00F4               	movwf	___awmod@dividend
  4481     0F51  01F5               	clrf	___awmod@dividend+1
  4482     0F52  1BF4               	btfsc	___awmod@dividend,7
  4483     0F53  03F5               	decf	___awmod@dividend+1,f
  4484     0F54  160A  158A  238F  120A  158A  	fcall	___awmod
  4485     0F59  0872               	movf	?___awmod,w
  4486     0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  4487     0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  4488     0F5C  00C6               	movwf	??_scale
  4489     0F5D  3001               	movlw	1
  4490     0F5E                     u4665:
  4491     0F5E  1003               	clrc
  4492     0F5F  0DC6               	rlf	??_scale,f
  4493     0F60  3EFF               	addlw	-1
  4494     0F61  1D03               	skipz
  4495     0F62  2F5E               	goto	u4665
  4496     0F63  1003               	clrc
  4497     0F64  0D46               	rlf	??_scale,w
  4498     0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4499     0F66  0084               	movwf	4
  4500     0F67  120A  118A  272A  120A  158A  	fcall	stringdir
  4501     0F6C  00C7               	movwf	??_scale+1
  4502     0F6D  120A  118A  272A  120A  158A  	fcall	stringdir
  4503     0F72  00C8               	movwf	??_scale+2
  4504     0F73  120A  118A  272A  120A  158A  	fcall	stringdir
  4505     0F78  00C9               	movwf	??_scale+3
  4506     0F79  120A  118A  272A  120A  158A  	fcall	stringdir
  4507     0F7E  00CA               	movwf	??_scale+4
  4508     0F7F  084A               	movf	??_scale+4,w
  4509     0F80  00AB               	movwf	___flmul@b+3
  4510     0F81  0849               	movf	??_scale+3,w
  4511     0F82  00AA               	movwf	___flmul@b+2
  4512     0F83  0848               	movf	??_scale+2,w
  4513     0F84  00A9               	movwf	___flmul@b+1
  4514     0F85  0847               	movf	??_scale+1,w
  4515     0F86  00A8               	movwf	___flmul@b
  4516     0F87  300A               	movlw	10
  4517     0F88  00A0               	movwf	___awdiv@divisor
  4518     0F89  3000               	movlw	0
  4519     0F8A  00A1               	movwf	___awdiv@divisor+1
  4520     0F8B  0854               	movf	scale@scl,w
  4521     0F8C  00A2               	movwf	___awdiv@dividend
  4522     0F8D  01A3               	clrf	___awdiv@dividend+1
  4523     0F8E  1BA2               	btfsc	___awdiv@dividend,7
  4524     0F8F  03A3               	decf	___awdiv@dividend+1,f
  4525     0F90  160A  158A  24B4  120A  158A  	fcall	___awdiv
  4526     0F95  1283               	bcf	3,5	;RP0=0, select bank0
  4527     0F96  1303               	bcf	3,6	;RP1=0, select bank0
  4528     0F97  0820               	movf	?___awdiv,w
  4529     0F98  00CB               	movwf	??_scale+5
  4530     0F99  3001               	movlw	1
  4531     0F9A                     u4675:
  4532     0F9A  1003               	clrc
  4533     0F9B  0DCB               	rlf	??_scale+5,f
  4534     0F9C  3EFF               	addlw	-1
  4535     0F9D  1D03               	skipz
  4536     0F9E  2F9A               	goto	u4675
  4537     0F9F  1003               	clrc
  4538     0FA0  0D4B               	rlf	??_scale+5,w
  4539     0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4540     0FA2  0084               	movwf	4
  4541     0FA3  120A  118A  272A  120A  158A  	fcall	stringdir
  4542     0FA8  00CC               	movwf	??_scale+6
  4543     0FA9  120A  118A  272A  120A  158A  	fcall	stringdir
  4544     0FAE  00CD               	movwf	??_scale+7
  4545     0FAF  120A  118A  272A  120A  158A  	fcall	stringdir
  4546     0FB4  00CE               	movwf	??_scale+8
  4547     0FB5  120A  118A  272A  120A  158A  	fcall	stringdir
  4548     0FBA  00CF               	movwf	??_scale+9
  4549     0FBB  084F               	movf	??_scale+9,w
  4550     0FBC  00AF               	movwf	___flmul@a+3
  4551     0FBD  084E               	movf	??_scale+8,w
  4552     0FBE  00AE               	movwf	___flmul@a+2
  4553     0FBF  084D               	movf	??_scale+7,w
  4554     0FC0  00AD               	movwf	___flmul@a+1
  4555     0FC1  084C               	movf	??_scale+6,w
  4556     0FC2  00AC               	movwf	___flmul@a
  4557     0FC3  120A  158A  2158  120A  158A  	fcall	___flmul
  4558     0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4559     0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4560     0FCA  082B               	movf	?___flmul+3,w
  4561     0FCB  00C5               	movwf	?_scale+3
  4562     0FCC  082A               	movf	?___flmul+2,w
  4563     0FCD  00C4               	movwf	?_scale+2
  4564     0FCE  0829               	movf	?___flmul+1,w
  4565     0FCF  00C3               	movwf	?_scale+1
  4566     0FD0  0828               	movf	?___flmul,w
  4567     0FD1  00C2               	movwf	?_scale
  4568     0FD2  2FFF               	goto	l358
  4569     0FD3                     l3081:
  4570                           
  4571                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4572     0FD3  0854               	movf	scale@scl,w
  4573     0FD4  00C6               	movwf	??_scale
  4574     0FD5  3001               	movlw	1
  4575     0FD6                     u4685:
  4576     0FD6  1003               	clrc
  4577     0FD7  0DC6               	rlf	??_scale,f
  4578     0FD8  3EFF               	addlw	-1
  4579     0FD9  1D03               	skipz
  4580     0FDA  2FD6               	goto	u4685
  4581     0FDB  1003               	clrc
  4582     0FDC  0D46               	rlf	??_scale,w
  4583     0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4584     0FDE  0084               	movwf	4
  4585     0FDF  120A  118A  272A  120A  158A  	fcall	stringdir
  4586     0FE4  00C7               	movwf	??_scale+1
  4587     0FE5  120A  118A  272A  120A  158A  	fcall	stringdir
  4588     0FEA  00C8               	movwf	??_scale+2
  4589     0FEB  120A  118A  272A  120A  158A  	fcall	stringdir
  4590     0FF0  00C9               	movwf	??_scale+3
  4591     0FF1  120A  118A  272A  120A  158A  	fcall	stringdir
  4592     0FF6  00CA               	movwf	??_scale+4
  4593     0FF7  084A               	movf	??_scale+4,w
  4594     0FF8  00C5               	movwf	?_scale+3
  4595     0FF9  0849               	movf	??_scale+3,w
  4596     0FFA  00C4               	movwf	?_scale+2
  4597     0FFB  0848               	movf	??_scale+2,w
  4598     0FFC  00C3               	movwf	?_scale+1
  4599     0FFD  0847               	movf	??_scale+1,w
  4600     0FFE  00C2               	movwf	?_scale
  4601     0FFF                     l358:
  4602     0FFF  0008               	return
  4603     1000                     __end_of_scale:
  4604                           
  4605                           	psect	text3
  4606     1B8F                     __ptext3:	
  4607 ;; *************** function ___awmod *****************
  4608 ;; Defined at:
  4609 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  4610 ;; Parameters:    Size  Location     Type
  4611 ;;  divisor         2    2[COMMON] int 
  4612 ;;  dividend        2    4[COMMON] int 
  4613 ;; Auto vars:     Size  Location     Type
  4614 ;;  sign            1    8[COMMON] unsigned char 
  4615 ;;  counter         1    7[COMMON] unsigned char 
  4616 ;; Return value:  Size  Location     Type
  4617 ;;                  2    2[COMMON] int 
  4618 ;; Registers used:
  4619 ;;		wreg, status,2, status,0
  4620 ;; Tracked objects:
  4621 ;;		On entry : 0/0
  4622 ;;		On exit  : 0/0
  4623 ;;		Unchanged: 0/0
  4624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4625 ;;      Params:         4       0       0       0       0
  4626 ;;      Locals:         2       0       0       0       0
  4627 ;;      Temps:          1       0       0       0       0
  4628 ;;      Totals:         7       0       0       0       0
  4629 ;;Total ram usage:        7 bytes
  4630 ;; Hardware stack levels used: 1
  4631 ;; Hardware stack levels required when called: 2
  4632 ;; This function calls:
  4633 ;;		Nothing
  4634 ;; This function is called by:
  4635 ;;		_scale
  4636 ;; This function uses a non-reentrant model
  4637 ;;
  4638                           
  4639     1B8F                     ___awmod:	
  4640                           ;psect for function ___awmod
  4641                           
  4642     1B8F                     l2587:	
  4643                           ;incstack = 0
  4644                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4645                           
  4646     1B8F  01F8               	clrf	___awmod@sign
  4647     1B90                     l2589:
  4648     1B90  1FF5               	btfss	___awmod@dividend+1,7
  4649     1B91  2B93               	goto	u3391
  4650     1B92  2B94               	goto	u3390
  4651     1B93                     u3391:
  4652     1B93  2B9B               	goto	l2595
  4653     1B94                     u3390:
  4654     1B94                     l2591:
  4655     1B94  09F4               	comf	___awmod@dividend,f
  4656     1B95  09F5               	comf	___awmod@dividend+1,f
  4657     1B96  0AF4               	incf	___awmod@dividend,f
  4658     1B97  1903               	skipnz
  4659     1B98  0AF5               	incf	___awmod@dividend+1,f
  4660     1B99                     l2593:
  4661     1B99  01F8               	clrf	___awmod@sign
  4662     1B9A  0AF8               	incf	___awmod@sign,f
  4663     1B9B                     l2595:
  4664     1B9B  1FF3               	btfss	___awmod@divisor+1,7
  4665     1B9C  2B9E               	goto	u3401
  4666     1B9D  2B9F               	goto	u3400
  4667     1B9E                     u3401:
  4668     1B9E  2BA4               	goto	l2599
  4669     1B9F                     u3400:
  4670     1B9F                     l2597:
  4671     1B9F  09F2               	comf	___awmod@divisor,f
  4672     1BA0  09F3               	comf	___awmod@divisor+1,f
  4673     1BA1  0AF2               	incf	___awmod@divisor,f
  4674     1BA2  1903               	skipnz
  4675     1BA3  0AF3               	incf	___awmod@divisor+1,f
  4676     1BA4                     l2599:
  4677     1BA4  0872               	movf	___awmod@divisor,w
  4678     1BA5  0473               	iorwf	___awmod@divisor+1,w
  4679     1BA6  1903               	btfsc	3,2
  4680     1BA7  2BA9               	goto	u3411
  4681     1BA8  2BAA               	goto	u3410
  4682     1BA9                     u3411:
  4683     1BA9  2BD9               	goto	l2617
  4684     1BAA                     u3410:
  4685     1BAA                     l2601:
  4686     1BAA  01F7               	clrf	___awmod@counter
  4687     1BAB  0AF7               	incf	___awmod@counter,f
  4688     1BAC  2BB8               	goto	l2607
  4689     1BAD                     l2603:
  4690     1BAD  3001               	movlw	1
  4691     1BAE                     u3425:
  4692     1BAE  1003               	clrc
  4693     1BAF  0DF2               	rlf	___awmod@divisor,f
  4694     1BB0  0DF3               	rlf	___awmod@divisor+1,f
  4695     1BB1  3EFF               	addlw	-1
  4696     1BB2  1D03               	skipz
  4697     1BB3  2BAE               	goto	u3425
  4698     1BB4                     l2605:
  4699     1BB4  3001               	movlw	1
  4700     1BB5  00F6               	movwf	??___awmod
  4701     1BB6  0876               	movf	??___awmod,w
  4702     1BB7  07F7               	addwf	___awmod@counter,f
  4703     1BB8                     l2607:
  4704     1BB8  1FF3               	btfss	___awmod@divisor+1,7
  4705     1BB9  2BBB               	goto	u3431
  4706     1BBA  2BBC               	goto	u3430
  4707     1BBB                     u3431:
  4708     1BBB  2BAD               	goto	l2603
  4709     1BBC                     u3430:
  4710     1BBC                     l2609:
  4711     1BBC  0873               	movf	___awmod@divisor+1,w
  4712     1BBD  0275               	subwf	___awmod@dividend+1,w
  4713     1BBE  1D03               	skipz
  4714     1BBF  2BC2               	goto	u3445
  4715     1BC0  0872               	movf	___awmod@divisor,w
  4716     1BC1  0274               	subwf	___awmod@dividend,w
  4717     1BC2                     u3445:
  4718     1BC2  1C03               	skipc
  4719     1BC3  2BC5               	goto	u3441
  4720     1BC4  2BC6               	goto	u3440
  4721     1BC5                     u3441:
  4722     1BC5  2BCC               	goto	l2613
  4723     1BC6                     u3440:
  4724     1BC6                     l2611:
  4725     1BC6  0872               	movf	___awmod@divisor,w
  4726     1BC7  02F4               	subwf	___awmod@dividend,f
  4727     1BC8  0873               	movf	___awmod@divisor+1,w
  4728     1BC9  1C03               	skipc
  4729     1BCA  03F5               	decf	___awmod@dividend+1,f
  4730     1BCB  02F5               	subwf	___awmod@dividend+1,f
  4731     1BCC                     l2613:
  4732     1BCC  3001               	movlw	1
  4733     1BCD                     u3455:
  4734     1BCD  1003               	clrc
  4735     1BCE  0CF3               	rrf	___awmod@divisor+1,f
  4736     1BCF  0CF2               	rrf	___awmod@divisor,f
  4737     1BD0  3EFF               	addlw	-1
  4738     1BD1  1D03               	skipz
  4739     1BD2  2BCD               	goto	u3455
  4740     1BD3                     l2615:
  4741     1BD3  3001               	movlw	1
  4742     1BD4  02F7               	subwf	___awmod@counter,f
  4743     1BD5  1D03               	btfss	3,2
  4744     1BD6  2BD8               	goto	u3461
  4745     1BD7  2BD9               	goto	u3460
  4746     1BD8                     u3461:
  4747     1BD8  2BBC               	goto	l2609
  4748     1BD9                     u3460:
  4749     1BD9                     l2617:
  4750     1BD9  0878               	movf	___awmod@sign,w
  4751     1BDA  1903               	btfsc	3,2
  4752     1BDB  2BDD               	goto	u3471
  4753     1BDC  2BDE               	goto	u3470
  4754     1BDD                     u3471:
  4755     1BDD  2BE3               	goto	l2621
  4756     1BDE                     u3470:
  4757     1BDE                     l2619:
  4758     1BDE  09F4               	comf	___awmod@dividend,f
  4759     1BDF  09F5               	comf	___awmod@dividend+1,f
  4760     1BE0  0AF4               	incf	___awmod@dividend,f
  4761     1BE1  1903               	skipnz
  4762     1BE2  0AF5               	incf	___awmod@dividend+1,f
  4763     1BE3                     l2621:
  4764     1BE3  0875               	movf	___awmod@dividend+1,w
  4765     1BE4  00F3               	movwf	?___awmod+1
  4766     1BE5  0874               	movf	___awmod@dividend,w
  4767     1BE6  00F2               	movwf	?___awmod
  4768     1BE7                     l594:
  4769     1BE7  0008               	return
  4770     1BE8                     __end_of___awmod:
  4771                           
  4772                           	psect	text4
  4773     1CB4                     __ptext4:	
  4774 ;; *************** function ___awdiv *****************
  4775 ;; Defined at:
  4776 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  4777 ;; Parameters:    Size  Location     Type
  4778 ;;  divisor         2    0[BANK0 ] int 
  4779 ;;  dividend        2    2[BANK0 ] int 
  4780 ;; Auto vars:     Size  Location     Type
  4781 ;;  quotient        2    6[BANK0 ] int 
  4782 ;;  sign            1    5[BANK0 ] unsigned char 
  4783 ;;  counter         1    4[BANK0 ] unsigned char 
  4784 ;; Return value:  Size  Location     Type
  4785 ;;                  2    0[BANK0 ] int 
  4786 ;; Registers used:
  4787 ;;		wreg, status,2, status,0
  4788 ;; Tracked objects:
  4789 ;;		On entry : 0/0
  4790 ;;		On exit  : 0/0
  4791 ;;		Unchanged: 0/0
  4792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4793 ;;      Params:         0       4       0       0       0
  4794 ;;      Locals:         0       4       0       0       0
  4795 ;;      Temps:          1       0       0       0       0
  4796 ;;      Totals:         1       8       0       0       0
  4797 ;;Total ram usage:        9 bytes
  4798 ;; Hardware stack levels used: 1
  4799 ;; Hardware stack levels required when called: 2
  4800 ;; This function calls:
  4801 ;;		Nothing
  4802 ;; This function is called by:
  4803 ;;		_scale
  4804 ;;		_sprintf
  4805 ;;		_map
  4806 ;; This function uses a non-reentrant model
  4807 ;;
  4808                           
  4809     1CB4                     ___awdiv:	
  4810                           ;psect for function ___awdiv
  4811                           
  4812     1CB4                     l2543:	
  4813                           ;incstack = 0
  4814                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4815                           
  4816     1CB4  1283               	bcf	3,5	;RP0=0, select bank0
  4817     1CB5  1303               	bcf	3,6	;RP1=0, select bank0
  4818     1CB6  01A5               	clrf	___awdiv@sign
  4819     1CB7                     l2545:
  4820     1CB7  1FA1               	btfss	___awdiv@divisor+1,7
  4821     1CB8  2CBA               	goto	u3291
  4822     1CB9  2CBB               	goto	u3290
  4823     1CBA                     u3291:
  4824     1CBA  2CC2               	goto	l2551
  4825     1CBB                     u3290:
  4826     1CBB                     l2547:
  4827     1CBB  09A0               	comf	___awdiv@divisor,f
  4828     1CBC  09A1               	comf	___awdiv@divisor+1,f
  4829     1CBD  0AA0               	incf	___awdiv@divisor,f
  4830     1CBE  1903               	skipnz
  4831     1CBF  0AA1               	incf	___awdiv@divisor+1,f
  4832     1CC0                     l2549:
  4833     1CC0  01A5               	clrf	___awdiv@sign
  4834     1CC1  0AA5               	incf	___awdiv@sign,f
  4835     1CC2                     l2551:
  4836     1CC2  1FA3               	btfss	___awdiv@dividend+1,7
  4837     1CC3  2CC5               	goto	u3301
  4838     1CC4  2CC6               	goto	u3300
  4839     1CC5                     u3301:
  4840     1CC5  2CCF               	goto	l2557
  4841     1CC6                     u3300:
  4842     1CC6                     l2553:
  4843     1CC6  09A2               	comf	___awdiv@dividend,f
  4844     1CC7  09A3               	comf	___awdiv@dividend+1,f
  4845     1CC8  0AA2               	incf	___awdiv@dividend,f
  4846     1CC9  1903               	skipnz
  4847     1CCA  0AA3               	incf	___awdiv@dividend+1,f
  4848     1CCB                     l2555:
  4849     1CCB  3001               	movlw	1
  4850     1CCC  00F9               	movwf	??___awdiv
  4851     1CCD  0879               	movf	??___awdiv,w
  4852     1CCE  06A5               	xorwf	___awdiv@sign,f
  4853     1CCF                     l2557:
  4854     1CCF  01A6               	clrf	___awdiv@quotient
  4855     1CD0  01A7               	clrf	___awdiv@quotient+1
  4856     1CD1                     l2559:
  4857     1CD1  0820               	movf	___awdiv@divisor,w
  4858     1CD2  0421               	iorwf	___awdiv@divisor+1,w
  4859     1CD3  1903               	btfsc	3,2
  4860     1CD4  2CD6               	goto	u3311
  4861     1CD5  2CD7               	goto	u3310
  4862     1CD6                     u3311:
  4863     1CD6  2D0E               	goto	l2579
  4864     1CD7                     u3310:
  4865     1CD7                     l2561:
  4866     1CD7  01A4               	clrf	___awdiv@counter
  4867     1CD8  0AA4               	incf	___awdiv@counter,f
  4868     1CD9  2CE5               	goto	l2567
  4869     1CDA                     l2563:
  4870     1CDA  3001               	movlw	1
  4871     1CDB                     u3325:
  4872     1CDB  1003               	clrc
  4873     1CDC  0DA0               	rlf	___awdiv@divisor,f
  4874     1CDD  0DA1               	rlf	___awdiv@divisor+1,f
  4875     1CDE  3EFF               	addlw	-1
  4876     1CDF  1D03               	skipz
  4877     1CE0  2CDB               	goto	u3325
  4878     1CE1                     l2565:
  4879     1CE1  3001               	movlw	1
  4880     1CE2  00F9               	movwf	??___awdiv
  4881     1CE3  0879               	movf	??___awdiv,w
  4882     1CE4  07A4               	addwf	___awdiv@counter,f
  4883     1CE5                     l2567:
  4884     1CE5  1FA1               	btfss	___awdiv@divisor+1,7
  4885     1CE6  2CE8               	goto	u3331
  4886     1CE7  2CE9               	goto	u3330
  4887     1CE8                     u3331:
  4888     1CE8  2CDA               	goto	l2563
  4889     1CE9                     u3330:
  4890     1CE9                     l2569:
  4891     1CE9  3001               	movlw	1
  4892     1CEA                     u3345:
  4893     1CEA  1003               	clrc
  4894     1CEB  0DA6               	rlf	___awdiv@quotient,f
  4895     1CEC  0DA7               	rlf	___awdiv@quotient+1,f
  4896     1CED  3EFF               	addlw	-1
  4897     1CEE  1D03               	skipz
  4898     1CEF  2CEA               	goto	u3345
  4899     1CF0  0821               	movf	___awdiv@divisor+1,w
  4900     1CF1  0223               	subwf	___awdiv@dividend+1,w
  4901     1CF2  1D03               	skipz
  4902     1CF3  2CF6               	goto	u3355
  4903     1CF4  0820               	movf	___awdiv@divisor,w
  4904     1CF5  0222               	subwf	___awdiv@dividend,w
  4905     1CF6                     u3355:
  4906     1CF6  1C03               	skipc
  4907     1CF7  2CF9               	goto	u3351
  4908     1CF8  2CFA               	goto	u3350
  4909     1CF9                     u3351:
  4910     1CF9  2D01               	goto	l2575
  4911     1CFA                     u3350:
  4912     1CFA                     l2571:
  4913     1CFA  0820               	movf	___awdiv@divisor,w
  4914     1CFB  02A2               	subwf	___awdiv@dividend,f
  4915     1CFC  0821               	movf	___awdiv@divisor+1,w
  4916     1CFD  1C03               	skipc
  4917     1CFE  03A3               	decf	___awdiv@dividend+1,f
  4918     1CFF  02A3               	subwf	___awdiv@dividend+1,f
  4919     1D00                     l2573:
  4920     1D00  1426               	bsf	___awdiv@quotient,0
  4921     1D01                     l2575:
  4922     1D01  3001               	movlw	1
  4923     1D02                     u3365:
  4924     1D02  1003               	clrc
  4925     1D03  0CA1               	rrf	___awdiv@divisor+1,f
  4926     1D04  0CA0               	rrf	___awdiv@divisor,f
  4927     1D05  3EFF               	addlw	-1
  4928     1D06  1D03               	skipz
  4929     1D07  2D02               	goto	u3365
  4930     1D08                     l2577:
  4931     1D08  3001               	movlw	1
  4932     1D09  02A4               	subwf	___awdiv@counter,f
  4933     1D0A  1D03               	btfss	3,2
  4934     1D0B  2D0D               	goto	u3371
  4935     1D0C  2D0E               	goto	u3370
  4936     1D0D                     u3371:
  4937     1D0D  2CE9               	goto	l2569
  4938     1D0E                     u3370:
  4939     1D0E                     l2579:
  4940     1D0E  0825               	movf	___awdiv@sign,w
  4941     1D0F  1903               	btfsc	3,2
  4942     1D10  2D12               	goto	u3381
  4943     1D11  2D13               	goto	u3380
  4944     1D12                     u3381:
  4945     1D12  2D18               	goto	l2583
  4946     1D13                     u3380:
  4947     1D13                     l2581:
  4948     1D13  09A6               	comf	___awdiv@quotient,f
  4949     1D14  09A7               	comf	___awdiv@quotient+1,f
  4950     1D15  0AA6               	incf	___awdiv@quotient,f
  4951     1D16  1903               	skipnz
  4952     1D17  0AA7               	incf	___awdiv@quotient+1,f
  4953     1D18                     l2583:
  4954     1D18  0827               	movf	___awdiv@quotient+1,w
  4955     1D19  00A1               	movwf	?___awdiv+1
  4956     1D1A  0826               	movf	___awdiv@quotient,w
  4957     1D1B  00A0               	movwf	?___awdiv
  4958     1D1C                     l581:
  4959     1D1C  0008               	return
  4960     1D1D                     __end_of___awdiv:
  4961                           
  4962                           	psect	text5
  4963     18A7                     __ptext5:	
  4964 ;; *************** function _isdigit *****************
  4965 ;; Defined at:
  4966 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  4967 ;; Parameters:    Size  Location     Type
  4968 ;;  c               1    wreg     unsigned char 
  4969 ;; Auto vars:     Size  Location     Type
  4970 ;;  c               1    3[COMMON] unsigned char 
  4971 ;; Return value:  Size  Location     Type
  4972 ;;		None               void
  4973 ;; Registers used:
  4974 ;;		wreg, status,2, status,0
  4975 ;; Tracked objects:
  4976 ;;		On entry : 0/0
  4977 ;;		On exit  : 0/0
  4978 ;;		Unchanged: 0/0
  4979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4980 ;;      Params:         0       0       0       0       0
  4981 ;;      Locals:         2       0       0       0       0
  4982 ;;      Temps:          0       0       0       0       0
  4983 ;;      Totals:         2       0       0       0       0
  4984 ;;Total ram usage:        2 bytes
  4985 ;; Hardware stack levels used: 1
  4986 ;; Hardware stack levels required when called: 2
  4987 ;; This function calls:
  4988 ;;		Nothing
  4989 ;; This function is called by:
  4990 ;;		_sprintf
  4991 ;; This function uses a non-reentrant model
  4992 ;;
  4993                           
  4994     18A7                     _isdigit:	
  4995                           ;psect for function _isdigit
  4996                           
  4997                           
  4998                           ;incstack = 0
  4999                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5000                           ;isdigit@c stored from wreg
  5001     18A7  00F3               	movwf	isdigit@c
  5002     18A8                     l3085:
  5003     18A8  01F2               	clrf	_isdigit$1087
  5004     18A9                     l3087:
  5005     18A9  303A               	movlw	58
  5006     18AA  0273               	subwf	isdigit@c,w
  5007     18AB  1803               	skipnc
  5008     18AC  28AE               	goto	u4691
  5009     18AD  28AF               	goto	u4690
  5010     18AE                     u4691:
  5011     18AE  28B7               	goto	l3093
  5012     18AF                     u4690:
  5013     18AF                     l3089:
  5014     18AF  3030               	movlw	48
  5015     18B0  0273               	subwf	isdigit@c,w
  5016     18B1  1C03               	skipc
  5017     18B2  28B4               	goto	u4701
  5018     18B3  28B5               	goto	u4700
  5019     18B4                     u4701:
  5020     18B4  28B7               	goto	l3093
  5021     18B5                     u4700:
  5022     18B5                     l3091:
  5023     18B5  01F2               	clrf	_isdigit$1087
  5024     18B6  0AF2               	incf	_isdigit$1087,f
  5025     18B7                     l3093:
  5026     18B7  0C72               	rrf	_isdigit$1087,w
  5027     18B8                     l915:
  5028     18B8  0008               	return
  5029     18B9                     __end_of_isdigit:
  5030                           
  5031                           	psect	text6
  5032     1132                     __ptext6:	
  5033 ;; *************** function _fround *****************
  5034 ;; Defined at:
  5035 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  5036 ;; Parameters:    Size  Location     Type
  5037 ;;  prec            1    wreg     unsigned char 
  5038 ;; Auto vars:     Size  Location     Type
  5039 ;;  prec            1   53[BANK0 ] unsigned char 
  5040 ;; Return value:  Size  Location     Type
  5041 ;;                  4   34[BANK0 ] unsigned char 
  5042 ;; Registers used:
  5043 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5044 ;; Tracked objects:
  5045 ;;		On entry : 0/0
  5046 ;;		On exit  : 0/0
  5047 ;;		Unchanged: 0/0
  5048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5049 ;;      Params:         0       4       0       0       0
  5050 ;;      Locals:         0       9       0       0       0
  5051 ;;      Temps:          0       7       0       0       0
  5052 ;;      Totals:         0      20       0       0       0
  5053 ;;Total ram usage:       20 bytes
  5054 ;; Hardware stack levels used: 1
  5055 ;; Hardware stack levels required when called: 4
  5056 ;; This function calls:
  5057 ;;		___flmul
  5058 ;;		___lwdiv
  5059 ;;		___lwmod
  5060 ;; This function is called by:
  5061 ;;		_sprintf
  5062 ;; This function uses a non-reentrant model
  5063 ;;
  5064                           
  5065     1132                     _fround:	
  5066                           ;psect for function _fround
  5067                           
  5068                           
  5069                           ;incstack = 0
  5070                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5071                           ;fround@prec stored from wreg
  5072     1132  1283               	bcf	3,5	;RP0=0, select bank0
  5073     1133  1303               	bcf	3,6	;RP1=0, select bank0
  5074     1134  00D5               	movwf	fround@prec
  5075     1135                     l4085:
  5076                           
  5077                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  5078     1135  306E               	movlw	110
  5079     1136  0255               	subwf	fround@prec,w
  5080     1137  1C03               	skipc
  5081     1138  293A               	goto	u6491
  5082     1139  293B               	goto	u6490
  5083     113A                     u6491:
  5084     113A  2A4A               	goto	l4093
  5085     113B                     u6490:
  5086     113B                     l4087:
  5087                           
  5088                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5089     113B  303F               	movlw	63
  5090     113C  00AB               	movwf	___flmul@b+3
  5091     113D  3000               	movlw	0
  5092     113E  00AA               	movwf	___flmul@b+2
  5093     113F  3000               	movlw	0
  5094     1140  00A9               	movwf	___flmul@b+1
  5095     1141  3000               	movlw	0
  5096     1142  00A8               	movwf	___flmul@b
  5097     1143  3064               	movlw	100
  5098     1144  00F2               	movwf	___lwdiv@divisor
  5099     1145  3000               	movlw	0
  5100     1146  00F3               	movwf	___lwdiv@divisor+1
  5101     1147  0855               	movf	fround@prec,w
  5102     1148  00C6               	movwf	??_fround
  5103     1149  01C7               	clrf	??_fround+1
  5104     114A  0846               	movf	??_fround,w
  5105     114B  00F4               	movwf	___lwdiv@dividend
  5106     114C  0847               	movf	??_fround+1,w
  5107     114D  00F5               	movwf	___lwdiv@dividend+1
  5108     114E  160A  158A  220F  160A  118A  	fcall	___lwdiv
  5109     1153  0872               	movf	?___lwdiv,w
  5110     1154  1283               	bcf	3,5	;RP0=0, select bank0
  5111     1155  1303               	bcf	3,6	;RP1=0, select bank0
  5112     1156  00C8               	movwf	??_fround+2
  5113     1157  3001               	movlw	1
  5114     1158                     u6505:
  5115     1158  1003               	clrc
  5116     1159  0DC8               	rlf	??_fround+2,f
  5117     115A  3EFF               	addlw	-1
  5118     115B  1D03               	skipz
  5119     115C  2958               	goto	u6505
  5120     115D  1003               	clrc
  5121     115E  0D48               	rlf	??_fround+2,w
  5122     115F  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5123     1160  0084               	movwf	4
  5124     1161  120A  118A  272A  160A  118A  	fcall	stringdir
  5125     1166  00C9               	movwf	??_fround+3
  5126     1167  120A  118A  272A  160A  118A  	fcall	stringdir
  5127     116C  00CA               	movwf	??_fround+4
  5128     116D  120A  118A  272A  160A  118A  	fcall	stringdir
  5129     1172  00CB               	movwf	??_fround+5
  5130     1173  120A  118A  272A  160A  118A  	fcall	stringdir
  5131     1178  00CC               	movwf	??_fround+6
  5132     1179  084C               	movf	??_fround+6,w
  5133     117A  00AF               	movwf	___flmul@a+3
  5134     117B  084B               	movf	??_fround+5,w
  5135     117C  00AE               	movwf	___flmul@a+2
  5136     117D  084A               	movf	??_fround+4,w
  5137     117E  00AD               	movwf	___flmul@a+1
  5138     117F  0849               	movf	??_fround+3,w
  5139     1180  00AC               	movwf	___flmul@a
  5140     1181  120A  158A  2158  160A  118A  	fcall	___flmul
  5141     1186  1283               	bcf	3,5	;RP0=0, select bank0
  5142     1187  1303               	bcf	3,6	;RP1=0, select bank0
  5143     1188  082B               	movf	?___flmul+3,w
  5144     1189  00D4               	movwf	_fround$1270+3
  5145     118A  082A               	movf	?___flmul+2,w
  5146     118B  00D3               	movwf	_fround$1270+2
  5147     118C  0829               	movf	?___flmul+1,w
  5148     118D  00D2               	movwf	_fround$1270+1
  5149     118E  0828               	movf	?___flmul,w
  5150     118F  00D1               	movwf	_fround$1270
  5151                           
  5152                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5153     1190  300A               	movlw	10
  5154     1191  00F2               	movwf	___lwdiv@divisor
  5155     1192  3000               	movlw	0
  5156     1193  00F3               	movwf	___lwdiv@divisor+1
  5157     1194  0855               	movf	fround@prec,w
  5158     1195  00C6               	movwf	??_fround
  5159     1196  01C7               	clrf	??_fround+1
  5160     1197  0846               	movf	??_fround,w
  5161     1198  00A2               	movwf	___lwmod@dividend
  5162     1199  0847               	movf	??_fround+1,w
  5163     119A  00A3               	movwf	___lwmod@dividend+1
  5164     119B  3064               	movlw	100
  5165     119C  00A0               	movwf	___lwmod@divisor
  5166     119D  3000               	movlw	0
  5167     119E  00A1               	movwf	___lwmod@divisor+1
  5168     119F  160A  158A  2195  160A  118A  	fcall	___lwmod
  5169     11A4  1283               	bcf	3,5	;RP0=0, select bank0
  5170     11A5  1303               	bcf	3,6	;RP1=0, select bank0
  5171     11A6  0821               	movf	?___lwmod+1,w
  5172     11A7  00F5               	movwf	___lwdiv@dividend+1
  5173     11A8  0820               	movf	?___lwmod,w
  5174     11A9  00F4               	movwf	___lwdiv@dividend
  5175     11AA  160A  158A  220F  160A  118A  	fcall	___lwdiv
  5176     11AF  0872               	movf	?___lwdiv,w
  5177     11B0  1283               	bcf	3,5	;RP0=0, select bank0
  5178     11B1  1303               	bcf	3,6	;RP1=0, select bank0
  5179     11B2  00C8               	movwf	??_fround+2
  5180     11B3  3001               	movlw	1
  5181     11B4                     u6515:
  5182     11B4  1003               	clrc
  5183     11B5  0DC8               	rlf	??_fround+2,f
  5184     11B6  3EFF               	addlw	-1
  5185     11B7  1D03               	skipz
  5186     11B8  29B4               	goto	u6515
  5187     11B9  1003               	clrc
  5188     11BA  0D48               	rlf	??_fround+2,w
  5189     11BB  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5190     11BC  0084               	movwf	4
  5191     11BD  120A  118A  272A  160A  118A  	fcall	stringdir
  5192     11C2  00C9               	movwf	??_fround+3
  5193     11C3  120A  118A  272A  160A  118A  	fcall	stringdir
  5194     11C8  00CA               	movwf	??_fround+4
  5195     11C9  120A  118A  272A  160A  118A  	fcall	stringdir
  5196     11CE  00CB               	movwf	??_fround+5
  5197     11CF  120A  118A  272A  160A  118A  	fcall	stringdir
  5198     11D4  00CC               	movwf	??_fround+6
  5199     11D5  084C               	movf	??_fround+6,w
  5200     11D6  00AB               	movwf	___flmul@b+3
  5201     11D7  084B               	movf	??_fround+5,w
  5202     11D8  00AA               	movwf	___flmul@b+2
  5203     11D9  084A               	movf	??_fround+4,w
  5204     11DA  00A9               	movwf	___flmul@b+1
  5205     11DB  0849               	movf	??_fround+3,w
  5206     11DC  00A8               	movwf	___flmul@b
  5207     11DD  0854               	movf	_fround$1270+3,w
  5208     11DE  00AF               	movwf	___flmul@a+3
  5209     11DF  0853               	movf	_fround$1270+2,w
  5210     11E0  00AE               	movwf	___flmul@a+2
  5211     11E1  0852               	movf	_fround$1270+1,w
  5212     11E2  00AD               	movwf	___flmul@a+1
  5213     11E3  0851               	movf	_fround$1270,w
  5214     11E4  00AC               	movwf	___flmul@a
  5215     11E5  120A  158A  2158  160A  118A  	fcall	___flmul
  5216     11EA  1283               	bcf	3,5	;RP0=0, select bank0
  5217     11EB  1303               	bcf	3,6	;RP1=0, select bank0
  5218     11EC  082B               	movf	?___flmul+3,w
  5219     11ED  00D0               	movwf	_fround$1271+3
  5220     11EE  082A               	movf	?___flmul+2,w
  5221     11EF  00CF               	movwf	_fround$1271+2
  5222     11F0  0829               	movf	?___flmul+1,w
  5223     11F1  00CE               	movwf	_fround$1271+1
  5224     11F2  0828               	movf	?___flmul,w
  5225     11F3  00CD               	movwf	_fround$1271
  5226                           
  5227                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5228     11F4  300A               	movlw	10
  5229     11F5  00A0               	movwf	___lwmod@divisor
  5230     11F6  3000               	movlw	0
  5231     11F7  00A1               	movwf	___lwmod@divisor+1
  5232     11F8  0855               	movf	fround@prec,w
  5233     11F9  00C6               	movwf	??_fround
  5234     11FA  01C7               	clrf	??_fround+1
  5235     11FB  0846               	movf	??_fround,w
  5236     11FC  00A2               	movwf	___lwmod@dividend
  5237     11FD  0847               	movf	??_fround+1,w
  5238     11FE  00A3               	movwf	___lwmod@dividend+1
  5239     11FF  160A  158A  2195  160A  118A  	fcall	___lwmod
  5240     1204  1283               	bcf	3,5	;RP0=0, select bank0
  5241     1205  1303               	bcf	3,6	;RP1=0, select bank0
  5242     1206  0820               	movf	?___lwmod,w
  5243     1207  00C8               	movwf	??_fround+2
  5244     1208  3001               	movlw	1
  5245     1209                     u6525:
  5246     1209  1003               	clrc
  5247     120A  0DC8               	rlf	??_fround+2,f
  5248     120B  3EFF               	addlw	-1
  5249     120C  1D03               	skipz
  5250     120D  2A09               	goto	u6525
  5251     120E  1003               	clrc
  5252     120F  0D48               	rlf	??_fround+2,w
  5253     1210  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5254     1211  0084               	movwf	4
  5255     1212  120A  118A  272A  160A  118A  	fcall	stringdir
  5256     1217  00C9               	movwf	??_fround+3
  5257     1218  120A  118A  272A  160A  118A  	fcall	stringdir
  5258     121D  00CA               	movwf	??_fround+4
  5259     121E  120A  118A  272A  160A  118A  	fcall	stringdir
  5260     1223  00CB               	movwf	??_fround+5
  5261     1224  120A  118A  272A  160A  118A  	fcall	stringdir
  5262     1229  00CC               	movwf	??_fround+6
  5263     122A  084C               	movf	??_fround+6,w
  5264     122B  00AB               	movwf	___flmul@b+3
  5265     122C  084B               	movf	??_fround+5,w
  5266     122D  00AA               	movwf	___flmul@b+2
  5267     122E  084A               	movf	??_fround+4,w
  5268     122F  00A9               	movwf	___flmul@b+1
  5269     1230  0849               	movf	??_fround+3,w
  5270     1231  00A8               	movwf	___flmul@b
  5271     1232  0850               	movf	_fround$1271+3,w
  5272     1233  00AF               	movwf	___flmul@a+3
  5273     1234  084F               	movf	_fround$1271+2,w
  5274     1235  00AE               	movwf	___flmul@a+2
  5275     1236  084E               	movf	_fround$1271+1,w
  5276     1237  00AD               	movwf	___flmul@a+1
  5277     1238  084D               	movf	_fround$1271,w
  5278     1239  00AC               	movwf	___flmul@a
  5279     123A  120A  158A  2158  160A  118A  	fcall	___flmul
  5280     123F  1283               	bcf	3,5	;RP0=0, select bank0
  5281     1240  1303               	bcf	3,6	;RP1=0, select bank0
  5282     1241  082B               	movf	?___flmul+3,w
  5283     1242  00C5               	movwf	?_fround+3
  5284     1243  082A               	movf	?___flmul+2,w
  5285     1244  00C4               	movwf	?_fround+2
  5286     1245  0829               	movf	?___flmul+1,w
  5287     1246  00C3               	movwf	?_fround+1
  5288     1247  0828               	movf	?___flmul,w
  5289     1248  00C2               	movwf	?_fround
  5290     1249  2B3E               	goto	l351
  5291     124A                     l4093:
  5292     124A  300B               	movlw	11
  5293     124B  0255               	subwf	fround@prec,w
  5294     124C  1C03               	skipc
  5295     124D  2A4F               	goto	u6531
  5296     124E  2A50               	goto	u6530
  5297     124F                     u6531:
  5298     124F  2AFB               	goto	l4099
  5299     1250                     u6530:
  5300     1250                     l4095:
  5301                           
  5302                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5303     1250  303F               	movlw	63
  5304     1251  00AB               	movwf	___flmul@b+3
  5305     1252  3000               	movlw	0
  5306     1253  00AA               	movwf	___flmul@b+2
  5307     1254  3000               	movlw	0
  5308     1255  00A9               	movwf	___flmul@b+1
  5309     1256  3000               	movlw	0
  5310     1257  00A8               	movwf	___flmul@b
  5311     1258  300A               	movlw	10
  5312     1259  00F2               	movwf	___lwdiv@divisor
  5313     125A  3000               	movlw	0
  5314     125B  00F3               	movwf	___lwdiv@divisor+1
  5315     125C  0855               	movf	fround@prec,w
  5316     125D  00C6               	movwf	??_fround
  5317     125E  01C7               	clrf	??_fround+1
  5318     125F  0846               	movf	??_fround,w
  5319     1260  00F4               	movwf	___lwdiv@dividend
  5320     1261  0847               	movf	??_fround+1,w
  5321     1262  00F5               	movwf	___lwdiv@dividend+1
  5322     1263  160A  158A  220F  160A  118A  	fcall	___lwdiv
  5323     1268  0872               	movf	?___lwdiv,w
  5324     1269  1283               	bcf	3,5	;RP0=0, select bank0
  5325     126A  1303               	bcf	3,6	;RP1=0, select bank0
  5326     126B  00C8               	movwf	??_fround+2
  5327     126C  3001               	movlw	1
  5328     126D                     u6545:
  5329     126D  1003               	clrc
  5330     126E  0DC8               	rlf	??_fround+2,f
  5331     126F  3EFF               	addlw	-1
  5332     1270  1D03               	skipz
  5333     1271  2A6D               	goto	u6545
  5334     1272  1003               	clrc
  5335     1273  0D48               	rlf	??_fround+2,w
  5336     1274  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5337     1275  0084               	movwf	4
  5338     1276  120A  118A  272A  160A  118A  	fcall	stringdir
  5339     127B  00C9               	movwf	??_fround+3
  5340     127C  120A  118A  272A  160A  118A  	fcall	stringdir
  5341     1281  00CA               	movwf	??_fround+4
  5342     1282  120A  118A  272A  160A  118A  	fcall	stringdir
  5343     1287  00CB               	movwf	??_fround+5
  5344     1288  120A  118A  272A  160A  118A  	fcall	stringdir
  5345     128D  00CC               	movwf	??_fround+6
  5346     128E  084C               	movf	??_fround+6,w
  5347     128F  00AF               	movwf	___flmul@a+3
  5348     1290  084B               	movf	??_fround+5,w
  5349     1291  00AE               	movwf	___flmul@a+2
  5350     1292  084A               	movf	??_fround+4,w
  5351     1293  00AD               	movwf	___flmul@a+1
  5352     1294  0849               	movf	??_fround+3,w
  5353     1295  00AC               	movwf	___flmul@a
  5354     1296  120A  158A  2158  160A  118A  	fcall	___flmul
  5355     129B  1283               	bcf	3,5	;RP0=0, select bank0
  5356     129C  1303               	bcf	3,6	;RP1=0, select bank0
  5357     129D  082B               	movf	?___flmul+3,w
  5358     129E  00D4               	movwf	_fround$1270+3
  5359     129F  082A               	movf	?___flmul+2,w
  5360     12A0  00D3               	movwf	_fround$1270+2
  5361     12A1  0829               	movf	?___flmul+1,w
  5362     12A2  00D2               	movwf	_fround$1270+1
  5363     12A3  0828               	movf	?___flmul,w
  5364     12A4  00D1               	movwf	_fround$1270
  5365                           
  5366                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5367     12A5  300A               	movlw	10
  5368     12A6  00A0               	movwf	___lwmod@divisor
  5369     12A7  3000               	movlw	0
  5370     12A8  00A1               	movwf	___lwmod@divisor+1
  5371     12A9  0855               	movf	fround@prec,w
  5372     12AA  00C6               	movwf	??_fround
  5373     12AB  01C7               	clrf	??_fround+1
  5374     12AC  0846               	movf	??_fround,w
  5375     12AD  00A2               	movwf	___lwmod@dividend
  5376     12AE  0847               	movf	??_fround+1,w
  5377     12AF  00A3               	movwf	___lwmod@dividend+1
  5378     12B0  160A  158A  2195  160A  118A  	fcall	___lwmod
  5379     12B5  1283               	bcf	3,5	;RP0=0, select bank0
  5380     12B6  1303               	bcf	3,6	;RP1=0, select bank0
  5381     12B7  0820               	movf	?___lwmod,w
  5382     12B8  00C8               	movwf	??_fround+2
  5383     12B9  3001               	movlw	1
  5384     12BA                     u6555:
  5385     12BA  1003               	clrc
  5386     12BB  0DC8               	rlf	??_fround+2,f
  5387     12BC  3EFF               	addlw	-1
  5388     12BD  1D03               	skipz
  5389     12BE  2ABA               	goto	u6555
  5390     12BF  1003               	clrc
  5391     12C0  0D48               	rlf	??_fround+2,w
  5392     12C1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5393     12C2  0084               	movwf	4
  5394     12C3  120A  118A  272A  160A  118A  	fcall	stringdir
  5395     12C8  00C9               	movwf	??_fround+3
  5396     12C9  120A  118A  272A  160A  118A  	fcall	stringdir
  5397     12CE  00CA               	movwf	??_fround+4
  5398     12CF  120A  118A  272A  160A  118A  	fcall	stringdir
  5399     12D4  00CB               	movwf	??_fround+5
  5400     12D5  120A  118A  272A  160A  118A  	fcall	stringdir
  5401     12DA  00CC               	movwf	??_fround+6
  5402     12DB  084C               	movf	??_fround+6,w
  5403     12DC  00AB               	movwf	___flmul@b+3
  5404     12DD  084B               	movf	??_fround+5,w
  5405     12DE  00AA               	movwf	___flmul@b+2
  5406     12DF  084A               	movf	??_fround+4,w
  5407     12E0  00A9               	movwf	___flmul@b+1
  5408     12E1  0849               	movf	??_fround+3,w
  5409     12E2  00A8               	movwf	___flmul@b
  5410     12E3  0854               	movf	_fround$1270+3,w
  5411     12E4  00AF               	movwf	___flmul@a+3
  5412     12E5  0853               	movf	_fround$1270+2,w
  5413     12E6  00AE               	movwf	___flmul@a+2
  5414     12E7  0852               	movf	_fround$1270+1,w
  5415     12E8  00AD               	movwf	___flmul@a+1
  5416     12E9  0851               	movf	_fround$1270,w
  5417     12EA  00AC               	movwf	___flmul@a
  5418     12EB  120A  158A  2158  160A  118A  	fcall	___flmul
  5419     12F0  1283               	bcf	3,5	;RP0=0, select bank0
  5420     12F1  1303               	bcf	3,6	;RP1=0, select bank0
  5421     12F2  082B               	movf	?___flmul+3,w
  5422     12F3  00C5               	movwf	?_fround+3
  5423     12F4  082A               	movf	?___flmul+2,w
  5424     12F5  00C4               	movwf	?_fround+2
  5425     12F6  0829               	movf	?___flmul+1,w
  5426     12F7  00C3               	movwf	?_fround+1
  5427     12F8  0828               	movf	?___flmul,w
  5428     12F9  00C2               	movwf	?_fround
  5429     12FA  2B3E               	goto	l351
  5430     12FB                     l4099:
  5431                           
  5432                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5433     12FB  303F               	movlw	63
  5434     12FC  00AB               	movwf	___flmul@b+3
  5435     12FD  3000               	movlw	0
  5436     12FE  00AA               	movwf	___flmul@b+2
  5437     12FF  3000               	movlw	0
  5438     1300  00A9               	movwf	___flmul@b+1
  5439     1301  3000               	movlw	0
  5440     1302  00A8               	movwf	___flmul@b
  5441     1303  0855               	movf	fround@prec,w
  5442     1304  00C6               	movwf	??_fround
  5443     1305  3001               	movlw	1
  5444     1306                     u6565:
  5445     1306  1003               	clrc
  5446     1307  0DC6               	rlf	??_fround,f
  5447     1308  3EFF               	addlw	-1
  5448     1309  1D03               	skipz
  5449     130A  2B06               	goto	u6565
  5450     130B  1003               	clrc
  5451     130C  0D46               	rlf	??_fround,w
  5452     130D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5453     130E  0084               	movwf	4
  5454     130F  120A  118A  272A  160A  118A  	fcall	stringdir
  5455     1314  00C7               	movwf	??_fround+1
  5456     1315  120A  118A  272A  160A  118A  	fcall	stringdir
  5457     131A  00C8               	movwf	??_fround+2
  5458     131B  120A  118A  272A  160A  118A  	fcall	stringdir
  5459     1320  00C9               	movwf	??_fround+3
  5460     1321  120A  118A  272A  160A  118A  	fcall	stringdir
  5461     1326  00CA               	movwf	??_fround+4
  5462     1327  084A               	movf	??_fround+4,w
  5463     1328  00AF               	movwf	___flmul@a+3
  5464     1329  0849               	movf	??_fround+3,w
  5465     132A  00AE               	movwf	___flmul@a+2
  5466     132B  0848               	movf	??_fround+2,w
  5467     132C  00AD               	movwf	___flmul@a+1
  5468     132D  0847               	movf	??_fround+1,w
  5469     132E  00AC               	movwf	___flmul@a
  5470     132F  120A  158A  2158  160A  118A  	fcall	___flmul
  5471     1334  1283               	bcf	3,5	;RP0=0, select bank0
  5472     1335  1303               	bcf	3,6	;RP1=0, select bank0
  5473     1336  082B               	movf	?___flmul+3,w
  5474     1337  00C5               	movwf	?_fround+3
  5475     1338  082A               	movf	?___flmul+2,w
  5476     1339  00C4               	movwf	?_fround+2
  5477     133A  0829               	movf	?___flmul+1,w
  5478     133B  00C3               	movwf	?_fround+1
  5479     133C  0828               	movf	?___flmul,w
  5480     133D  00C2               	movwf	?_fround
  5481     133E                     l351:
  5482     133E  0008               	return
  5483     133F                     __end_of_fround:
  5484                           
  5485                           	psect	text7
  5486     1995                     __ptext7:	
  5487 ;; *************** function ___lwmod *****************
  5488 ;; Defined at:
  5489 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  5490 ;; Parameters:    Size  Location     Type
  5491 ;;  divisor         2    0[BANK0 ] unsigned int 
  5492 ;;  dividend        2    2[BANK0 ] unsigned int 
  5493 ;; Auto vars:     Size  Location     Type
  5494 ;;  counter         1    4[BANK0 ] unsigned char 
  5495 ;; Return value:  Size  Location     Type
  5496 ;;                  2    0[BANK0 ] unsigned int 
  5497 ;; Registers used:
  5498 ;;		wreg, status,2, status,0
  5499 ;; Tracked objects:
  5500 ;;		On entry : 0/0
  5501 ;;		On exit  : 0/0
  5502 ;;		Unchanged: 0/0
  5503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5504 ;;      Params:         0       4       0       0       0
  5505 ;;      Locals:         0       1       0       0       0
  5506 ;;      Temps:          1       0       0       0       0
  5507 ;;      Totals:         1       5       0       0       0
  5508 ;;Total ram usage:        6 bytes
  5509 ;; Hardware stack levels used: 1
  5510 ;; Hardware stack levels required when called: 2
  5511 ;; This function calls:
  5512 ;;		Nothing
  5513 ;; This function is called by:
  5514 ;;		_main
  5515 ;;		_fround
  5516 ;; This function uses a non-reentrant model
  5517 ;;
  5518                           
  5519     1995                     ___lwmod:	
  5520                           ;psect for function ___lwmod
  5521                           
  5522     1995                     l4043:	
  5523                           ;incstack = 0
  5524                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5525                           
  5526     1995  1283               	bcf	3,5	;RP0=0, select bank0
  5527     1996  1303               	bcf	3,6	;RP1=0, select bank0
  5528     1997  0820               	movf	___lwmod@divisor,w
  5529     1998  0421               	iorwf	___lwmod@divisor+1,w
  5530     1999  1903               	btfsc	3,2
  5531     199A  299C               	goto	u6431
  5532     199B  299D               	goto	u6430
  5533     199C                     u6431:
  5534     199C  29CC               	goto	l4061
  5535     199D                     u6430:
  5536     199D                     l4045:
  5537     199D  01A4               	clrf	___lwmod@counter
  5538     199E  0AA4               	incf	___lwmod@counter,f
  5539     199F  29AB               	goto	l4051
  5540     19A0                     l4047:
  5541     19A0  3001               	movlw	1
  5542     19A1                     u6445:
  5543     19A1  1003               	clrc
  5544     19A2  0DA0               	rlf	___lwmod@divisor,f
  5545     19A3  0DA1               	rlf	___lwmod@divisor+1,f
  5546     19A4  3EFF               	addlw	-1
  5547     19A5  1D03               	skipz
  5548     19A6  29A1               	goto	u6445
  5549     19A7                     l4049:
  5550     19A7  3001               	movlw	1
  5551     19A8  00FA               	movwf	??___lwmod
  5552     19A9  087A               	movf	??___lwmod,w
  5553     19AA  07A4               	addwf	___lwmod@counter,f
  5554     19AB                     l4051:
  5555     19AB  1FA1               	btfss	___lwmod@divisor+1,7
  5556     19AC  29AE               	goto	u6451
  5557     19AD  29AF               	goto	u6450
  5558     19AE                     u6451:
  5559     19AE  29A0               	goto	l4047
  5560     19AF                     u6450:
  5561     19AF                     l4053:
  5562     19AF  0821               	movf	___lwmod@divisor+1,w
  5563     19B0  0223               	subwf	___lwmod@dividend+1,w
  5564     19B1  1D03               	skipz
  5565     19B2  29B5               	goto	u6465
  5566     19B3  0820               	movf	___lwmod@divisor,w
  5567     19B4  0222               	subwf	___lwmod@dividend,w
  5568     19B5                     u6465:
  5569     19B5  1C03               	skipc
  5570     19B6  29B8               	goto	u6461
  5571     19B7  29B9               	goto	u6460
  5572     19B8                     u6461:
  5573     19B8  29BF               	goto	l4057
  5574     19B9                     u6460:
  5575     19B9                     l4055:
  5576     19B9  0820               	movf	___lwmod@divisor,w
  5577     19BA  02A2               	subwf	___lwmod@dividend,f
  5578     19BB  0821               	movf	___lwmod@divisor+1,w
  5579     19BC  1C03               	skipc
  5580     19BD  03A3               	decf	___lwmod@dividend+1,f
  5581     19BE  02A3               	subwf	___lwmod@dividend+1,f
  5582     19BF                     l4057:
  5583     19BF  3001               	movlw	1
  5584     19C0                     u6475:
  5585     19C0  1003               	clrc
  5586     19C1  0CA1               	rrf	___lwmod@divisor+1,f
  5587     19C2  0CA0               	rrf	___lwmod@divisor,f
  5588     19C3  3EFF               	addlw	-1
  5589     19C4  1D03               	skipz
  5590     19C5  29C0               	goto	u6475
  5591     19C6                     l4059:
  5592     19C6  3001               	movlw	1
  5593     19C7  02A4               	subwf	___lwmod@counter,f
  5594     19C8  1D03               	btfss	3,2
  5595     19C9  29CB               	goto	u6481
  5596     19CA  29CC               	goto	u6480
  5597     19CB                     u6481:
  5598     19CB  29AF               	goto	l4053
  5599     19CC                     u6480:
  5600     19CC                     l4061:
  5601     19CC  0823               	movf	___lwmod@dividend+1,w
  5602     19CD  00A1               	movwf	?___lwmod+1
  5603     19CE  0822               	movf	___lwmod@dividend,w
  5604     19CF  00A0               	movwf	?___lwmod
  5605     19D0                     l744:
  5606     19D0  0008               	return
  5607     19D1                     __end_of___lwmod:
  5608                           
  5609                           	psect	text8
  5610     1A0F                     __ptext8:	
  5611 ;; *************** function ___lwdiv *****************
  5612 ;; Defined at:
  5613 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;  divisor         2    2[COMMON] unsigned int 
  5616 ;;  dividend        2    4[COMMON] unsigned int 
  5617 ;; Auto vars:     Size  Location     Type
  5618 ;;  quotient        2    7[COMMON] unsigned int 
  5619 ;;  counter         1    9[COMMON] unsigned char 
  5620 ;; Return value:  Size  Location     Type
  5621 ;;                  2    2[COMMON] unsigned int 
  5622 ;; Registers used:
  5623 ;;		wreg, status,2, status,0
  5624 ;; Tracked objects:
  5625 ;;		On entry : 0/0
  5626 ;;		On exit  : 0/0
  5627 ;;		Unchanged: 0/0
  5628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5629 ;;      Params:         4       0       0       0       0
  5630 ;;      Locals:         3       0       0       0       0
  5631 ;;      Temps:          1       0       0       0       0
  5632 ;;      Totals:         8       0       0       0       0
  5633 ;;Total ram usage:        8 bytes
  5634 ;; Hardware stack levels used: 1
  5635 ;; Hardware stack levels required when called: 2
  5636 ;; This function calls:
  5637 ;;		Nothing
  5638 ;; This function is called by:
  5639 ;;		_main
  5640 ;;		_fround
  5641 ;; This function uses a non-reentrant model
  5642 ;;
  5643                           
  5644     1A0F                     ___lwdiv:	
  5645                           ;psect for function ___lwdiv
  5646                           
  5647     1A0F                     l2625:	
  5648                           ;incstack = 0
  5649                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5650                           
  5651     1A0F  01F7               	clrf	___lwdiv@quotient
  5652     1A10  01F8               	clrf	___lwdiv@quotient+1
  5653     1A11                     l2627:
  5654     1A11  0872               	movf	___lwdiv@divisor,w
  5655     1A12  0473               	iorwf	___lwdiv@divisor+1,w
  5656     1A13  1903               	btfsc	3,2
  5657     1A14  2A16               	goto	u3481
  5658     1A15  2A17               	goto	u3480
  5659     1A16                     u3481:
  5660     1A16  2A4E               	goto	l2647
  5661     1A17                     u3480:
  5662     1A17                     l2629:
  5663     1A17  01F9               	clrf	___lwdiv@counter
  5664     1A18  0AF9               	incf	___lwdiv@counter,f
  5665     1A19  2A25               	goto	l2635
  5666     1A1A                     l2631:
  5667     1A1A  3001               	movlw	1
  5668     1A1B                     u3495:
  5669     1A1B  1003               	clrc
  5670     1A1C  0DF2               	rlf	___lwdiv@divisor,f
  5671     1A1D  0DF3               	rlf	___lwdiv@divisor+1,f
  5672     1A1E  3EFF               	addlw	-1
  5673     1A1F  1D03               	skipz
  5674     1A20  2A1B               	goto	u3495
  5675     1A21                     l2633:
  5676     1A21  3001               	movlw	1
  5677     1A22  00F6               	movwf	??___lwdiv
  5678     1A23  0876               	movf	??___lwdiv,w
  5679     1A24  07F9               	addwf	___lwdiv@counter,f
  5680     1A25                     l2635:
  5681     1A25  1FF3               	btfss	___lwdiv@divisor+1,7
  5682     1A26  2A28               	goto	u3501
  5683     1A27  2A29               	goto	u3500
  5684     1A28                     u3501:
  5685     1A28  2A1A               	goto	l2631
  5686     1A29                     u3500:
  5687     1A29                     l2637:
  5688     1A29  3001               	movlw	1
  5689     1A2A                     u3515:
  5690     1A2A  1003               	clrc
  5691     1A2B  0DF7               	rlf	___lwdiv@quotient,f
  5692     1A2C  0DF8               	rlf	___lwdiv@quotient+1,f
  5693     1A2D  3EFF               	addlw	-1
  5694     1A2E  1D03               	skipz
  5695     1A2F  2A2A               	goto	u3515
  5696     1A30  0873               	movf	___lwdiv@divisor+1,w
  5697     1A31  0275               	subwf	___lwdiv@dividend+1,w
  5698     1A32  1D03               	skipz
  5699     1A33  2A36               	goto	u3525
  5700     1A34  0872               	movf	___lwdiv@divisor,w
  5701     1A35  0274               	subwf	___lwdiv@dividend,w
  5702     1A36                     u3525:
  5703     1A36  1C03               	skipc
  5704     1A37  2A39               	goto	u3521
  5705     1A38  2A3A               	goto	u3520
  5706     1A39                     u3521:
  5707     1A39  2A41               	goto	l2643
  5708     1A3A                     u3520:
  5709     1A3A                     l2639:
  5710     1A3A  0872               	movf	___lwdiv@divisor,w
  5711     1A3B  02F4               	subwf	___lwdiv@dividend,f
  5712     1A3C  0873               	movf	___lwdiv@divisor+1,w
  5713     1A3D  1C03               	skipc
  5714     1A3E  03F5               	decf	___lwdiv@dividend+1,f
  5715     1A3F  02F5               	subwf	___lwdiv@dividend+1,f
  5716     1A40                     l2641:
  5717     1A40  1477               	bsf	___lwdiv@quotient,0
  5718     1A41                     l2643:
  5719     1A41  3001               	movlw	1
  5720     1A42                     u3535:
  5721     1A42  1003               	clrc
  5722     1A43  0CF3               	rrf	___lwdiv@divisor+1,f
  5723     1A44  0CF2               	rrf	___lwdiv@divisor,f
  5724     1A45  3EFF               	addlw	-1
  5725     1A46  1D03               	skipz
  5726     1A47  2A42               	goto	u3535
  5727     1A48                     l2645:
  5728     1A48  3001               	movlw	1
  5729     1A49  02F9               	subwf	___lwdiv@counter,f
  5730     1A4A  1D03               	btfss	3,2
  5731     1A4B  2A4D               	goto	u3541
  5732     1A4C  2A4E               	goto	u3540
  5733     1A4D                     u3541:
  5734     1A4D  2A29               	goto	l2637
  5735     1A4E                     u3540:
  5736     1A4E                     l2647:
  5737     1A4E  0878               	movf	___lwdiv@quotient+1,w
  5738     1A4F  00F3               	movwf	?___lwdiv+1
  5739     1A50  0877               	movf	___lwdiv@quotient,w
  5740     1A51  00F2               	movwf	?___lwdiv
  5741     1A52                     l734:
  5742     1A52  0008               	return
  5743     1A53                     __end_of___lwdiv:
  5744                           
  5745                           	psect	text9
  5746     0958                     __ptext9:	
  5747 ;; *************** function ___flmul *****************
  5748 ;; Defined at:
  5749 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcmul.c"
  5750 ;; Parameters:    Size  Location     Type
  5751 ;;  b               4    8[BANK0 ] unsigned int 
  5752 ;;  a               4   12[BANK0 ] unsigned int 
  5753 ;; Auto vars:     Size  Location     Type
  5754 ;;  prod            4   28[BANK0 ] struct .
  5755 ;;  grs             4   22[BANK0 ] unsigned long 
  5756 ;;  temp            2   32[BANK0 ] struct .
  5757 ;;  bexp            1   27[BANK0 ] unsigned char 
  5758 ;;  aexp            1   26[BANK0 ] unsigned char 
  5759 ;;  sign            1   21[BANK0 ] unsigned char 
  5760 ;; Return value:  Size  Location     Type
  5761 ;;                  4    8[BANK0 ] unsigned char 
  5762 ;; Registers used:
  5763 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5764 ;; Tracked objects:
  5765 ;;		On entry : 0/0
  5766 ;;		On exit  : 0/0
  5767 ;;		Unchanged: 0/0
  5768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5769 ;;      Params:         0       8       0       0       0
  5770 ;;      Locals:         0      13       0       0       0
  5771 ;;      Temps:          0       5       0       0       0
  5772 ;;      Totals:         0      26       0       0       0
  5773 ;;Total ram usage:       26 bytes
  5774 ;; Hardware stack levels used: 1
  5775 ;; Hardware stack levels required when called: 3
  5776 ;; This function calls:
  5777 ;;		__Umul8_16
  5778 ;; This function is called by:
  5779 ;;		_main
  5780 ;;		_fround
  5781 ;;		_scale
  5782 ;;		_sprintf
  5783 ;; This function uses a non-reentrant model
  5784 ;;
  5785                           
  5786     0958                     ___flmul:	
  5787                           ;psect for function ___flmul
  5788                           
  5789     0958                     l2867:	
  5790                           ;incstack = 0
  5791                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5792                           
  5793     0958  1283               	bcf	3,5	;RP0=0, select bank0
  5794     0959  1303               	bcf	3,6	;RP1=0, select bank0
  5795     095A  082B               	movf	___flmul@b+3,w
  5796     095B  3980               	andlw	128
  5797     095C  00B5               	movwf	___flmul@sign
  5798     095D                     l2869:
  5799     095D  082B               	movf	___flmul@b+3,w
  5800     095E  00B0               	movwf	??___flmul
  5801     095F  0730               	addwf	??___flmul,w
  5802     0960  00BB               	movwf	___flmul@bexp
  5803     0961                     l2871:
  5804     0961  1FAA               	btfss	___flmul@b+2,7
  5805     0962  2964               	goto	u4071
  5806     0963  2965               	goto	u4070
  5807     0964                     u4071:
  5808     0964  2966               	goto	l2875
  5809     0965                     u4070:
  5810     0965                     l2873:
  5811     0965  143B               	bsf	___flmul@bexp,0
  5812     0966                     l2875:
  5813     0966  083B               	movf	___flmul@bexp,w
  5814     0967  1903               	btfsc	3,2
  5815     0968  296A               	goto	u4081
  5816     0969  296B               	goto	u4080
  5817     096A                     u4081:
  5818     096A  297A               	goto	l2883
  5819     096B                     u4080:
  5820     096B                     l2877:
  5821     096B  0A3B               	incf	___flmul@bexp,w
  5822     096C  1D03               	btfss	3,2
  5823     096D  296F               	goto	u4091
  5824     096E  2970               	goto	u4090
  5825     096F                     u4091:
  5826     096F  2978               	goto	l2881
  5827     0970                     u4090:
  5828     0970                     l2879:
  5829     0970  3000               	movlw	0
  5830     0971  00AB               	movwf	___flmul@b+3
  5831     0972  3000               	movlw	0
  5832     0973  00AA               	movwf	___flmul@b+2
  5833     0974  3000               	movlw	0
  5834     0975  00A9               	movwf	___flmul@b+1
  5835     0976  3000               	movlw	0
  5836     0977  00A8               	movwf	___flmul@b
  5837     0978                     l2881:
  5838     0978  17AA               	bsf	___flmul@b+2,7
  5839     0979  2982               	goto	l2885
  5840     097A                     l2883:
  5841     097A  3000               	movlw	0
  5842     097B  00AB               	movwf	___flmul@b+3
  5843     097C  3000               	movlw	0
  5844     097D  00AA               	movwf	___flmul@b+2
  5845     097E  3000               	movlw	0
  5846     097F  00A9               	movwf	___flmul@b+1
  5847     0980  3000               	movlw	0
  5848     0981  00A8               	movwf	___flmul@b
  5849     0982                     l2885:
  5850     0982  082F               	movf	___flmul@a+3,w
  5851     0983  3980               	andlw	128
  5852     0984  00B0               	movwf	??___flmul
  5853     0985  0830               	movf	??___flmul,w
  5854     0986  06B5               	xorwf	___flmul@sign,f
  5855     0987                     l2887:
  5856     0987  082F               	movf	___flmul@a+3,w
  5857     0988  00B0               	movwf	??___flmul
  5858     0989  0730               	addwf	??___flmul,w
  5859     098A  00BA               	movwf	___flmul@aexp
  5860     098B                     l2889:
  5861     098B  1FAE               	btfss	___flmul@a+2,7
  5862     098C  298E               	goto	u4101
  5863     098D  298F               	goto	u4100
  5864     098E                     u4101:
  5865     098E  2990               	goto	l2893
  5866     098F                     u4100:
  5867     098F                     l2891:
  5868     098F  143A               	bsf	___flmul@aexp,0
  5869     0990                     l2893:
  5870     0990  083A               	movf	___flmul@aexp,w
  5871     0991  1903               	btfsc	3,2
  5872     0992  2994               	goto	u4111
  5873     0993  2995               	goto	u4110
  5874     0994                     u4111:
  5875     0994  29A4               	goto	l2901
  5876     0995                     u4110:
  5877     0995                     l2895:
  5878     0995  0A3A               	incf	___flmul@aexp,w
  5879     0996  1D03               	btfss	3,2
  5880     0997  2999               	goto	u4121
  5881     0998  299A               	goto	u4120
  5882     0999                     u4121:
  5883     0999  29A2               	goto	l2899
  5884     099A                     u4120:
  5885     099A                     l2897:
  5886     099A  3000               	movlw	0
  5887     099B  00AF               	movwf	___flmul@a+3
  5888     099C  3000               	movlw	0
  5889     099D  00AE               	movwf	___flmul@a+2
  5890     099E  3000               	movlw	0
  5891     099F  00AD               	movwf	___flmul@a+1
  5892     09A0  3000               	movlw	0
  5893     09A1  00AC               	movwf	___flmul@a
  5894     09A2                     l2899:
  5895     09A2  17AE               	bsf	___flmul@a+2,7
  5896     09A3  29AC               	goto	l2903
  5897     09A4                     l2901:
  5898     09A4  3000               	movlw	0
  5899     09A5  00AF               	movwf	___flmul@a+3
  5900     09A6  3000               	movlw	0
  5901     09A7  00AE               	movwf	___flmul@a+2
  5902     09A8  3000               	movlw	0
  5903     09A9  00AD               	movwf	___flmul@a+1
  5904     09AA  3000               	movlw	0
  5905     09AB  00AC               	movwf	___flmul@a
  5906     09AC                     l2903:
  5907     09AC  083A               	movf	___flmul@aexp,w
  5908     09AD  1903               	btfsc	3,2
  5909     09AE  29B0               	goto	u4131
  5910     09AF  29B1               	goto	u4130
  5911     09B0                     u4131:
  5912     09B0  29B6               	goto	l2907
  5913     09B1                     u4130:
  5914     09B1                     l2905:
  5915     09B1  083B               	movf	___flmul@bexp,w
  5916     09B2  1D03               	btfss	3,2
  5917     09B3  29B5               	goto	u4141
  5918     09B4  29B6               	goto	u4140
  5919     09B5                     u4141:
  5920     09B5  29BF               	goto	l2911
  5921     09B6                     u4140:
  5922     09B6                     l2907:
  5923     09B6  3000               	movlw	0
  5924     09B7  00AB               	movwf	?___flmul+3
  5925     09B8  3000               	movlw	0
  5926     09B9  00AA               	movwf	?___flmul+2
  5927     09BA  3000               	movlw	0
  5928     09BB  00A9               	movwf	?___flmul+1
  5929     09BC  3000               	movlw	0
  5930     09BD  00A8               	movwf	?___flmul
  5931     09BE  2C9C               	goto	l851
  5932     09BF                     l2911:
  5933     09BF  0828               	movf	___flmul@b,w
  5934     09C0  00F2               	movwf	__Umul8_16@multiplicand
  5935     09C1  082E               	movf	___flmul@a+2,w
  5936     09C2  120A  118A  27D9  120A  158A  	fcall	__Umul8_16
  5937     09C7  0873               	movf	?__Umul8_16+1,w
  5938     09C8  1283               	bcf	3,5	;RP0=0, select bank0
  5939     09C9  1303               	bcf	3,6	;RP1=0, select bank0
  5940     09CA  00C1               	movwf	___flmul@temp+1
  5941     09CB  0872               	movf	?__Umul8_16,w
  5942     09CC  00C0               	movwf	___flmul@temp
  5943     09CD                     l2913:
  5944     09CD  0840               	movf	___flmul@temp,w
  5945     09CE  00B0               	movwf	??___flmul
  5946     09CF  01B1               	clrf	??___flmul+1
  5947     09D0  01B2               	clrf	??___flmul+2
  5948     09D1  01B3               	clrf	??___flmul+3
  5949     09D2  0833               	movf	??___flmul+3,w
  5950     09D3  00B9               	movwf	___flmul@grs+3
  5951     09D4  0832               	movf	??___flmul+2,w
  5952     09D5  00B8               	movwf	___flmul@grs+2
  5953     09D6  0831               	movf	??___flmul+1,w
  5954     09D7  00B7               	movwf	___flmul@grs+1
  5955     09D8  0830               	movf	??___flmul,w
  5956     09D9  00B6               	movwf	___flmul@grs
  5957     09DA                     l2915:
  5958     09DA  0841               	movf	___flmul@temp+1,w
  5959     09DB  00B0               	movwf	??___flmul
  5960     09DC  01B1               	clrf	??___flmul+1
  5961     09DD  01B2               	clrf	??___flmul+2
  5962     09DE  01B3               	clrf	??___flmul+3
  5963     09DF  0833               	movf	??___flmul+3,w
  5964     09E0  00BF               	movwf	___flmul@prod+3
  5965     09E1  0832               	movf	??___flmul+2,w
  5966     09E2  00BE               	movwf	___flmul@prod+2
  5967     09E3  0831               	movf	??___flmul+1,w
  5968     09E4  00BD               	movwf	___flmul@prod+1
  5969     09E5  0830               	movf	??___flmul,w
  5970     09E6  00BC               	movwf	___flmul@prod
  5971     09E7  0829               	movf	___flmul@b+1,w
  5972     09E8  00F2               	movwf	__Umul8_16@multiplicand
  5973     09E9  082D               	movf	___flmul@a+1,w
  5974     09EA  120A  118A  27D9  120A  158A  	fcall	__Umul8_16
  5975     09EF  0873               	movf	?__Umul8_16+1,w
  5976     09F0  1283               	bcf	3,5	;RP0=0, select bank0
  5977     09F1  1303               	bcf	3,6	;RP1=0, select bank0
  5978     09F2  00C1               	movwf	___flmul@temp+1
  5979     09F3  0872               	movf	?__Umul8_16,w
  5980     09F4  00C0               	movwf	___flmul@temp
  5981     09F5                     l2917:
  5982     09F5  0840               	movf	___flmul@temp,w
  5983     09F6  00B0               	movwf	??___flmul
  5984     09F7  01B1               	clrf	??___flmul+1
  5985     09F8  01B2               	clrf	??___flmul+2
  5986     09F9  01B3               	clrf	??___flmul+3
  5987     09FA  0830               	movf	??___flmul,w
  5988     09FB  07B6               	addwf	___flmul@grs,f
  5989     09FC  0831               	movf	??___flmul+1,w
  5990     09FD  1103               	clrz
  5991     09FE  1803               	skipnc
  5992     09FF  3E01               	addlw	1
  5993     0A00  1903               	skipnz
  5994     0A01  2A03               	goto	u4151
  5995     0A02  07B7               	addwf	___flmul@grs+1,f
  5996     0A03                     u4151:
  5997     0A03  0832               	movf	??___flmul+2,w
  5998     0A04  1103               	clrz
  5999     0A05  1803               	skipnc
  6000     0A06  3E01               	addlw	1
  6001     0A07  1903               	skipnz
  6002     0A08  2A0A               	goto	u4152
  6003     0A09  07B8               	addwf	___flmul@grs+2,f
  6004     0A0A                     u4152:
  6005     0A0A  0833               	movf	??___flmul+3,w
  6006     0A0B  1103               	clrz
  6007     0A0C  1803               	skipnc
  6008     0A0D  3E01               	addlw	1
  6009     0A0E  1903               	skipnz
  6010     0A0F  2A11               	goto	u4153
  6011     0A10  07B9               	addwf	___flmul@grs+3,f
  6012     0A11                     u4153:
  6013     0A11                     l2919:
  6014     0A11  0841               	movf	___flmul@temp+1,w
  6015     0A12  00B0               	movwf	??___flmul
  6016     0A13  01B1               	clrf	??___flmul+1
  6017     0A14  01B2               	clrf	??___flmul+2
  6018     0A15  01B3               	clrf	??___flmul+3
  6019     0A16  0830               	movf	??___flmul,w
  6020     0A17  07BC               	addwf	___flmul@prod,f
  6021     0A18  0831               	movf	??___flmul+1,w
  6022     0A19  1103               	clrz
  6023     0A1A  1803               	skipnc
  6024     0A1B  3E01               	addlw	1
  6025     0A1C  1903               	skipnz
  6026     0A1D  2A1F               	goto	u4161
  6027     0A1E  07BD               	addwf	___flmul@prod+1,f
  6028     0A1F                     u4161:
  6029     0A1F  0832               	movf	??___flmul+2,w
  6030     0A20  1103               	clrz
  6031     0A21  1803               	skipnc
  6032     0A22  3E01               	addlw	1
  6033     0A23  1903               	skipnz
  6034     0A24  2A26               	goto	u4162
  6035     0A25  07BE               	addwf	___flmul@prod+2,f
  6036     0A26                     u4162:
  6037     0A26  0833               	movf	??___flmul+3,w
  6038     0A27  1103               	clrz
  6039     0A28  1803               	skipnc
  6040     0A29  3E01               	addlw	1
  6041     0A2A  1903               	skipnz
  6042     0A2B  2A2D               	goto	u4163
  6043     0A2C  07BF               	addwf	___flmul@prod+3,f
  6044     0A2D                     u4163:
  6045     0A2D  082A               	movf	___flmul@b+2,w
  6046     0A2E  00F2               	movwf	__Umul8_16@multiplicand
  6047     0A2F  082C               	movf	___flmul@a,w
  6048     0A30  120A  118A  27D9  120A  158A  	fcall	__Umul8_16
  6049     0A35  0873               	movf	?__Umul8_16+1,w
  6050     0A36  1283               	bcf	3,5	;RP0=0, select bank0
  6051     0A37  1303               	bcf	3,6	;RP1=0, select bank0
  6052     0A38  00C1               	movwf	___flmul@temp+1
  6053     0A39  0872               	movf	?__Umul8_16,w
  6054     0A3A  00C0               	movwf	___flmul@temp
  6055     0A3B                     l2921:
  6056     0A3B  0840               	movf	___flmul@temp,w
  6057     0A3C  00B0               	movwf	??___flmul
  6058     0A3D  01B1               	clrf	??___flmul+1
  6059     0A3E  01B2               	clrf	??___flmul+2
  6060     0A3F  01B3               	clrf	??___flmul+3
  6061     0A40  0830               	movf	??___flmul,w
  6062     0A41  07B6               	addwf	___flmul@grs,f
  6063     0A42  0831               	movf	??___flmul+1,w
  6064     0A43  1103               	clrz
  6065     0A44  1803               	skipnc
  6066     0A45  3E01               	addlw	1
  6067     0A46  1903               	skipnz
  6068     0A47  2A49               	goto	u4171
  6069     0A48  07B7               	addwf	___flmul@grs+1,f
  6070     0A49                     u4171:
  6071     0A49  0832               	movf	??___flmul+2,w
  6072     0A4A  1103               	clrz
  6073     0A4B  1803               	skipnc
  6074     0A4C  3E01               	addlw	1
  6075     0A4D  1903               	skipnz
  6076     0A4E  2A50               	goto	u4172
  6077     0A4F  07B8               	addwf	___flmul@grs+2,f
  6078     0A50                     u4172:
  6079     0A50  0833               	movf	??___flmul+3,w
  6080     0A51  1103               	clrz
  6081     0A52  1803               	skipnc
  6082     0A53  3E01               	addlw	1
  6083     0A54  1903               	skipnz
  6084     0A55  2A57               	goto	u4173
  6085     0A56  07B9               	addwf	___flmul@grs+3,f
  6086     0A57                     u4173:
  6087     0A57                     l2923:
  6088     0A57  0841               	movf	___flmul@temp+1,w
  6089     0A58  00B0               	movwf	??___flmul
  6090     0A59  01B1               	clrf	??___flmul+1
  6091     0A5A  01B2               	clrf	??___flmul+2
  6092     0A5B  01B3               	clrf	??___flmul+3
  6093     0A5C  0830               	movf	??___flmul,w
  6094     0A5D  07BC               	addwf	___flmul@prod,f
  6095     0A5E  0831               	movf	??___flmul+1,w
  6096     0A5F  1103               	clrz
  6097     0A60  1803               	skipnc
  6098     0A61  3E01               	addlw	1
  6099     0A62  1903               	skipnz
  6100     0A63  2A65               	goto	u4181
  6101     0A64  07BD               	addwf	___flmul@prod+1,f
  6102     0A65                     u4181:
  6103     0A65  0832               	movf	??___flmul+2,w
  6104     0A66  1103               	clrz
  6105     0A67  1803               	skipnc
  6106     0A68  3E01               	addlw	1
  6107     0A69  1903               	skipnz
  6108     0A6A  2A6C               	goto	u4182
  6109     0A6B  07BE               	addwf	___flmul@prod+2,f
  6110     0A6C                     u4182:
  6111     0A6C  0833               	movf	??___flmul+3,w
  6112     0A6D  1103               	clrz
  6113     0A6E  1803               	skipnc
  6114     0A6F  3E01               	addlw	1
  6115     0A70  1903               	skipnz
  6116     0A71  2A73               	goto	u4183
  6117     0A72  07BF               	addwf	___flmul@prod+3,f
  6118     0A73                     u4183:
  6119     0A73                     l2925:
  6120     0A73  3008               	movlw	8
  6121     0A74  00B0               	movwf	??___flmul
  6122     0A75                     u4195:
  6123     0A75  1003               	clrc
  6124     0A76  0DB6               	rlf	___flmul@grs,f
  6125     0A77  0DB7               	rlf	___flmul@grs+1,f
  6126     0A78  0DB8               	rlf	___flmul@grs+2,f
  6127     0A79  0DB9               	rlf	___flmul@grs+3,f
  6128     0A7A  0BB0               	decfsz	??___flmul,f
  6129     0A7B  2A75               	goto	u4195
  6130     0A7C                     l2927:
  6131     0A7C  0829               	movf	___flmul@b+1,w
  6132     0A7D  00F2               	movwf	__Umul8_16@multiplicand
  6133     0A7E  082C               	movf	___flmul@a,w
  6134     0A7F  120A  118A  27D9  120A  158A  	fcall	__Umul8_16
  6135     0A84  0873               	movf	?__Umul8_16+1,w
  6136     0A85  1283               	bcf	3,5	;RP0=0, select bank0
  6137     0A86  1303               	bcf	3,6	;RP1=0, select bank0
  6138     0A87  00C1               	movwf	___flmul@temp+1
  6139     0A88  0872               	movf	?__Umul8_16,w
  6140     0A89  00C0               	movwf	___flmul@temp
  6141     0A8A                     l2929:
  6142     0A8A  0840               	movf	___flmul@temp,w
  6143     0A8B  00B0               	movwf	??___flmul
  6144     0A8C  0841               	movf	___flmul@temp+1,w
  6145     0A8D  00B1               	movwf	??___flmul+1
  6146     0A8E  01B2               	clrf	??___flmul+2
  6147     0A8F  01B3               	clrf	??___flmul+3
  6148     0A90  0830               	movf	??___flmul,w
  6149     0A91  07B6               	addwf	___flmul@grs,f
  6150     0A92  0831               	movf	??___flmul+1,w
  6151     0A93  1103               	clrz
  6152     0A94  1803               	skipnc
  6153     0A95  3E01               	addlw	1
  6154     0A96  1903               	skipnz
  6155     0A97  2A99               	goto	u4201
  6156     0A98  07B7               	addwf	___flmul@grs+1,f
  6157     0A99                     u4201:
  6158     0A99  0832               	movf	??___flmul+2,w
  6159     0A9A  1103               	clrz
  6160     0A9B  1803               	skipnc
  6161     0A9C  3E01               	addlw	1
  6162     0A9D  1903               	skipnz
  6163     0A9E  2AA0               	goto	u4202
  6164     0A9F  07B8               	addwf	___flmul@grs+2,f
  6165     0AA0                     u4202:
  6166     0AA0  0833               	movf	??___flmul+3,w
  6167     0AA1  1103               	clrz
  6168     0AA2  1803               	skipnc
  6169     0AA3  3E01               	addlw	1
  6170     0AA4  1903               	skipnz
  6171     0AA5  2AA7               	goto	u4203
  6172     0AA6  07B9               	addwf	___flmul@grs+3,f
  6173     0AA7                     u4203:
  6174     0AA7                     l2931:
  6175     0AA7  0828               	movf	___flmul@b,w
  6176     0AA8  00F2               	movwf	__Umul8_16@multiplicand
  6177     0AA9  082D               	movf	___flmul@a+1,w
  6178     0AAA  120A  118A  27D9  120A  158A  	fcall	__Umul8_16
  6179     0AAF  0873               	movf	?__Umul8_16+1,w
  6180     0AB0  1283               	bcf	3,5	;RP0=0, select bank0
  6181     0AB1  1303               	bcf	3,6	;RP1=0, select bank0
  6182     0AB2  00C1               	movwf	___flmul@temp+1
  6183     0AB3  0872               	movf	?__Umul8_16,w
  6184     0AB4  00C0               	movwf	___flmul@temp
  6185     0AB5                     l2933:
  6186     0AB5  0840               	movf	___flmul@temp,w
  6187     0AB6  00B0               	movwf	??___flmul
  6188     0AB7  0841               	movf	___flmul@temp+1,w
  6189     0AB8  00B1               	movwf	??___flmul+1
  6190     0AB9  01B2               	clrf	??___flmul+2
  6191     0ABA  01B3               	clrf	??___flmul+3
  6192     0ABB  0830               	movf	??___flmul,w
  6193     0ABC  07B6               	addwf	___flmul@grs,f
  6194     0ABD  0831               	movf	??___flmul+1,w
  6195     0ABE  1103               	clrz
  6196     0ABF  1803               	skipnc
  6197     0AC0  3E01               	addlw	1
  6198     0AC1  1903               	skipnz
  6199     0AC2  2AC4               	goto	u4211
  6200     0AC3  07B7               	addwf	___flmul@grs+1,f
  6201     0AC4                     u4211:
  6202     0AC4  0832               	movf	??___flmul+2,w
  6203     0AC5  1103               	clrz
  6204     0AC6  1803               	skipnc
  6205     0AC7  3E01               	addlw	1
  6206     0AC8  1903               	skipnz
  6207     0AC9  2ACB               	goto	u4212
  6208     0ACA  07B8               	addwf	___flmul@grs+2,f
  6209     0ACB                     u4212:
  6210     0ACB  0833               	movf	??___flmul+3,w
  6211     0ACC  1103               	clrz
  6212     0ACD  1803               	skipnc
  6213     0ACE  3E01               	addlw	1
  6214     0ACF  1903               	skipnz
  6215     0AD0  2AD2               	goto	u4213
  6216     0AD1  07B9               	addwf	___flmul@grs+3,f
  6217     0AD2                     u4213:
  6218     0AD2                     l2935:
  6219     0AD2  3008               	movlw	8
  6220     0AD3  00B0               	movwf	??___flmul
  6221     0AD4                     u4225:
  6222     0AD4  1003               	clrc
  6223     0AD5  0DB6               	rlf	___flmul@grs,f
  6224     0AD6  0DB7               	rlf	___flmul@grs+1,f
  6225     0AD7  0DB8               	rlf	___flmul@grs+2,f
  6226     0AD8  0DB9               	rlf	___flmul@grs+3,f
  6227     0AD9  0BB0               	decfsz	??___flmul,f
  6228     0ADA  2AD4               	goto	u4225
  6229     0ADB  0828               	movf	___flmul@b,w
  6230     0ADC  00F2               	movwf	__Umul8_16@multiplicand
  6231     0ADD  082C               	movf	___flmul@a,w
  6232     0ADE  120A  118A  27D9  120A  158A  	fcall	__Umul8_16
  6233     0AE3  0873               	movf	?__Umul8_16+1,w
  6234     0AE4  1283               	bcf	3,5	;RP0=0, select bank0
  6235     0AE5  1303               	bcf	3,6	;RP1=0, select bank0
  6236     0AE6  00C1               	movwf	___flmul@temp+1
  6237     0AE7  0872               	movf	?__Umul8_16,w
  6238     0AE8  00C0               	movwf	___flmul@temp
  6239     0AE9                     l2937:
  6240     0AE9  0840               	movf	___flmul@temp,w
  6241     0AEA  00B0               	movwf	??___flmul
  6242     0AEB  0841               	movf	___flmul@temp+1,w
  6243     0AEC  00B1               	movwf	??___flmul+1
  6244     0AED  01B2               	clrf	??___flmul+2
  6245     0AEE  01B3               	clrf	??___flmul+3
  6246     0AEF  0830               	movf	??___flmul,w
  6247     0AF0  07B6               	addwf	___flmul@grs,f
  6248     0AF1  0831               	movf	??___flmul+1,w
  6249     0AF2  1103               	clrz
  6250     0AF3  1803               	skipnc
  6251     0AF4  3E01               	addlw	1
  6252     0AF5  1903               	skipnz
  6253     0AF6  2AF8               	goto	u4231
  6254     0AF7  07B7               	addwf	___flmul@grs+1,f
  6255     0AF8                     u4231:
  6256     0AF8  0832               	movf	??___flmul+2,w
  6257     0AF9  1103               	clrz
  6258     0AFA  1803               	skipnc
  6259     0AFB  3E01               	addlw	1
  6260     0AFC  1903               	skipnz
  6261     0AFD  2AFF               	goto	u4232
  6262     0AFE  07B8               	addwf	___flmul@grs+2,f
  6263     0AFF                     u4232:
  6264     0AFF  0833               	movf	??___flmul+3,w
  6265     0B00  1103               	clrz
  6266     0B01  1803               	skipnc
  6267     0B02  3E01               	addlw	1
  6268     0B03  1903               	skipnz
  6269     0B04  2B06               	goto	u4233
  6270     0B05  07B9               	addwf	___flmul@grs+3,f
  6271     0B06                     u4233:
  6272     0B06                     l2939:
  6273     0B06  0829               	movf	___flmul@b+1,w
  6274     0B07  00F2               	movwf	__Umul8_16@multiplicand
  6275     0B08  082E               	movf	___flmul@a+2,w
  6276     0B09  120A  118A  27D9  120A  158A  	fcall	__Umul8_16
  6277     0B0E  0873               	movf	?__Umul8_16+1,w
  6278     0B0F  1283               	bcf	3,5	;RP0=0, select bank0
  6279     0B10  1303               	bcf	3,6	;RP1=0, select bank0
  6280     0B11  00C1               	movwf	___flmul@temp+1
  6281     0B12  0872               	movf	?__Umul8_16,w
  6282     0B13  00C0               	movwf	___flmul@temp
  6283     0B14  0840               	movf	___flmul@temp,w
  6284     0B15  00B0               	movwf	??___flmul
  6285     0B16  0841               	movf	___flmul@temp+1,w
  6286     0B17  00B1               	movwf	??___flmul+1
  6287     0B18  01B2               	clrf	??___flmul+2
  6288     0B19  01B3               	clrf	??___flmul+3
  6289     0B1A  0830               	movf	??___flmul,w
  6290     0B1B  07BC               	addwf	___flmul@prod,f
  6291     0B1C  0831               	movf	??___flmul+1,w
  6292     0B1D  1103               	clrz
  6293     0B1E  1803               	skipnc
  6294     0B1F  3E01               	addlw	1
  6295     0B20  1903               	skipnz
  6296     0B21  2B23               	goto	u4241
  6297     0B22  07BD               	addwf	___flmul@prod+1,f
  6298     0B23                     u4241:
  6299     0B23  0832               	movf	??___flmul+2,w
  6300     0B24  1103               	clrz
  6301     0B25  1803               	skipnc
  6302     0B26  3E01               	addlw	1
  6303     0B27  1903               	skipnz
  6304     0B28  2B2A               	goto	u4242
  6305     0B29  07BE               	addwf	___flmul@prod+2,f
  6306     0B2A                     u4242:
  6307     0B2A  0833               	movf	??___flmul+3,w
  6308     0B2B  1103               	clrz
  6309     0B2C  1803               	skipnc
  6310     0B2D  3E01               	addlw	1
  6311     0B2E  1903               	skipnz
  6312     0B2F  2B31               	goto	u4243
  6313     0B30  07BF               	addwf	___flmul@prod+3,f
  6314     0B31                     u4243:
  6315     0B31                     l2941:
  6316     0B31  082A               	movf	___flmul@b+2,w
  6317     0B32  00F2               	movwf	__Umul8_16@multiplicand
  6318     0B33  082D               	movf	___flmul@a+1,w
  6319     0B34  120A  118A  27D9  120A  158A  	fcall	__Umul8_16
  6320     0B39  0873               	movf	?__Umul8_16+1,w
  6321     0B3A  1283               	bcf	3,5	;RP0=0, select bank0
  6322     0B3B  1303               	bcf	3,6	;RP1=0, select bank0
  6323     0B3C  00C1               	movwf	___flmul@temp+1
  6324     0B3D  0872               	movf	?__Umul8_16,w
  6325     0B3E  00C0               	movwf	___flmul@temp
  6326     0B3F                     l2943:
  6327     0B3F  0840               	movf	___flmul@temp,w
  6328     0B40  00B0               	movwf	??___flmul
  6329     0B41  0841               	movf	___flmul@temp+1,w
  6330     0B42  00B1               	movwf	??___flmul+1
  6331     0B43  01B2               	clrf	??___flmul+2
  6332     0B44  01B3               	clrf	??___flmul+3
  6333     0B45  0830               	movf	??___flmul,w
  6334     0B46  07BC               	addwf	___flmul@prod,f
  6335     0B47  0831               	movf	??___flmul+1,w
  6336     0B48  1103               	clrz
  6337     0B49  1803               	skipnc
  6338     0B4A  3E01               	addlw	1
  6339     0B4B  1903               	skipnz
  6340     0B4C  2B4E               	goto	u4251
  6341     0B4D  07BD               	addwf	___flmul@prod+1,f
  6342     0B4E                     u4251:
  6343     0B4E  0832               	movf	??___flmul+2,w
  6344     0B4F  1103               	clrz
  6345     0B50  1803               	skipnc
  6346     0B51  3E01               	addlw	1
  6347     0B52  1903               	skipnz
  6348     0B53  2B55               	goto	u4252
  6349     0B54  07BE               	addwf	___flmul@prod+2,f
  6350     0B55                     u4252:
  6351     0B55  0833               	movf	??___flmul+3,w
  6352     0B56  1103               	clrz
  6353     0B57  1803               	skipnc
  6354     0B58  3E01               	addlw	1
  6355     0B59  1903               	skipnz
  6356     0B5A  2B5C               	goto	u4253
  6357     0B5B  07BF               	addwf	___flmul@prod+3,f
  6358     0B5C                     u4253:
  6359     0B5C  082A               	movf	___flmul@b+2,w
  6360     0B5D  00F2               	movwf	__Umul8_16@multiplicand
  6361     0B5E  082E               	movf	___flmul@a+2,w
  6362     0B5F  120A  118A  27D9  120A  158A  	fcall	__Umul8_16
  6363     0B64  0873               	movf	?__Umul8_16+1,w
  6364     0B65  1283               	bcf	3,5	;RP0=0, select bank0
  6365     0B66  1303               	bcf	3,6	;RP1=0, select bank0
  6366     0B67  00C1               	movwf	___flmul@temp+1
  6367     0B68  0872               	movf	?__Umul8_16,w
  6368     0B69  00C0               	movwf	___flmul@temp
  6369     0B6A                     l2945:
  6370     0B6A  0840               	movf	___flmul@temp,w
  6371     0B6B  00B0               	movwf	??___flmul
  6372     0B6C  0841               	movf	___flmul@temp+1,w
  6373     0B6D  00B1               	movwf	??___flmul+1
  6374     0B6E  01B2               	clrf	??___flmul+2
  6375     0B6F  01B3               	clrf	??___flmul+3
  6376     0B70  3008               	movlw	8
  6377     0B71                     u4265:
  6378     0B71  1003               	clrc
  6379     0B72  0DB0               	rlf	??___flmul,f
  6380     0B73  0DB1               	rlf	??___flmul+1,f
  6381     0B74  0DB2               	rlf	??___flmul+2,f
  6382     0B75  0DB3               	rlf	??___flmul+3,f
  6383     0B76                     u4260:
  6384     0B76  3EFF               	addlw	-1
  6385     0B77  1D03               	skipz
  6386     0B78  2B71               	goto	u4265
  6387     0B79  0830               	movf	??___flmul,w
  6388     0B7A  07BC               	addwf	___flmul@prod,f
  6389     0B7B  0831               	movf	??___flmul+1,w
  6390     0B7C  1103               	clrz
  6391     0B7D  1803               	skipnc
  6392     0B7E  3E01               	addlw	1
  6393     0B7F  1903               	skipnz
  6394     0B80  2B82               	goto	u4271
  6395     0B81  07BD               	addwf	___flmul@prod+1,f
  6396     0B82                     u4271:
  6397     0B82  0832               	movf	??___flmul+2,w
  6398     0B83  1103               	clrz
  6399     0B84  1803               	skipnc
  6400     0B85  3E01               	addlw	1
  6401     0B86  1903               	skipnz
  6402     0B87  2B89               	goto	u4272
  6403     0B88  07BE               	addwf	___flmul@prod+2,f
  6404     0B89                     u4272:
  6405     0B89  0833               	movf	??___flmul+3,w
  6406     0B8A  1103               	clrz
  6407     0B8B  1803               	skipnc
  6408     0B8C  3E01               	addlw	1
  6409     0B8D  1903               	skipnz
  6410     0B8E  2B90               	goto	u4273
  6411     0B8F  07BF               	addwf	___flmul@prod+3,f
  6412     0B90                     u4273:
  6413     0B90                     l2947:
  6414     0B90  0836               	movf	___flmul@grs,w
  6415     0B91  00B0               	movwf	??___flmul
  6416     0B92  0837               	movf	___flmul@grs+1,w
  6417     0B93  00B1               	movwf	??___flmul+1
  6418     0B94  0838               	movf	___flmul@grs+2,w
  6419     0B95  00B2               	movwf	??___flmul+2
  6420     0B96  0839               	movf	___flmul@grs+3,w
  6421     0B97  00B3               	movwf	??___flmul+3
  6422     0B98  3018               	movlw	24
  6423     0B99                     u4285:
  6424     0B99  1003               	clrc
  6425     0B9A  0CB3               	rrf	??___flmul+3,f
  6426     0B9B  0CB2               	rrf	??___flmul+2,f
  6427     0B9C  0CB1               	rrf	??___flmul+1,f
  6428     0B9D  0CB0               	rrf	??___flmul,f
  6429     0B9E                     u4280:
  6430     0B9E  3EFF               	addlw	-1
  6431     0B9F  1D03               	skipz
  6432     0BA0  2B99               	goto	u4285
  6433     0BA1  0830               	movf	??___flmul,w
  6434     0BA2  07BC               	addwf	___flmul@prod,f
  6435     0BA3  0831               	movf	??___flmul+1,w
  6436     0BA4  1103               	clrz
  6437     0BA5  1803               	skipnc
  6438     0BA6  3E01               	addlw	1
  6439     0BA7  1903               	skipnz
  6440     0BA8  2BAA               	goto	u4291
  6441     0BA9  07BD               	addwf	___flmul@prod+1,f
  6442     0BAA                     u4291:
  6443     0BAA  0832               	movf	??___flmul+2,w
  6444     0BAB  1103               	clrz
  6445     0BAC  1803               	skipnc
  6446     0BAD  3E01               	addlw	1
  6447     0BAE  1903               	skipnz
  6448     0BAF  2BB1               	goto	u4292
  6449     0BB0  07BE               	addwf	___flmul@prod+2,f
  6450     0BB1                     u4292:
  6451     0BB1  0833               	movf	??___flmul+3,w
  6452     0BB2  1103               	clrz
  6453     0BB3  1803               	skipnc
  6454     0BB4  3E01               	addlw	1
  6455     0BB5  1903               	skipnz
  6456     0BB6  2BB8               	goto	u4293
  6457     0BB7  07BF               	addwf	___flmul@prod+3,f
  6458     0BB8                     u4293:
  6459     0BB8                     l2949:
  6460     0BB8  3008               	movlw	8
  6461     0BB9  00B0               	movwf	??___flmul
  6462     0BBA                     u4305:
  6463     0BBA  1003               	clrc
  6464     0BBB  0DB6               	rlf	___flmul@grs,f
  6465     0BBC  0DB7               	rlf	___flmul@grs+1,f
  6466     0BBD  0DB8               	rlf	___flmul@grs+2,f
  6467     0BBE  0DB9               	rlf	___flmul@grs+3,f
  6468     0BBF  0BB0               	decfsz	??___flmul,f
  6469     0BC0  2BBA               	goto	u4305
  6470     0BC1                     l2951:
  6471     0BC1  083B               	movf	___flmul@bexp,w
  6472     0BC2  073A               	addwf	___flmul@aexp,w
  6473     0BC3  00B0               	movwf	??___flmul
  6474     0BC4  01B1               	clrf	??___flmul+1
  6475     0BC5  0DB1               	rlf	??___flmul+1,f
  6476     0BC6  0830               	movf	??___flmul,w
  6477     0BC7  3E82               	addlw	130
  6478     0BC8  00C0               	movwf	___flmul@temp
  6479     0BC9  0831               	movf	??___flmul+1,w
  6480     0BCA  1803               	skipnc
  6481     0BCB  3E01               	addlw	1
  6482     0BCC  3EFF               	addlw	255
  6483     0BCD  00C1               	movwf	___flmul@temp+1
  6484     0BCE  2BEC               	goto	l2963
  6485     0BCF                     l2953:
  6486     0BCF  3001               	movlw	1
  6487     0BD0  00B0               	movwf	??___flmul
  6488     0BD1                     u4315:
  6489     0BD1  1003               	clrc
  6490     0BD2  0DBC               	rlf	___flmul@prod,f
  6491     0BD3  0DBD               	rlf	___flmul@prod+1,f
  6492     0BD4  0DBE               	rlf	___flmul@prod+2,f
  6493     0BD5  0DBF               	rlf	___flmul@prod+3,f
  6494     0BD6  0BB0               	decfsz	??___flmul,f
  6495     0BD7  2BD1               	goto	u4315
  6496     0BD8                     l2955:
  6497     0BD8  1FB9               	btfss	___flmul@grs+3,7
  6498     0BD9  2BDB               	goto	u4321
  6499     0BDA  2BDC               	goto	u4320
  6500     0BDB                     u4321:
  6501     0BDB  2BDD               	goto	l2959
  6502     0BDC                     u4320:
  6503     0BDC                     l2957:
  6504     0BDC  143C               	bsf	___flmul@prod,0
  6505     0BDD                     l2959:
  6506     0BDD  3001               	movlw	1
  6507     0BDE  00B0               	movwf	??___flmul
  6508     0BDF                     u4335:
  6509     0BDF  1003               	clrc
  6510     0BE0  0DB6               	rlf	___flmul@grs,f
  6511     0BE1  0DB7               	rlf	___flmul@grs+1,f
  6512     0BE2  0DB8               	rlf	___flmul@grs+2,f
  6513     0BE3  0DB9               	rlf	___flmul@grs+3,f
  6514     0BE4  0BB0               	decfsz	??___flmul,f
  6515     0BE5  2BDF               	goto	u4335
  6516     0BE6                     l2961:
  6517     0BE6  30FF               	movlw	255
  6518     0BE7  07C0               	addwf	___flmul@temp,f
  6519     0BE8  1803               	skipnc
  6520     0BE9  0AC1               	incf	___flmul@temp+1,f
  6521     0BEA  30FF               	movlw	255
  6522     0BEB  07C1               	addwf	___flmul@temp+1,f
  6523     0BEC                     l2963:
  6524     0BEC  1FBE               	btfss	___flmul@prod+2,7
  6525     0BED  2BEF               	goto	u4341
  6526     0BEE  2BF0               	goto	u4340
  6527     0BEF                     u4341:
  6528     0BEF  2BCF               	goto	l2953
  6529     0BF0                     u4340:
  6530     0BF0                     l2965:
  6531     0BF0  01BA               	clrf	___flmul@aexp
  6532     0BF1                     l2967:
  6533     0BF1  1FB9               	btfss	___flmul@grs+3,7
  6534     0BF2  2BF4               	goto	u4351
  6535     0BF3  2BF5               	goto	u4350
  6536     0BF4                     u4351:
  6537     0BF4  2C11               	goto	l2975
  6538     0BF5                     u4350:
  6539     0BF5                     l2969:
  6540     0BF5  30FF               	movlw	255
  6541     0BF6  0536               	andwf	___flmul@grs,w
  6542     0BF7  00B0               	movwf	??___flmul
  6543     0BF8  30FF               	movlw	255
  6544     0BF9  0537               	andwf	___flmul@grs+1,w
  6545     0BFA  00B1               	movwf	??___flmul+1
  6546     0BFB  30FF               	movlw	255
  6547     0BFC  0538               	andwf	___flmul@grs+2,w
  6548     0BFD  00B2               	movwf	??___flmul+2
  6549     0BFE  307F               	movlw	127
  6550     0BFF  0539               	andwf	___flmul@grs+3,w
  6551     0C00  00B3               	movwf	??___flmul+3
  6552     0C01  0833               	movf	??___flmul+3,w
  6553     0C02  0432               	iorwf	??___flmul+2,w
  6554     0C03  0431               	iorwf	??___flmul+1,w
  6555     0C04  0430               	iorwf	??___flmul,w
  6556     0C05  1903               	skipnz
  6557     0C06  2C08               	goto	u4361
  6558     0C07  2C09               	goto	u4360
  6559     0C08                     u4361:
  6560     0C08  2C0C               	goto	l857
  6561     0C09                     u4360:
  6562     0C09                     l2971:
  6563     0C09  01BA               	clrf	___flmul@aexp
  6564     0C0A  0ABA               	incf	___flmul@aexp,f
  6565     0C0B  2C11               	goto	l2975
  6566     0C0C                     l857:
  6567     0C0C  1C3C               	btfss	___flmul@prod,0
  6568     0C0D  2C0F               	goto	u4371
  6569     0C0E  2C10               	goto	u4370
  6570     0C0F                     u4371:
  6571     0C0F  2C11               	goto	l2975
  6572     0C10                     u4370:
  6573     0C10  2C09               	goto	l2971
  6574     0C11                     l2975:
  6575     0C11  083A               	movf	___flmul@aexp,w
  6576     0C12  1903               	btfsc	3,2
  6577     0C13  2C15               	goto	u4381
  6578     0C14  2C16               	goto	u4380
  6579     0C15                     u4381:
  6580     0C15  2C47               	goto	l2985
  6581     0C16                     u4380:
  6582     0C16                     l2977:
  6583     0C16  3001               	movlw	1
  6584     0C17  07BC               	addwf	___flmul@prod,f
  6585     0C18  3000               	movlw	0
  6586     0C19  1803               	skipnc
  6587     0C1A  3001               	movlw	1
  6588     0C1B  07BD               	addwf	___flmul@prod+1,f
  6589     0C1C  3000               	movlw	0
  6590     0C1D  1803               	skipnc
  6591     0C1E  3001               	movlw	1
  6592     0C1F  07BE               	addwf	___flmul@prod+2,f
  6593     0C20  3000               	movlw	0
  6594     0C21  1803               	skipnc
  6595     0C22  3001               	movlw	1
  6596     0C23  07BF               	addwf	___flmul@prod+3,f
  6597     0C24                     l2979:
  6598     0C24  1C3F               	btfss	___flmul@prod+3,0
  6599     0C25  2C27               	goto	u4391
  6600     0C26  2C28               	goto	u4390
  6601     0C27                     u4391:
  6602     0C27  2C47               	goto	l2985
  6603     0C28                     u4390:
  6604     0C28                     l2981:
  6605     0C28  083C               	movf	___flmul@prod,w
  6606     0C29  00B0               	movwf	??___flmul
  6607     0C2A  083D               	movf	___flmul@prod+1,w
  6608     0C2B  00B1               	movwf	??___flmul+1
  6609     0C2C  083E               	movf	___flmul@prod+2,w
  6610     0C2D  00B2               	movwf	??___flmul+2
  6611     0C2E  083F               	movf	___flmul@prod+3,w
  6612     0C2F  00B3               	movwf	??___flmul+3
  6613     0C30  3001               	movlw	1
  6614     0C31  00B4               	movwf	??___flmul+4
  6615     0C32                     u4405:
  6616     0C32  0D33               	rlf	??___flmul+3,w
  6617     0C33  0CB3               	rrf	??___flmul+3,f
  6618     0C34  0CB2               	rrf	??___flmul+2,f
  6619     0C35  0CB1               	rrf	??___flmul+1,f
  6620     0C36  0CB0               	rrf	??___flmul,f
  6621     0C37                     u4400:
  6622     0C37  0BB4               	decfsz	??___flmul+4,f
  6623     0C38  2C32               	goto	u4405
  6624     0C39  0833               	movf	??___flmul+3,w
  6625     0C3A  00BF               	movwf	___flmul@prod+3
  6626     0C3B  0832               	movf	??___flmul+2,w
  6627     0C3C  00BE               	movwf	___flmul@prod+2
  6628     0C3D  0831               	movf	??___flmul+1,w
  6629     0C3E  00BD               	movwf	___flmul@prod+1
  6630     0C3F  0830               	movf	??___flmul,w
  6631     0C40  00BC               	movwf	___flmul@prod
  6632     0C41                     l2983:
  6633     0C41  3001               	movlw	1
  6634     0C42  07C0               	addwf	___flmul@temp,f
  6635     0C43  1803               	skipnc
  6636     0C44  0AC1               	incf	___flmul@temp+1,f
  6637     0C45  3000               	movlw	0
  6638     0C46  07C1               	addwf	___flmul@temp+1,f
  6639     0C47                     l2985:
  6640     0C47  0841               	movf	___flmul@temp+1,w
  6641     0C48  3A80               	xorlw	128
  6642     0C49  00FF               	movwf	btemp+1
  6643     0C4A  3080               	movlw	128
  6644     0C4B  027F               	subwf	btemp+1,w
  6645     0C4C  1D03               	skipz
  6646     0C4D  2C50               	goto	u4415
  6647     0C4E  30FF               	movlw	255
  6648     0C4F  0240               	subwf	___flmul@temp,w
  6649     0C50                     u4415:
  6650     0C50  1C03               	skipc
  6651     0C51  2C53               	goto	u4411
  6652     0C52  2C54               	goto	u4410
  6653     0C53                     u4411:
  6654     0C53  2C5F               	goto	l2989
  6655     0C54                     u4410:
  6656     0C54                     l2987:
  6657     0C54  307F               	movlw	127
  6658     0C55  1283               	bcf	3,5	;RP0=0, select bank0
  6659     0C56  1303               	bcf	3,6	;RP1=0, select bank0
  6660     0C57  00BF               	movwf	___flmul@prod+3
  6661     0C58  3080               	movlw	128
  6662     0C59  00BE               	movwf	___flmul@prod+2
  6663     0C5A  3000               	movlw	0
  6664     0C5B  00BD               	movwf	___flmul@prod+1
  6665     0C5C  3000               	movlw	0
  6666     0C5D  00BC               	movwf	___flmul@prod
  6667     0C5E  2C90               	goto	l863
  6668     0C5F                     l2989:
  6669     0C5F  1283               	bcf	3,5	;RP0=0, select bank0
  6670     0C60  1303               	bcf	3,6	;RP1=0, select bank0
  6671     0C61  0841               	movf	___flmul@temp+1,w
  6672     0C62  3A80               	xorlw	128
  6673     0C63  00FF               	movwf	btemp+1
  6674     0C64  3080               	movlw	128
  6675     0C65  027F               	subwf	btemp+1,w
  6676     0C66  1D03               	skipz
  6677     0C67  2C6A               	goto	u4425
  6678     0C68  3001               	movlw	1
  6679     0C69  0240               	subwf	___flmul@temp,w
  6680     0C6A                     u4425:
  6681     0C6A  1803               	skipnc
  6682     0C6B  2C6D               	goto	u4421
  6683     0C6C  2C6E               	goto	u4420
  6684     0C6D                     u4421:
  6685     0C6D  2C7A               	goto	l2995
  6686     0C6E                     u4420:
  6687     0C6E                     l2991:
  6688     0C6E  3000               	movlw	0
  6689     0C6F  1283               	bcf	3,5	;RP0=0, select bank0
  6690     0C70  1303               	bcf	3,6	;RP1=0, select bank0
  6691     0C71  00BF               	movwf	___flmul@prod+3
  6692     0C72  3000               	movlw	0
  6693     0C73  00BE               	movwf	___flmul@prod+2
  6694     0C74  3000               	movlw	0
  6695     0C75  00BD               	movwf	___flmul@prod+1
  6696     0C76  3000               	movlw	0
  6697     0C77  00BC               	movwf	___flmul@prod
  6698     0C78                     l2993:
  6699     0C78  01B5               	clrf	___flmul@sign
  6700     0C79  2C90               	goto	l863
  6701     0C7A                     l2995:
  6702     0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  6703     0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  6704     0C7C  0840               	movf	___flmul@temp,w
  6705     0C7D  00BB               	movwf	___flmul@bexp
  6706     0C7E  30FF               	movlw	255
  6707     0C7F  05BC               	andwf	___flmul@prod,f
  6708     0C80  30FF               	movlw	255
  6709     0C81  05BD               	andwf	___flmul@prod+1,f
  6710     0C82  307F               	movlw	127
  6711     0C83  05BE               	andwf	___flmul@prod+2,f
  6712     0C84  3000               	movlw	0
  6713     0C85  05BF               	andwf	___flmul@prod+3,f
  6714     0C86                     l2997:
  6715     0C86  1C3B               	btfss	___flmul@bexp,0
  6716     0C87  2C89               	goto	u4431
  6717     0C88  2C8A               	goto	u4430
  6718     0C89                     u4431:
  6719     0C89  2C8B               	goto	l3001
  6720     0C8A                     u4430:
  6721     0C8A                     l2999:
  6722     0C8A  17BE               	bsf	___flmul@prod+2,7
  6723     0C8B                     l3001:
  6724     0C8B  083B               	movf	___flmul@bexp,w
  6725     0C8C  00B0               	movwf	??___flmul
  6726     0C8D  1003               	clrc
  6727     0C8E  0C30               	rrf	??___flmul,w
  6728     0C8F  00BF               	movwf	___flmul@prod+3
  6729     0C90                     l863:
  6730     0C90  0835               	movf	___flmul@sign,w
  6731     0C91  00B0               	movwf	??___flmul
  6732     0C92  0830               	movf	??___flmul,w
  6733     0C93  04BF               	iorwf	___flmul@prod+3,f
  6734     0C94                     l3003:
  6735     0C94  083F               	movf	___flmul@prod+3,w
  6736     0C95  00AB               	movwf	?___flmul+3
  6737     0C96  083E               	movf	___flmul@prod+2,w
  6738     0C97  00AA               	movwf	?___flmul+2
  6739     0C98  083D               	movf	___flmul@prod+1,w
  6740     0C99  00A9               	movwf	?___flmul+1
  6741     0C9A  083C               	movf	___flmul@prod,w
  6742     0C9B  00A8               	movwf	?___flmul
  6743     0C9C                     l851:
  6744     0C9C  0008               	return
  6745     0C9D                     __end_of___flmul:
  6746                           
  6747                           	psect	text10
  6748     07D9                     __ptext10:	
  6749 ;; *************** function __Umul8_16 *****************
  6750 ;; Defined at:
  6751 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8_16.c"
  6752 ;; Parameters:    Size  Location     Type
  6753 ;;  multiplier      1    wreg     unsigned char 
  6754 ;;  multiplicand    1    2[COMMON] unsigned char 
  6755 ;; Auto vars:     Size  Location     Type
  6756 ;;  multiplier      1   10[COMMON] unsigned char 
  6757 ;;  word_mpld       2    8[COMMON] unsigned int 
  6758 ;;  product         2    6[COMMON] unsigned int 
  6759 ;; Return value:  Size  Location     Type
  6760 ;;                  2    2[COMMON] unsigned int 
  6761 ;; Registers used:
  6762 ;;		wreg, status,2, status,0
  6763 ;; Tracked objects:
  6764 ;;		On entry : 0/0
  6765 ;;		On exit  : 0/0
  6766 ;;		Unchanged: 0/0
  6767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6768 ;;      Params:         2       0       0       0       0
  6769 ;;      Locals:         5       0       0       0       0
  6770 ;;      Temps:          2       0       0       0       0
  6771 ;;      Totals:         9       0       0       0       0
  6772 ;;Total ram usage:        9 bytes
  6773 ;; Hardware stack levels used: 1
  6774 ;; Hardware stack levels required when called: 2
  6775 ;; This function calls:
  6776 ;;		Nothing
  6777 ;; This function is called by:
  6778 ;;		___flmul
  6779 ;; This function uses a non-reentrant model
  6780 ;;
  6781                           
  6782     07D9                     __Umul8_16:	
  6783                           ;psect for function __Umul8_16
  6784                           
  6785                           
  6786                           ;incstack = 0
  6787                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6788                           ;__Umul8_16@multiplier stored from wreg
  6789     07D9  00FA               	movwf	__Umul8_16@multiplier
  6790     07DA                     l2511:
  6791     07DA  01F6               	clrf	__Umul8_16@product
  6792     07DB  01F7               	clrf	__Umul8_16@product+1
  6793     07DC                     l2513:
  6794     07DC  0872               	movf	__Umul8_16@multiplicand,w
  6795     07DD  00F4               	movwf	??__Umul8_16
  6796     07DE  01F5               	clrf	??__Umul8_16+1
  6797     07DF  0874               	movf	??__Umul8_16,w
  6798     07E0  00F8               	movwf	__Umul8_16@word_mpld
  6799     07E1  0875               	movf	??__Umul8_16+1,w
  6800     07E2  00F9               	movwf	__Umul8_16@word_mpld+1
  6801     07E3                     l2515:
  6802     07E3  1C7A               	btfss	__Umul8_16@multiplier,0
  6803     07E4  2FE6               	goto	u3181
  6804     07E5  2FE7               	goto	u3180
  6805     07E6                     u3181:
  6806     07E6  2FED               	goto	l870
  6807     07E7                     u3180:
  6808     07E7                     l2517:
  6809     07E7  0878               	movf	__Umul8_16@word_mpld,w
  6810     07E8  07F6               	addwf	__Umul8_16@product,f
  6811     07E9  1803               	skipnc
  6812     07EA  0AF7               	incf	__Umul8_16@product+1,f
  6813     07EB  0879               	movf	__Umul8_16@word_mpld+1,w
  6814     07EC  07F7               	addwf	__Umul8_16@product+1,f
  6815     07ED                     l870:
  6816     07ED  3001               	movlw	1
  6817     07EE                     u3195:
  6818     07EE  1003               	clrc
  6819     07EF  0DF8               	rlf	__Umul8_16@word_mpld,f
  6820     07F0  0DF9               	rlf	__Umul8_16@word_mpld+1,f
  6821     07F1  3EFF               	addlw	-1
  6822     07F2  1D03               	skipz
  6823     07F3  2FEE               	goto	u3195
  6824     07F4  1003               	clrc
  6825     07F5  0CFA               	rrf	__Umul8_16@multiplier,f
  6826     07F6                     l2519:
  6827     07F6  087A               	movf	__Umul8_16@multiplier,w
  6828     07F7  1D03               	btfss	3,2
  6829     07F8  2FFA               	goto	u3201
  6830     07F9  2FFB               	goto	u3200
  6831     07FA                     u3201:
  6832     07FA  2FE3               	goto	l2515
  6833     07FB                     u3200:
  6834     07FB                     l2521:
  6835     07FB  0877               	movf	__Umul8_16@product+1,w
  6836     07FC  00F3               	movwf	?__Umul8_16+1
  6837     07FD  0876               	movf	__Umul8_16@product,w
  6838     07FE  00F2               	movwf	?__Umul8_16
  6839     07FF                     l872:
  6840     07FF  0008               	return
  6841     0800                     __end_of__Umul8_16:
  6842                           
  6843                           	psect	text11
  6844     107B                     __ptext11:	
  6845 ;; *************** function __tdiv_to_l_ *****************
  6846 ;; Defined at:
  6847 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftdivl.c"
  6848 ;; Parameters:    Size  Location     Type
  6849 ;;  f1              4    2[COMMON] float 
  6850 ;;  f2              4    6[COMMON] float 
  6851 ;; Auto vars:     Size  Location     Type
  6852 ;;  quot            4    3[BANK0 ] unsigned long 
  6853 ;;  exp1            1    8[BANK0 ] unsigned char 
  6854 ;;  cntr            1    7[BANK0 ] unsigned char 
  6855 ;; Return value:  Size  Location     Type
  6856 ;;                  4    2[COMMON] unsigned long 
  6857 ;; Registers used:
  6858 ;;		wreg, status,2, status,0
  6859 ;; Tracked objects:
  6860 ;;		On entry : 0/0
  6861 ;;		On exit  : 0/0
  6862 ;;		Unchanged: 0/0
  6863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6864 ;;      Params:         8       0       0       0       0
  6865 ;;      Locals:         0       6       0       0       0
  6866 ;;      Temps:          0       3       0       0       0
  6867 ;;      Totals:         8       9       0       0       0
  6868 ;;Total ram usage:       17 bytes
  6869 ;; Hardware stack levels used: 1
  6870 ;; Hardware stack levels required when called: 2
  6871 ;; This function calls:
  6872 ;;		Nothing
  6873 ;; This function is called by:
  6874 ;;		_sprintf
  6875 ;; This function uses a non-reentrant model
  6876 ;;
  6877                           
  6878     107B                     __tdiv_to_l_:	
  6879                           ;psect for function __tdiv_to_l_
  6880                           
  6881     107B                     l3097:	
  6882                           ;incstack = 0
  6883                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6884                           
  6885     107B  0872               	movf	__tdiv_to_l_@f1,w
  6886     107C  1283               	bcf	3,5	;RP0=0, select bank0
  6887     107D  1303               	bcf	3,6	;RP1=0, select bank0
  6888     107E  00A0               	movwf	??__tdiv_to_l_
  6889     107F  0873               	movf	__tdiv_to_l_@f1+1,w
  6890     1080  00A1               	movwf	??__tdiv_to_l_+1
  6891     1081  0874               	movf	__tdiv_to_l_@f1+2,w
  6892     1082  00A2               	movwf	??__tdiv_to_l_+2
  6893     1083  1003               	clrc
  6894     1084  0D21               	rlf	??__tdiv_to_l_+1,w
  6895     1085  0D22               	rlf	??__tdiv_to_l_+2,w
  6896     1086  00A8               	movwf	__tdiv_to_l_@exp1
  6897     1087  0828               	movf	__tdiv_to_l_@exp1,w
  6898     1088  1D03               	btfss	3,2
  6899     1089  288B               	goto	u4711
  6900     108A  288C               	goto	u4710
  6901     108B                     u4711:
  6902     108B  2895               	goto	l3103
  6903     108C                     u4710:
  6904     108C                     l3099:
  6905     108C  3000               	movlw	0
  6906     108D  00F5               	movwf	?__tdiv_to_l_+3
  6907     108E  3000               	movlw	0
  6908     108F  00F4               	movwf	?__tdiv_to_l_+2
  6909     1090  3000               	movlw	0
  6910     1091  00F3               	movwf	?__tdiv_to_l_+1
  6911     1092  3000               	movlw	0
  6912     1093  00F2               	movwf	?__tdiv_to_l_
  6913     1094  2931               	goto	l645
  6914     1095                     l3103:
  6915     1095  0876               	movf	__tdiv_to_l_@f2,w
  6916     1096  00A0               	movwf	??__tdiv_to_l_
  6917     1097  0877               	movf	__tdiv_to_l_@f2+1,w
  6918     1098  00A1               	movwf	??__tdiv_to_l_+1
  6919     1099  0878               	movf	__tdiv_to_l_@f2+2,w
  6920     109A  00A2               	movwf	??__tdiv_to_l_+2
  6921     109B  1003               	clrc
  6922     109C  0D21               	rlf	??__tdiv_to_l_+1,w
  6923     109D  0D22               	rlf	??__tdiv_to_l_+2,w
  6924     109E  00A7               	movwf	__tdiv_to_l_@cntr
  6925     109F  0827               	movf	__tdiv_to_l_@cntr,w
  6926     10A0  1D03               	btfss	3,2
  6927     10A1  28A3               	goto	u4721
  6928     10A2  28A4               	goto	u4720
  6929     10A3                     u4721:
  6930     10A3  28A5               	goto	l646
  6931     10A4                     u4720:
  6932     10A4  288C               	goto	l3099
  6933     10A5                     l646:
  6934     10A5  17F3               	bsf	__tdiv_to_l_@f1+1,7
  6935     10A6                     l3109:
  6936     10A6  30FF               	movlw	255
  6937     10A7  05F2               	andwf	__tdiv_to_l_@f1,f
  6938     10A8  30FF               	movlw	255
  6939     10A9  05F3               	andwf	__tdiv_to_l_@f1+1,f
  6940     10AA  3000               	movlw	0
  6941     10AB  05F4               	andwf	__tdiv_to_l_@f1+2,f
  6942     10AC                     l3111:
  6943     10AC  17F7               	bsf	__tdiv_to_l_@f2+1,7
  6944     10AD  30FF               	movlw	255
  6945     10AE  05F6               	andwf	__tdiv_to_l_@f2,f
  6946     10AF  30FF               	movlw	255
  6947     10B0  05F7               	andwf	__tdiv_to_l_@f2+1,f
  6948     10B1  3000               	movlw	0
  6949     10B2  05F8               	andwf	__tdiv_to_l_@f2+2,f
  6950     10B3  3000               	movlw	0
  6951     10B4  00A6               	movwf	__tdiv_to_l_@quot+3
  6952     10B5  3000               	movlw	0
  6953     10B6  00A5               	movwf	__tdiv_to_l_@quot+2
  6954     10B7  3000               	movlw	0
  6955     10B8  00A4               	movwf	__tdiv_to_l_@quot+1
  6956     10B9  3000               	movlw	0
  6957     10BA  00A3               	movwf	__tdiv_to_l_@quot
  6958     10BB                     l3113:
  6959     10BB  307F               	movlw	127
  6960     10BC  02A8               	subwf	__tdiv_to_l_@exp1,f
  6961     10BD                     l3115:
  6962     10BD  3098               	movlw	152
  6963     10BE  0727               	addwf	__tdiv_to_l_@cntr,w
  6964     10BF  00A0               	movwf	??__tdiv_to_l_
  6965     10C0  0820               	movf	??__tdiv_to_l_,w
  6966     10C1  02A8               	subwf	__tdiv_to_l_@exp1,f
  6967     10C2  3018               	movlw	24
  6968     10C3  00A7               	movwf	__tdiv_to_l_@cntr
  6969     10C4                     l3117:
  6970     10C4  3001               	movlw	1
  6971     10C5  00A0               	movwf	??__tdiv_to_l_
  6972     10C6                     u4735:
  6973     10C6  1003               	clrc
  6974     10C7  0DA3               	rlf	__tdiv_to_l_@quot,f
  6975     10C8  0DA4               	rlf	__tdiv_to_l_@quot+1,f
  6976     10C9  0DA5               	rlf	__tdiv_to_l_@quot+2,f
  6977     10CA  0DA6               	rlf	__tdiv_to_l_@quot+3,f
  6978     10CB  0BA0               	decfsz	??__tdiv_to_l_,f
  6979     10CC  28C6               	goto	u4735
  6980     10CD                     l3119:
  6981     10CD  0878               	movf	__tdiv_to_l_@f2+2,w
  6982     10CE  0274               	subwf	__tdiv_to_l_@f1+2,w
  6983     10CF  1D03               	skipz
  6984     10D0  28D7               	goto	u4745
  6985     10D1  0877               	movf	__tdiv_to_l_@f2+1,w
  6986     10D2  0273               	subwf	__tdiv_to_l_@f1+1,w
  6987     10D3  1D03               	skipz
  6988     10D4  28D7               	goto	u4745
  6989     10D5  0876               	movf	__tdiv_to_l_@f2,w
  6990     10D6  0272               	subwf	__tdiv_to_l_@f1,w
  6991     10D7                     u4745:
  6992     10D7  1C03               	skipc
  6993     10D8  28DA               	goto	u4741
  6994     10D9  28DB               	goto	u4740
  6995     10DA                     u4741:
  6996     10DA  28E6               	goto	l3125
  6997     10DB                     u4740:
  6998     10DB                     l3121:
  6999     10DB  0876               	movf	__tdiv_to_l_@f2,w
  7000     10DC  02F2               	subwf	__tdiv_to_l_@f1,f
  7001     10DD  0877               	movf	__tdiv_to_l_@f2+1,w
  7002     10DE  1C03               	skipc
  7003     10DF  0F77               	incfsz	__tdiv_to_l_@f2+1,w
  7004     10E0  02F3               	subwf	__tdiv_to_l_@f1+1,f
  7005     10E1  0878               	movf	__tdiv_to_l_@f2+2,w
  7006     10E2  1C03               	skipc
  7007     10E3  0A78               	incf	__tdiv_to_l_@f2+2,w
  7008     10E4  02F4               	subwf	__tdiv_to_l_@f1+2,f
  7009     10E5                     l3123:
  7010     10E5  1423               	bsf	__tdiv_to_l_@quot,0
  7011     10E6                     l3125:
  7012     10E6  3001               	movlw	1
  7013     10E7                     u4755:
  7014     10E7  1003               	clrc
  7015     10E8  0DF2               	rlf	__tdiv_to_l_@f1,f
  7016     10E9  0DF3               	rlf	__tdiv_to_l_@f1+1,f
  7017     10EA  0DF4               	rlf	__tdiv_to_l_@f1+2,f
  7018     10EB  3EFF               	addlw	-1
  7019     10EC  1D03               	skipz
  7020     10ED  28E7               	goto	u4755
  7021     10EE                     l3127:
  7022     10EE  3001               	movlw	1
  7023     10EF  02A7               	subwf	__tdiv_to_l_@cntr,f
  7024     10F0  1D03               	btfss	3,2
  7025     10F1  28F3               	goto	u4761
  7026     10F2  28F4               	goto	u4760
  7027     10F3                     u4761:
  7028     10F3  28C4               	goto	l3117
  7029     10F4                     u4760:
  7030     10F4                     l649:
  7031     10F4  1FA8               	btfss	__tdiv_to_l_@exp1,7
  7032     10F5  28F7               	goto	u4771
  7033     10F6  28F8               	goto	u4770
  7034     10F7                     u4771:
  7035     10F7  2912               	goto	l3137
  7036     10F8                     u4770:
  7037     10F8                     l3129:
  7038     10F8  0828               	movf	__tdiv_to_l_@exp1,w
  7039     10F9  3A80               	xorlw	128
  7040     10FA  3E97               	addlw	151
  7041     10FB  1803               	skipnc
  7042     10FC  28FE               	goto	u4781
  7043     10FD  28FF               	goto	u4780
  7044     10FE                     u4781:
  7045     10FE  2900               	goto	l3135
  7046     10FF                     u4780:
  7047     10FF  288C               	goto	l3099
  7048     1100                     l3135:
  7049     1100  3001               	movlw	1
  7050     1101                     u4795:
  7051     1101  1003               	clrc
  7052     1102  0CA6               	rrf	__tdiv_to_l_@quot+3,f
  7053     1103  0CA5               	rrf	__tdiv_to_l_@quot+2,f
  7054     1104  0CA4               	rrf	__tdiv_to_l_@quot+1,f
  7055     1105  0CA3               	rrf	__tdiv_to_l_@quot,f
  7056     1106  3EFF               	addlw	-1
  7057     1107  1D03               	skipz
  7058     1108  2901               	goto	u4795
  7059     1109  3001               	movlw	1
  7060     110A  00A0               	movwf	??__tdiv_to_l_
  7061     110B  0820               	movf	??__tdiv_to_l_,w
  7062     110C  07A8               	addwf	__tdiv_to_l_@exp1,f
  7063     110D  1D03               	btfss	3,2
  7064     110E  2910               	goto	u4801
  7065     110F  2911               	goto	u4800
  7066     1110                     u4801:
  7067     1110  2900               	goto	l3135
  7068     1111                     u4800:
  7069     1111  2929               	goto	l3145
  7070     1112                     l3137:
  7071     1112  3018               	movlw	24
  7072     1113  0228               	subwf	__tdiv_to_l_@exp1,w
  7073     1114  1C03               	skipc
  7074     1115  2917               	goto	u4811
  7075     1116  2918               	goto	u4810
  7076     1117                     u4811:
  7077     1117  2924               	goto	l656
  7078     1118                     u4810:
  7079     1118  288C               	goto	l3099
  7080     1119                     l3143:
  7081     1119  3001               	movlw	1
  7082     111A  00A0               	movwf	??__tdiv_to_l_
  7083     111B                     u4825:
  7084     111B  1003               	clrc
  7085     111C  0DA3               	rlf	__tdiv_to_l_@quot,f
  7086     111D  0DA4               	rlf	__tdiv_to_l_@quot+1,f
  7087     111E  0DA5               	rlf	__tdiv_to_l_@quot+2,f
  7088     111F  0DA6               	rlf	__tdiv_to_l_@quot+3,f
  7089     1120  0BA0               	decfsz	??__tdiv_to_l_,f
  7090     1121  291B               	goto	u4825
  7091     1122  3001               	movlw	1
  7092     1123  02A8               	subwf	__tdiv_to_l_@exp1,f
  7093     1124                     l656:
  7094     1124  0828               	movf	__tdiv_to_l_@exp1,w
  7095     1125  1D03               	btfss	3,2
  7096     1126  2928               	goto	u4831
  7097     1127  2929               	goto	u4830
  7098     1128                     u4831:
  7099     1128  2919               	goto	l3143
  7100     1129                     u4830:
  7101     1129                     l3145:
  7102     1129  0826               	movf	__tdiv_to_l_@quot+3,w
  7103     112A  00F5               	movwf	?__tdiv_to_l_+3
  7104     112B  0825               	movf	__tdiv_to_l_@quot+2,w
  7105     112C  00F4               	movwf	?__tdiv_to_l_+2
  7106     112D  0824               	movf	__tdiv_to_l_@quot+1,w
  7107     112E  00F3               	movwf	?__tdiv_to_l_+1
  7108     112F  0823               	movf	__tdiv_to_l_@quot,w
  7109     1130  00F2               	movwf	?__tdiv_to_l_
  7110     1131                     l645:
  7111     1131  0008               	return
  7112     1132                     __end_of__tdiv_to_l_:
  7113                           
  7114                           	psect	text12
  7115     08A0                     __ptext12:	
  7116 ;; *************** function __div_to_l_ *****************
  7117 ;; Defined at:
  7118 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fldivl.c"
  7119 ;; Parameters:    Size  Location     Type
  7120 ;;  f1              4    2[COMMON] unsigned long 
  7121 ;;  f2              4    6[COMMON] unsigned long 
  7122 ;; Auto vars:     Size  Location     Type
  7123 ;;  quot            4    0[BANK0 ] unsigned long 
  7124 ;;  exp1            1    5[BANK0 ] unsigned char 
  7125 ;;  cntr            1    4[BANK0 ] unsigned char 
  7126 ;; Return value:  Size  Location     Type
  7127 ;;                  4    2[COMMON] unsigned long 
  7128 ;; Registers used:
  7129 ;;		wreg, status,2, status,0
  7130 ;; Tracked objects:
  7131 ;;		On entry : 0/0
  7132 ;;		On exit  : 0/0
  7133 ;;		Unchanged: 0/0
  7134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7135 ;;      Params:         8       0       0       0       0
  7136 ;;      Locals:         0       6       0       0       0
  7137 ;;      Temps:          1       0       0       0       0
  7138 ;;      Totals:         9       6       0       0       0
  7139 ;;Total ram usage:       15 bytes
  7140 ;; Hardware stack levels used: 1
  7141 ;; Hardware stack levels required when called: 2
  7142 ;; This function calls:
  7143 ;;		Nothing
  7144 ;; This function is called by:
  7145 ;;		_sprintf
  7146 ;; This function uses a non-reentrant model
  7147 ;;
  7148                           
  7149     08A0                     __div_to_l_:	
  7150                           ;psect for function __div_to_l_
  7151                           
  7152     08A0                     l3149:	
  7153                           ;incstack = 0
  7154                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  7155                           
  7156     08A0  1003               	clrc
  7157     08A1  0D74               	rlf	__div_to_l_@f1+2,w
  7158     08A2  0D75               	rlf	__div_to_l_@f1+3,w
  7159     08A3  1283               	bcf	3,5	;RP0=0, select bank0
  7160     08A4  1303               	bcf	3,6	;RP1=0, select bank0
  7161     08A5  00A5               	movwf	__div_to_l_@exp1
  7162     08A6  0825               	movf	__div_to_l_@exp1,w
  7163     08A7  1D03               	btfss	3,2
  7164     08A8  28AA               	goto	u4841
  7165     08A9  28AB               	goto	u4840
  7166     08AA                     u4841:
  7167     08AA  28B4               	goto	l3155
  7168     08AB                     u4840:
  7169     08AB                     l3151:
  7170     08AB  3000               	movlw	0
  7171     08AC  00F5               	movwf	?__div_to_l_+3
  7172     08AD  3000               	movlw	0
  7173     08AE  00F4               	movwf	?__div_to_l_+2
  7174     08AF  3000               	movlw	0
  7175     08B0  00F3               	movwf	?__div_to_l_+1
  7176     08B1  3000               	movlw	0
  7177     08B2  00F2               	movwf	?__div_to_l_
  7178     08B3  2957               	goto	l598
  7179     08B4                     l3155:
  7180     08B4  1003               	clrc
  7181     08B5  0D78               	rlf	__div_to_l_@f2+2,w
  7182     08B6  0D79               	rlf	__div_to_l_@f2+3,w
  7183     08B7  00A4               	movwf	__div_to_l_@cntr
  7184     08B8  0824               	movf	__div_to_l_@cntr,w
  7185     08B9  1D03               	btfss	3,2
  7186     08BA  28BC               	goto	u4851
  7187     08BB  28BD               	goto	u4850
  7188     08BC                     u4851:
  7189     08BC  28BE               	goto	l599
  7190     08BD                     u4850:
  7191     08BD  28AB               	goto	l3151
  7192     08BE                     l599:
  7193     08BE  17F4               	bsf	__div_to_l_@f1+2,7
  7194     08BF                     l3161:
  7195     08BF  30FF               	movlw	255
  7196     08C0  05F2               	andwf	__div_to_l_@f1,f
  7197     08C1  30FF               	movlw	255
  7198     08C2  05F3               	andwf	__div_to_l_@f1+1,f
  7199     08C3  30FF               	movlw	255
  7200     08C4  05F4               	andwf	__div_to_l_@f1+2,f
  7201     08C5  3000               	movlw	0
  7202     08C6  05F5               	andwf	__div_to_l_@f1+3,f
  7203     08C7                     l3163:
  7204     08C7  17F8               	bsf	__div_to_l_@f2+2,7
  7205     08C8  30FF               	movlw	255
  7206     08C9  05F6               	andwf	__div_to_l_@f2,f
  7207     08CA  30FF               	movlw	255
  7208     08CB  05F7               	andwf	__div_to_l_@f2+1,f
  7209     08CC  30FF               	movlw	255
  7210     08CD  05F8               	andwf	__div_to_l_@f2+2,f
  7211     08CE  3000               	movlw	0
  7212     08CF  05F9               	andwf	__div_to_l_@f2+3,f
  7213     08D0  3000               	movlw	0
  7214     08D1  00A3               	movwf	__div_to_l_@quot+3
  7215     08D2  3000               	movlw	0
  7216     08D3  00A2               	movwf	__div_to_l_@quot+2
  7217     08D4  3000               	movlw	0
  7218     08D5  00A1               	movwf	__div_to_l_@quot+1
  7219     08D6  3000               	movlw	0
  7220     08D7  00A0               	movwf	__div_to_l_@quot
  7221     08D8                     l3165:
  7222     08D8  307F               	movlw	127
  7223     08D9  02A5               	subwf	__div_to_l_@exp1,f
  7224     08DA                     l3167:
  7225     08DA  30A0               	movlw	160
  7226     08DB  0724               	addwf	__div_to_l_@cntr,w
  7227     08DC  00FA               	movwf	??__div_to_l_
  7228     08DD  087A               	movf	??__div_to_l_,w
  7229     08DE  02A5               	subwf	__div_to_l_@exp1,f
  7230     08DF  3020               	movlw	32
  7231     08E0  00A4               	movwf	__div_to_l_@cntr
  7232     08E1                     l3169:
  7233     08E1  3001               	movlw	1
  7234     08E2  00FA               	movwf	??__div_to_l_
  7235     08E3                     u4865:
  7236     08E3  1003               	clrc
  7237     08E4  0DA0               	rlf	__div_to_l_@quot,f
  7238     08E5  0DA1               	rlf	__div_to_l_@quot+1,f
  7239     08E6  0DA2               	rlf	__div_to_l_@quot+2,f
  7240     08E7  0DA3               	rlf	__div_to_l_@quot+3,f
  7241     08E8  0BFA               	decfsz	??__div_to_l_,f
  7242     08E9  28E3               	goto	u4865
  7243     08EA                     l3171:
  7244     08EA  0879               	movf	__div_to_l_@f2+3,w
  7245     08EB  0275               	subwf	__div_to_l_@f1+3,w
  7246     08EC  1D03               	skipz
  7247     08ED  28F8               	goto	u4875
  7248     08EE  0878               	movf	__div_to_l_@f2+2,w
  7249     08EF  0274               	subwf	__div_to_l_@f1+2,w
  7250     08F0  1D03               	skipz
  7251     08F1  28F8               	goto	u4875
  7252     08F2  0877               	movf	__div_to_l_@f2+1,w
  7253     08F3  0273               	subwf	__div_to_l_@f1+1,w
  7254     08F4  1D03               	skipz
  7255     08F5  28F8               	goto	u4875
  7256     08F6  0876               	movf	__div_to_l_@f2,w
  7257     08F7  0272               	subwf	__div_to_l_@f1,w
  7258     08F8                     u4875:
  7259     08F8  1C03               	skipc
  7260     08F9  28FB               	goto	u4871
  7261     08FA  28FC               	goto	u4870
  7262     08FB                     u4871:
  7263     08FB  290B               	goto	l3177
  7264     08FC                     u4870:
  7265     08FC                     l3173:
  7266     08FC  0876               	movf	__div_to_l_@f2,w
  7267     08FD  02F2               	subwf	__div_to_l_@f1,f
  7268     08FE  0877               	movf	__div_to_l_@f2+1,w
  7269     08FF  1C03               	skipc
  7270     0900  0F77               	incfsz	__div_to_l_@f2+1,w
  7271     0901  02F3               	subwf	__div_to_l_@f1+1,f
  7272     0902  0878               	movf	__div_to_l_@f2+2,w
  7273     0903  1C03               	skipc
  7274     0904  0F78               	incfsz	__div_to_l_@f2+2,w
  7275     0905  02F4               	subwf	__div_to_l_@f1+2,f
  7276     0906  0879               	movf	__div_to_l_@f2+3,w
  7277     0907  1C03               	skipc
  7278     0908  0F79               	incfsz	__div_to_l_@f2+3,w
  7279     0909  02F5               	subwf	__div_to_l_@f1+3,f
  7280     090A                     l3175:
  7281     090A  1420               	bsf	__div_to_l_@quot,0
  7282     090B                     l3177:
  7283     090B  3001               	movlw	1
  7284     090C  00FA               	movwf	??__div_to_l_
  7285     090D                     u4885:
  7286     090D  1003               	clrc
  7287     090E  0DF2               	rlf	__div_to_l_@f1,f
  7288     090F  0DF3               	rlf	__div_to_l_@f1+1,f
  7289     0910  0DF4               	rlf	__div_to_l_@f1+2,f
  7290     0911  0DF5               	rlf	__div_to_l_@f1+3,f
  7291     0912  0BFA               	decfsz	??__div_to_l_,f
  7292     0913  290D               	goto	u4885
  7293     0914                     l3179:
  7294     0914  3001               	movlw	1
  7295     0915  02A4               	subwf	__div_to_l_@cntr,f
  7296     0916  1D03               	btfss	3,2
  7297     0917  2919               	goto	u4891
  7298     0918  291A               	goto	u4890
  7299     0919                     u4891:
  7300     0919  28E1               	goto	l3169
  7301     091A                     u4890:
  7302     091A                     l602:
  7303     091A  1FA5               	btfss	__div_to_l_@exp1,7
  7304     091B  291D               	goto	u4901
  7305     091C  291E               	goto	u4900
  7306     091D                     u4901:
  7307     091D  2938               	goto	l3189
  7308     091E                     u4900:
  7309     091E                     l3181:
  7310     091E  0825               	movf	__div_to_l_@exp1,w
  7311     091F  3A80               	xorlw	128
  7312     0920  3E9F               	addlw	159
  7313     0921  1803               	skipnc
  7314     0922  2924               	goto	u4911
  7315     0923  2925               	goto	u4910
  7316     0924                     u4911:
  7317     0924  2926               	goto	l3187
  7318     0925                     u4910:
  7319     0925  28AB               	goto	l3151
  7320     0926                     l3187:
  7321     0926  3001               	movlw	1
  7322     0927                     u4925:
  7323     0927  1003               	clrc
  7324     0928  0CA3               	rrf	__div_to_l_@quot+3,f
  7325     0929  0CA2               	rrf	__div_to_l_@quot+2,f
  7326     092A  0CA1               	rrf	__div_to_l_@quot+1,f
  7327     092B  0CA0               	rrf	__div_to_l_@quot,f
  7328     092C  3EFF               	addlw	-1
  7329     092D  1D03               	skipz
  7330     092E  2927               	goto	u4925
  7331     092F  3001               	movlw	1
  7332     0930  00FA               	movwf	??__div_to_l_
  7333     0931  087A               	movf	??__div_to_l_,w
  7334     0932  07A5               	addwf	__div_to_l_@exp1,f
  7335     0933  1D03               	btfss	3,2
  7336     0934  2936               	goto	u4931
  7337     0935  2937               	goto	u4930
  7338     0936                     u4931:
  7339     0936  2926               	goto	l3187
  7340     0937                     u4930:
  7341     0937  294F               	goto	l3197
  7342     0938                     l3189:
  7343     0938  3020               	movlw	32
  7344     0939  0225               	subwf	__div_to_l_@exp1,w
  7345     093A  1C03               	skipc
  7346     093B  293D               	goto	u4941
  7347     093C  293E               	goto	u4940
  7348     093D                     u4941:
  7349     093D  294A               	goto	l609
  7350     093E                     u4940:
  7351     093E  28AB               	goto	l3151
  7352     093F                     l3195:
  7353     093F  3001               	movlw	1
  7354     0940  00FA               	movwf	??__div_to_l_
  7355     0941                     u4955:
  7356     0941  1003               	clrc
  7357     0942  0DA0               	rlf	__div_to_l_@quot,f
  7358     0943  0DA1               	rlf	__div_to_l_@quot+1,f
  7359     0944  0DA2               	rlf	__div_to_l_@quot+2,f
  7360     0945  0DA3               	rlf	__div_to_l_@quot+3,f
  7361     0946  0BFA               	decfsz	??__div_to_l_,f
  7362     0947  2941               	goto	u4955
  7363     0948  3001               	movlw	1
  7364     0949  02A5               	subwf	__div_to_l_@exp1,f
  7365     094A                     l609:
  7366     094A  0825               	movf	__div_to_l_@exp1,w
  7367     094B  1D03               	btfss	3,2
  7368     094C  294E               	goto	u4961
  7369     094D  294F               	goto	u4960
  7370     094E                     u4961:
  7371     094E  293F               	goto	l3195
  7372     094F                     u4960:
  7373     094F                     l3197:
  7374     094F  0823               	movf	__div_to_l_@quot+3,w
  7375     0950  00F5               	movwf	?__div_to_l_+3
  7376     0951  0822               	movf	__div_to_l_@quot+2,w
  7377     0952  00F4               	movwf	?__div_to_l_+2
  7378     0953  0821               	movf	__div_to_l_@quot+1,w
  7379     0954  00F3               	movwf	?__div_to_l_+1
  7380     0955  0820               	movf	__div_to_l_@quot,w
  7381     0956  00F2               	movwf	?__div_to_l_
  7382     0957                     l598:
  7383     0957  0008               	return
  7384     0958                     __end_of__div_to_l_:
  7385                           
  7386                           	psect	text13
  7387     1941                     __ptext13:	
  7388 ;; *************** function ___wmul *****************
  7389 ;; Defined at:
  7390 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  7391 ;; Parameters:    Size  Location     Type
  7392 ;;  multiplier      2    2[COMMON] unsigned int 
  7393 ;;  multiplicand    2    4[COMMON] unsigned int 
  7394 ;; Auto vars:     Size  Location     Type
  7395 ;;  product         2    6[COMMON] unsigned int 
  7396 ;; Return value:  Size  Location     Type
  7397 ;;                  2    2[COMMON] unsigned int 
  7398 ;; Registers used:
  7399 ;;		wreg, status,2, status,0
  7400 ;; Tracked objects:
  7401 ;;		On entry : 0/0
  7402 ;;		On exit  : 0/0
  7403 ;;		Unchanged: 0/0
  7404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7405 ;;      Params:         4       0       0       0       0
  7406 ;;      Locals:         2       0       0       0       0
  7407 ;;      Temps:          0       0       0       0       0
  7408 ;;      Totals:         6       0       0       0       0
  7409 ;;Total ram usage:        6 bytes
  7410 ;; Hardware stack levels used: 1
  7411 ;; Hardware stack levels required when called: 2
  7412 ;; This function calls:
  7413 ;;		Nothing
  7414 ;; This function is called by:
  7415 ;;		_sprintf
  7416 ;;		_map
  7417 ;; This function uses a non-reentrant model
  7418 ;;
  7419                           
  7420     1941                     ___wmul:	
  7421                           ;psect for function ___wmul
  7422                           
  7423     1941                     l3201:	
  7424                           ;incstack = 0
  7425                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7426                           
  7427     1941  01F6               	clrf	___wmul@product
  7428     1942  01F7               	clrf	___wmul@product+1
  7429     1943                     l3203:
  7430     1943  1C72               	btfss	___wmul@multiplier,0
  7431     1944  2946               	goto	u4971
  7432     1945  2947               	goto	u4970
  7433     1946                     u4971:
  7434     1946  294D               	goto	l428
  7435     1947                     u4970:
  7436     1947                     l3205:
  7437     1947  0874               	movf	___wmul@multiplicand,w
  7438     1948  07F6               	addwf	___wmul@product,f
  7439     1949  1803               	skipnc
  7440     194A  0AF7               	incf	___wmul@product+1,f
  7441     194B  0875               	movf	___wmul@multiplicand+1,w
  7442     194C  07F7               	addwf	___wmul@product+1,f
  7443     194D                     l428:
  7444     194D  3001               	movlw	1
  7445     194E                     u4985:
  7446     194E  1003               	clrc
  7447     194F  0DF4               	rlf	___wmul@multiplicand,f
  7448     1950  0DF5               	rlf	___wmul@multiplicand+1,f
  7449     1951  3EFF               	addlw	-1
  7450     1952  1D03               	skipz
  7451     1953  294E               	goto	u4985
  7452     1954                     l3207:
  7453     1954  3001               	movlw	1
  7454     1955                     u4995:
  7455     1955  1003               	clrc
  7456     1956  0CF3               	rrf	___wmul@multiplier+1,f
  7457     1957  0CF2               	rrf	___wmul@multiplier,f
  7458     1958  3EFF               	addlw	-1
  7459     1959  1D03               	skipz
  7460     195A  2955               	goto	u4995
  7461     195B                     l3209:
  7462     195B  0872               	movf	___wmul@multiplier,w
  7463     195C  0473               	iorwf	___wmul@multiplier+1,w
  7464     195D  1D03               	btfss	3,2
  7465     195E  2960               	goto	u5001
  7466     195F  2961               	goto	u5000
  7467     1960                     u5001:
  7468     1960  2943               	goto	l3203
  7469     1961                     u5000:
  7470     1961                     l3211:
  7471     1961  0877               	movf	___wmul@product+1,w
  7472     1962  00F3               	movwf	?___wmul+1
  7473     1963  0876               	movf	___wmul@product,w
  7474     1964  00F2               	movwf	?___wmul
  7475     1965                     l430:
  7476     1965  0008               	return
  7477     1966                     __end_of___wmul:
  7478                           
  7479                           	psect	text14
  7480     1B39                     __ptext14:	
  7481 ;; *************** function ___llmod *****************
  7482 ;; Defined at:
  7483 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\llmod.c"
  7484 ;; Parameters:    Size  Location     Type
  7485 ;;  divisor         4    2[COMMON] unsigned long 
  7486 ;;  dividend        4    6[COMMON] unsigned long 
  7487 ;; Auto vars:     Size  Location     Type
  7488 ;;  counter         1    0[BANK0 ] unsigned char 
  7489 ;; Return value:  Size  Location     Type
  7490 ;;                  4    2[COMMON] unsigned long 
  7491 ;; Registers used:
  7492 ;;		wreg, status,2, status,0
  7493 ;; Tracked objects:
  7494 ;;		On entry : 0/0
  7495 ;;		On exit  : 0/0
  7496 ;;		Unchanged: 0/0
  7497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7498 ;;      Params:         8       0       0       0       0
  7499 ;;      Locals:         0       1       0       0       0
  7500 ;;      Temps:          1       0       0       0       0
  7501 ;;      Totals:         9       1       0       0       0
  7502 ;;Total ram usage:       10 bytes
  7503 ;; Hardware stack levels used: 1
  7504 ;; Hardware stack levels required when called: 2
  7505 ;; This function calls:
  7506 ;;		Nothing
  7507 ;; This function is called by:
  7508 ;;		_sprintf
  7509 ;; This function uses a non-reentrant model
  7510 ;;
  7511                           
  7512     1B39                     ___llmod:	
  7513                           ;psect for function ___llmod
  7514                           
  7515     1B39                     l4103:	
  7516                           ;incstack = 0
  7517                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7518                           
  7519     1B39  0875               	movf	___llmod@divisor+3,w
  7520     1B3A  0474               	iorwf	___llmod@divisor+2,w
  7521     1B3B  0473               	iorwf	___llmod@divisor+1,w
  7522     1B3C  0472               	iorwf	___llmod@divisor,w
  7523     1B3D  1903               	skipnz
  7524     1B3E  2B40               	goto	u6571
  7525     1B3F  2B41               	goto	u6570
  7526     1B40                     u6571:
  7527     1B40  2B86               	goto	l4119
  7528     1B41                     u6570:
  7529     1B41                     l4105:
  7530     1B41  1283               	bcf	3,5	;RP0=0, select bank0
  7531     1B42  1303               	bcf	3,6	;RP1=0, select bank0
  7532     1B43  01A0               	clrf	___llmod@counter
  7533     1B44  0AA0               	incf	___llmod@counter,f
  7534     1B45  2B53               	goto	l4109
  7535     1B46                     l4107:
  7536     1B46  3001               	movlw	1
  7537     1B47  00FA               	movwf	??___llmod
  7538     1B48                     u6585:
  7539     1B48  1003               	clrc
  7540     1B49  0DF2               	rlf	___llmod@divisor,f
  7541     1B4A  0DF3               	rlf	___llmod@divisor+1,f
  7542     1B4B  0DF4               	rlf	___llmod@divisor+2,f
  7543     1B4C  0DF5               	rlf	___llmod@divisor+3,f
  7544     1B4D  0BFA               	decfsz	??___llmod,f
  7545     1B4E  2B48               	goto	u6585
  7546     1B4F  3001               	movlw	1
  7547     1B50  00FA               	movwf	??___llmod
  7548     1B51  087A               	movf	??___llmod,w
  7549     1B52  07A0               	addwf	___llmod@counter,f
  7550     1B53                     l4109:
  7551     1B53  1FF5               	btfss	___llmod@divisor+3,7
  7552     1B54  2B56               	goto	u6591
  7553     1B55  2B57               	goto	u6590
  7554     1B56                     u6591:
  7555     1B56  2B46               	goto	l4107
  7556     1B57                     u6590:
  7557     1B57                     l4111:
  7558     1B57  0875               	movf	___llmod@divisor+3,w
  7559     1B58  0279               	subwf	___llmod@dividend+3,w
  7560     1B59  1D03               	skipz
  7561     1B5A  2B65               	goto	u6605
  7562     1B5B  0874               	movf	___llmod@divisor+2,w
  7563     1B5C  0278               	subwf	___llmod@dividend+2,w
  7564     1B5D  1D03               	skipz
  7565     1B5E  2B65               	goto	u6605
  7566     1B5F  0873               	movf	___llmod@divisor+1,w
  7567     1B60  0277               	subwf	___llmod@dividend+1,w
  7568     1B61  1D03               	skipz
  7569     1B62  2B65               	goto	u6605
  7570     1B63  0872               	movf	___llmod@divisor,w
  7571     1B64  0276               	subwf	___llmod@dividend,w
  7572     1B65                     u6605:
  7573     1B65  1C03               	skipc
  7574     1B66  2B68               	goto	u6601
  7575     1B67  2B69               	goto	u6600
  7576     1B68                     u6601:
  7577     1B68  2B77               	goto	l4115
  7578     1B69                     u6600:
  7579     1B69                     l4113:
  7580     1B69  0872               	movf	___llmod@divisor,w
  7581     1B6A  02F6               	subwf	___llmod@dividend,f
  7582     1B6B  0873               	movf	___llmod@divisor+1,w
  7583     1B6C  1C03               	skipc
  7584     1B6D  0F73               	incfsz	___llmod@divisor+1,w
  7585     1B6E  02F7               	subwf	___llmod@dividend+1,f
  7586     1B6F  0874               	movf	___llmod@divisor+2,w
  7587     1B70  1C03               	skipc
  7588     1B71  0F74               	incfsz	___llmod@divisor+2,w
  7589     1B72  02F8               	subwf	___llmod@dividend+2,f
  7590     1B73  0875               	movf	___llmod@divisor+3,w
  7591     1B74  1C03               	skipc
  7592     1B75  0F75               	incfsz	___llmod@divisor+3,w
  7593     1B76  02F9               	subwf	___llmod@dividend+3,f
  7594     1B77                     l4115:
  7595     1B77  3001               	movlw	1
  7596     1B78                     u6615:
  7597     1B78  1003               	clrc
  7598     1B79  0CF5               	rrf	___llmod@divisor+3,f
  7599     1B7A  0CF4               	rrf	___llmod@divisor+2,f
  7600     1B7B  0CF3               	rrf	___llmod@divisor+1,f
  7601     1B7C  0CF2               	rrf	___llmod@divisor,f
  7602     1B7D  3EFF               	addlw	-1
  7603     1B7E  1D03               	skipz
  7604     1B7F  2B78               	goto	u6615
  7605     1B80                     l4117:
  7606     1B80  3001               	movlw	1
  7607     1B81  02A0               	subwf	___llmod@counter,f
  7608     1B82  1D03               	btfss	3,2
  7609     1B83  2B85               	goto	u6621
  7610     1B84  2B86               	goto	u6620
  7611     1B85                     u6621:
  7612     1B85  2B57               	goto	l4111
  7613     1B86                     u6620:
  7614     1B86                     l4119:
  7615     1B86  0879               	movf	___llmod@dividend+3,w
  7616     1B87  00F5               	movwf	?___llmod+3
  7617     1B88  0878               	movf	___llmod@dividend+2,w
  7618     1B89  00F4               	movwf	?___llmod+2
  7619     1B8A  0877               	movf	___llmod@dividend+1,w
  7620     1B8B  00F3               	movwf	?___llmod+1
  7621     1B8C  0876               	movf	___llmod@dividend,w
  7622     1B8D  00F2               	movwf	?___llmod
  7623     1B8E                     l684:
  7624     1B8E  0008               	return
  7625     1B8F                     __end_of___llmod:
  7626                           
  7627                           	psect	text15
  7628     1C4C                     __ptext15:	
  7629 ;; *************** function ___lldiv *****************
  7630 ;; Defined at:
  7631 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  7632 ;; Parameters:    Size  Location     Type
  7633 ;;  divisor         4    2[COMMON] unsigned long 
  7634 ;;  dividend        4    6[COMMON] unsigned long 
  7635 ;; Auto vars:     Size  Location     Type
  7636 ;;  quotient        4    0[BANK0 ] unsigned long 
  7637 ;;  counter         1    4[BANK0 ] unsigned char 
  7638 ;; Return value:  Size  Location     Type
  7639 ;;                  4    2[COMMON] unsigned long 
  7640 ;; Registers used:
  7641 ;;		wreg, status,2, status,0
  7642 ;; Tracked objects:
  7643 ;;		On entry : 0/0
  7644 ;;		On exit  : 0/0
  7645 ;;		Unchanged: 0/0
  7646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7647 ;;      Params:         8       0       0       0       0
  7648 ;;      Locals:         0       5       0       0       0
  7649 ;;      Temps:          1       0       0       0       0
  7650 ;;      Totals:         9       5       0       0       0
  7651 ;;Total ram usage:       14 bytes
  7652 ;; Hardware stack levels used: 1
  7653 ;; Hardware stack levels required when called: 2
  7654 ;; This function calls:
  7655 ;;		Nothing
  7656 ;; This function is called by:
  7657 ;;		_sprintf
  7658 ;; This function uses a non-reentrant model
  7659 ;;
  7660                           
  7661     1C4C                     ___lldiv:	
  7662                           ;psect for function ___lldiv
  7663                           
  7664     1C4C                     l3215:	
  7665                           ;incstack = 0
  7666                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7667                           
  7668     1C4C  3000               	movlw	0
  7669     1C4D  1283               	bcf	3,5	;RP0=0, select bank0
  7670     1C4E  1303               	bcf	3,6	;RP1=0, select bank0
  7671     1C4F  00A3               	movwf	___lldiv@quotient+3
  7672     1C50  3000               	movlw	0
  7673     1C51  00A2               	movwf	___lldiv@quotient+2
  7674     1C52  3000               	movlw	0
  7675     1C53  00A1               	movwf	___lldiv@quotient+1
  7676     1C54  3000               	movlw	0
  7677     1C55  00A0               	movwf	___lldiv@quotient
  7678     1C56  0875               	movf	___lldiv@divisor+3,w
  7679     1C57  0474               	iorwf	___lldiv@divisor+2,w
  7680     1C58  0473               	iorwf	___lldiv@divisor+1,w
  7681     1C59  0472               	iorwf	___lldiv@divisor,w
  7682     1C5A  1903               	skipnz
  7683     1C5B  2C5D               	goto	u5011
  7684     1C5C  2C5E               	goto	u5010
  7685     1C5D                     u5011:
  7686     1C5D  2CAB               	goto	l3235
  7687     1C5E                     u5010:
  7688     1C5E                     l3217:
  7689     1C5E  01A4               	clrf	___lldiv@counter
  7690     1C5F  0AA4               	incf	___lldiv@counter,f
  7691     1C60  2C6E               	goto	l3221
  7692     1C61                     l3219:
  7693     1C61  3001               	movlw	1
  7694     1C62  00FA               	movwf	??___lldiv
  7695     1C63                     u5025:
  7696     1C63  1003               	clrc
  7697     1C64  0DF2               	rlf	___lldiv@divisor,f
  7698     1C65  0DF3               	rlf	___lldiv@divisor+1,f
  7699     1C66  0DF4               	rlf	___lldiv@divisor+2,f
  7700     1C67  0DF5               	rlf	___lldiv@divisor+3,f
  7701     1C68  0BFA               	decfsz	??___lldiv,f
  7702     1C69  2C63               	goto	u5025
  7703     1C6A  3001               	movlw	1
  7704     1C6B  00FA               	movwf	??___lldiv
  7705     1C6C  087A               	movf	??___lldiv,w
  7706     1C6D  07A4               	addwf	___lldiv@counter,f
  7707     1C6E                     l3221:
  7708     1C6E  1FF5               	btfss	___lldiv@divisor+3,7
  7709     1C6F  2C71               	goto	u5031
  7710     1C70  2C72               	goto	u5030
  7711     1C71                     u5031:
  7712     1C71  2C61               	goto	l3219
  7713     1C72                     u5030:
  7714     1C72                     l3223:
  7715     1C72  3001               	movlw	1
  7716     1C73  00FA               	movwf	??___lldiv
  7717     1C74                     u5045:
  7718     1C74  1003               	clrc
  7719     1C75  0DA0               	rlf	___lldiv@quotient,f
  7720     1C76  0DA1               	rlf	___lldiv@quotient+1,f
  7721     1C77  0DA2               	rlf	___lldiv@quotient+2,f
  7722     1C78  0DA3               	rlf	___lldiv@quotient+3,f
  7723     1C79  0BFA               	decfsz	??___lldiv,f
  7724     1C7A  2C74               	goto	u5045
  7725     1C7B                     l3225:
  7726     1C7B  0875               	movf	___lldiv@divisor+3,w
  7727     1C7C  0279               	subwf	___lldiv@dividend+3,w
  7728     1C7D  1D03               	skipz
  7729     1C7E  2C89               	goto	u5055
  7730     1C7F  0874               	movf	___lldiv@divisor+2,w
  7731     1C80  0278               	subwf	___lldiv@dividend+2,w
  7732     1C81  1D03               	skipz
  7733     1C82  2C89               	goto	u5055
  7734     1C83  0873               	movf	___lldiv@divisor+1,w
  7735     1C84  0277               	subwf	___lldiv@dividend+1,w
  7736     1C85  1D03               	skipz
  7737     1C86  2C89               	goto	u5055
  7738     1C87  0872               	movf	___lldiv@divisor,w
  7739     1C88  0276               	subwf	___lldiv@dividend,w
  7740     1C89                     u5055:
  7741     1C89  1C03               	skipc
  7742     1C8A  2C8C               	goto	u5051
  7743     1C8B  2C8D               	goto	u5050
  7744     1C8C                     u5051:
  7745     1C8C  2C9C               	goto	l3231
  7746     1C8D                     u5050:
  7747     1C8D                     l3227:
  7748     1C8D  0872               	movf	___lldiv@divisor,w
  7749     1C8E  02F6               	subwf	___lldiv@dividend,f
  7750     1C8F  0873               	movf	___lldiv@divisor+1,w
  7751     1C90  1C03               	skipc
  7752     1C91  0F73               	incfsz	___lldiv@divisor+1,w
  7753     1C92  02F7               	subwf	___lldiv@dividend+1,f
  7754     1C93  0874               	movf	___lldiv@divisor+2,w
  7755     1C94  1C03               	skipc
  7756     1C95  0F74               	incfsz	___lldiv@divisor+2,w
  7757     1C96  02F8               	subwf	___lldiv@dividend+2,f
  7758     1C97  0875               	movf	___lldiv@divisor+3,w
  7759     1C98  1C03               	skipc
  7760     1C99  0F75               	incfsz	___lldiv@divisor+3,w
  7761     1C9A  02F9               	subwf	___lldiv@dividend+3,f
  7762     1C9B                     l3229:
  7763     1C9B  1420               	bsf	___lldiv@quotient,0
  7764     1C9C                     l3231:
  7765     1C9C  3001               	movlw	1
  7766     1C9D                     u5065:
  7767     1C9D  1003               	clrc
  7768     1C9E  0CF5               	rrf	___lldiv@divisor+3,f
  7769     1C9F  0CF4               	rrf	___lldiv@divisor+2,f
  7770     1CA0  0CF3               	rrf	___lldiv@divisor+1,f
  7771     1CA1  0CF2               	rrf	___lldiv@divisor,f
  7772     1CA2  3EFF               	addlw	-1
  7773     1CA3  1D03               	skipz
  7774     1CA4  2C9D               	goto	u5065
  7775     1CA5                     l3233:
  7776     1CA5  3001               	movlw	1
  7777     1CA6  02A4               	subwf	___lldiv@counter,f
  7778     1CA7  1D03               	btfss	3,2
  7779     1CA8  2CAA               	goto	u5071
  7780     1CA9  2CAB               	goto	u5070
  7781     1CAA                     u5071:
  7782     1CAA  2C72               	goto	l3223
  7783     1CAB                     u5070:
  7784     1CAB                     l3235:
  7785     1CAB  0823               	movf	___lldiv@quotient+3,w
  7786     1CAC  00F5               	movwf	?___lldiv+3
  7787     1CAD  0822               	movf	___lldiv@quotient+2,w
  7788     1CAE  00F4               	movwf	?___lldiv+2
  7789     1CAF  0821               	movf	___lldiv@quotient+1,w
  7790     1CB0  00F3               	movwf	?___lldiv+1
  7791     1CB1  0820               	movf	___lldiv@quotient,w
  7792     1CB2  00F2               	movwf	?___lldiv
  7793     1CB3                     l464:
  7794     1CB3  0008               	return
  7795     1CB4                     __end_of___lldiv:
  7796                           
  7797                           	psect	text16
  7798     1AE9                     __ptext16:	
  7799 ;; *************** function ___flsub *****************
  7800 ;; Defined at:
  7801 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  7802 ;; Parameters:    Size  Location     Type
  7803 ;;  a               4    0[BANK1 ] unsigned long 
  7804 ;;  b               4    4[BANK1 ] unsigned long 
  7805 ;; Auto vars:     Size  Location     Type
  7806 ;;		None
  7807 ;; Return value:  Size  Location     Type
  7808 ;;                  4    0[BANK1 ] unsigned long 
  7809 ;; Registers used:
  7810 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7811 ;; Tracked objects:
  7812 ;;		On entry : 0/0
  7813 ;;		On exit  : 0/0
  7814 ;;		Unchanged: 0/0
  7815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7816 ;;      Params:         0       0       8       0       0
  7817 ;;      Locals:         0       0       0       0       0
  7818 ;;      Temps:          0       0       0       0       0
  7819 ;;      Totals:         0       0       8       0       0
  7820 ;;Total ram usage:        8 bytes
  7821 ;; Hardware stack levels used: 1
  7822 ;; Hardware stack levels required when called: 3
  7823 ;; This function calls:
  7824 ;;		___fladd
  7825 ;; This function is called by:
  7826 ;;		_sprintf
  7827 ;; This function uses a non-reentrant model
  7828 ;;
  7829                           
  7830     1AE9                     ___flsub:	
  7831                           ;psect for function ___flsub
  7832                           
  7833     1AE9                     l3335:	
  7834                           ;incstack = 0
  7835                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7836                           
  7837     1AE9  3080               	movlw	128
  7838     1AEA  1683               	bsf	3,5	;RP0=1, select bank1
  7839     1AEB  1303               	bcf	3,6	;RP1=0, select bank1
  7840     1AEC  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  7841     1AED                     l3337:
  7842     1AED  0827               	movf	(___flsub@b+3)^(0+128),w
  7843     1AEE  1283               	bcf	3,5	;RP0=0, select bank0
  7844     1AEF  1303               	bcf	3,6	;RP1=0, select bank0
  7845     1AF0  00D9               	movwf	___fladd@b+3
  7846     1AF1  1683               	bsf	3,5	;RP0=1, select bank1
  7847     1AF2  1303               	bcf	3,6	;RP1=0, select bank1
  7848     1AF3  0826               	movf	(___flsub@b+2)^(0+128),w
  7849     1AF4  1283               	bcf	3,5	;RP0=0, select bank0
  7850     1AF5  1303               	bcf	3,6	;RP1=0, select bank0
  7851     1AF6  00D8               	movwf	___fladd@b+2
  7852     1AF7  1683               	bsf	3,5	;RP0=1, select bank1
  7853     1AF8  1303               	bcf	3,6	;RP1=0, select bank1
  7854     1AF9  0825               	movf	(___flsub@b+1)^(0+128),w
  7855     1AFA  1283               	bcf	3,5	;RP0=0, select bank0
  7856     1AFB  1303               	bcf	3,6	;RP1=0, select bank0
  7857     1AFC  00D7               	movwf	___fladd@b+1
  7858     1AFD  1683               	bsf	3,5	;RP0=1, select bank1
  7859     1AFE  1303               	bcf	3,6	;RP1=0, select bank1
  7860     1AFF  0824               	movf	___flsub@b^(0+128),w
  7861     1B00  1283               	bcf	3,5	;RP0=0, select bank0
  7862     1B01  1303               	bcf	3,6	;RP1=0, select bank0
  7863     1B02  00D6               	movwf	___fladd@b
  7864     1B03  1683               	bsf	3,5	;RP0=1, select bank1
  7865     1B04  1303               	bcf	3,6	;RP1=0, select bank1
  7866     1B05  0823               	movf	(___flsub@a+3)^(0+128),w
  7867     1B06  1283               	bcf	3,5	;RP0=0, select bank0
  7868     1B07  1303               	bcf	3,6	;RP1=0, select bank0
  7869     1B08  00DD               	movwf	___fladd@a+3
  7870     1B09  1683               	bsf	3,5	;RP0=1, select bank1
  7871     1B0A  1303               	bcf	3,6	;RP1=0, select bank1
  7872     1B0B  0822               	movf	(___flsub@a+2)^(0+128),w
  7873     1B0C  1283               	bcf	3,5	;RP0=0, select bank0
  7874     1B0D  1303               	bcf	3,6	;RP1=0, select bank0
  7875     1B0E  00DC               	movwf	___fladd@a+2
  7876     1B0F  1683               	bsf	3,5	;RP0=1, select bank1
  7877     1B10  1303               	bcf	3,6	;RP1=0, select bank1
  7878     1B11  0821               	movf	(___flsub@a+1)^(0+128),w
  7879     1B12  1283               	bcf	3,5	;RP0=0, select bank0
  7880     1B13  1303               	bcf	3,6	;RP1=0, select bank0
  7881     1B14  00DB               	movwf	___fladd@a+1
  7882     1B15  1683               	bsf	3,5	;RP0=1, select bank1
  7883     1B16  1303               	bcf	3,6	;RP1=0, select bank1
  7884     1B17  0820               	movf	___flsub@a^(0+128),w
  7885     1B18  1283               	bcf	3,5	;RP0=0, select bank0
  7886     1B19  1303               	bcf	3,6	;RP1=0, select bank0
  7887     1B1A  00DA               	movwf	___fladd@a
  7888     1B1B  160A  118A  233F  160A  158A  	fcall	___fladd
  7889     1B20  1283               	bcf	3,5	;RP0=0, select bank0
  7890     1B21  1303               	bcf	3,6	;RP1=0, select bank0
  7891     1B22  0859               	movf	?___fladd+3,w
  7892     1B23  1683               	bsf	3,5	;RP0=1, select bank1
  7893     1B24  1303               	bcf	3,6	;RP1=0, select bank1
  7894     1B25  00A3               	movwf	(?___flsub+3)^(0+128)
  7895     1B26  1283               	bcf	3,5	;RP0=0, select bank0
  7896     1B27  1303               	bcf	3,6	;RP1=0, select bank0
  7897     1B28  0858               	movf	?___fladd+2,w
  7898     1B29  1683               	bsf	3,5	;RP0=1, select bank1
  7899     1B2A  1303               	bcf	3,6	;RP1=0, select bank1
  7900     1B2B  00A2               	movwf	(?___flsub+2)^(0+128)
  7901     1B2C  1283               	bcf	3,5	;RP0=0, select bank0
  7902     1B2D  1303               	bcf	3,6	;RP1=0, select bank0
  7903     1B2E  0857               	movf	?___fladd+1,w
  7904     1B2F  1683               	bsf	3,5	;RP0=1, select bank1
  7905     1B30  1303               	bcf	3,6	;RP1=0, select bank1
  7906     1B31  00A1               	movwf	(?___flsub+1)^(0+128)
  7907     1B32  1283               	bcf	3,5	;RP0=0, select bank0
  7908     1B33  1303               	bcf	3,6	;RP1=0, select bank0
  7909     1B34  0856               	movf	?___fladd,w
  7910     1B35  1683               	bsf	3,5	;RP0=1, select bank1
  7911     1B36  1303               	bcf	3,6	;RP1=0, select bank1
  7912     1B37  00A0               	movwf	?___flsub^(0+128)
  7913     1B38                     l801:
  7914     1B38  0008               	return
  7915     1B39                     __end_of___flsub:
  7916                           
  7917                           	psect	text17
  7918     133F                     __ptext17:	
  7919 ;; *************** function ___fladd *****************
  7920 ;; Defined at:
  7921 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  7922 ;; Parameters:    Size  Location     Type
  7923 ;;  b               4   54[BANK0 ] unsigned long 
  7924 ;;  a               4   58[BANK0 ] unsigned long 
  7925 ;; Auto vars:     Size  Location     Type
  7926 ;;  grs             1   73[BANK0 ] unsigned char 
  7927 ;;  bexp            1   72[BANK0 ] unsigned char 
  7928 ;;  aexp            1   71[BANK0 ] unsigned char 
  7929 ;;  signs           1   70[BANK0 ] unsigned char 
  7930 ;; Return value:  Size  Location     Type
  7931 ;;                  4   54[BANK0 ] unsigned char 
  7932 ;; Registers used:
  7933 ;;		wreg, status,2, status,0, btemp+1
  7934 ;; Tracked objects:
  7935 ;;		On entry : 0/0
  7936 ;;		On exit  : 0/0
  7937 ;;		Unchanged: 0/0
  7938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7939 ;;      Params:         0       8       0       0       0
  7940 ;;      Locals:         0       4       0       0       0
  7941 ;;      Temps:          0       8       0       0       0
  7942 ;;      Totals:         0      20       0       0       0
  7943 ;;Total ram usage:       20 bytes
  7944 ;; Hardware stack levels used: 1
  7945 ;; Hardware stack levels required when called: 2
  7946 ;; This function calls:
  7947 ;;		Nothing
  7948 ;; This function is called by:
  7949 ;;		_sprintf
  7950 ;;		___flsub
  7951 ;; This function uses a non-reentrant model
  7952 ;;
  7953                           
  7954     133F                     ___fladd:	
  7955                           ;psect for function ___fladd
  7956                           
  7957     133F                     l2673:	
  7958                           ;incstack = 0
  7959                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7960                           
  7961     133F  1283               	bcf	3,5	;RP0=0, select bank0
  7962     1340  1303               	bcf	3,6	;RP1=0, select bank0
  7963     1341  0859               	movf	___fladd@b+3,w
  7964     1342  3980               	andlw	128
  7965     1343  00E6               	movwf	___fladd@signs
  7966     1344                     l2675:
  7967     1344  0859               	movf	___fladd@b+3,w
  7968     1345  00DE               	movwf	??___fladd
  7969     1346  075E               	addwf	??___fladd,w
  7970     1347  00E8               	movwf	___fladd@bexp
  7971     1348                     l2677:
  7972     1348  1FD8               	btfss	___fladd@b+2,7
  7973     1349  2B4B               	goto	u3611
  7974     134A  2B4C               	goto	u3610
  7975     134B                     u3611:
  7976     134B  2B4D               	goto	l2681
  7977     134C                     u3610:
  7978     134C                     l2679:
  7979     134C  1468               	bsf	___fladd@bexp,0
  7980     134D                     l2681:
  7981     134D  0868               	movf	___fladd@bexp,w
  7982     134E  1903               	btfsc	3,2
  7983     134F  2B51               	goto	u3621
  7984     1350  2B52               	goto	u3620
  7985     1351                     u3621:
  7986     1351  2B62               	goto	l2691
  7987     1352                     u3620:
  7988     1352                     l2683:
  7989     1352  0A68               	incf	___fladd@bexp,w
  7990     1353  1D03               	btfss	3,2
  7991     1354  2B56               	goto	u3631
  7992     1355  2B57               	goto	u3630
  7993     1356                     u3631:
  7994     1356  2B5F               	goto	l2687
  7995     1357                     u3630:
  7996     1357                     l2685:
  7997     1357  3000               	movlw	0
  7998     1358  00D9               	movwf	___fladd@b+3
  7999     1359  3000               	movlw	0
  8000     135A  00D8               	movwf	___fladd@b+2
  8001     135B  3000               	movlw	0
  8002     135C  00D7               	movwf	___fladd@b+1
  8003     135D  3000               	movlw	0
  8004     135E  00D6               	movwf	___fladd@b
  8005     135F                     l2687:
  8006     135F  17D8               	bsf	___fladd@b+2,7
  8007     1360                     l2689:
  8008     1360  01D9               	clrf	___fladd@b+3
  8009     1361  2B6A               	goto	l2693
  8010     1362                     l2691:
  8011     1362  3000               	movlw	0
  8012     1363  00D9               	movwf	___fladd@b+3
  8013     1364  3000               	movlw	0
  8014     1365  00D8               	movwf	___fladd@b+2
  8015     1366  3000               	movlw	0
  8016     1367  00D7               	movwf	___fladd@b+1
  8017     1368  3000               	movlw	0
  8018     1369  00D6               	movwf	___fladd@b
  8019     136A                     l2693:
  8020     136A  085D               	movf	___fladd@a+3,w
  8021     136B  3980               	andlw	128
  8022     136C  00E7               	movwf	___fladd@aexp
  8023     136D                     l2695:
  8024     136D  0867               	movf	___fladd@aexp,w
  8025     136E  0666               	xorwf	___fladd@signs,w
  8026     136F  1903               	skipnz
  8027     1370  2B72               	goto	u3641
  8028     1371  2B73               	goto	u3640
  8029     1372                     u3641:
  8030     1372  2B74               	goto	l2699
  8031     1373                     u3640:
  8032     1373                     l2697:
  8033     1373  1766               	bsf	___fladd@signs,6
  8034     1374                     l2699:
  8035     1374  085D               	movf	___fladd@a+3,w
  8036     1375  00DE               	movwf	??___fladd
  8037     1376  075E               	addwf	??___fladd,w
  8038     1377  00E7               	movwf	___fladd@aexp
  8039     1378                     l2701:
  8040     1378  1FDC               	btfss	___fladd@a+2,7
  8041     1379  2B7B               	goto	u3651
  8042     137A  2B7C               	goto	u3650
  8043     137B                     u3651:
  8044     137B  2B7D               	goto	l2705
  8045     137C                     u3650:
  8046     137C                     l2703:
  8047     137C  1467               	bsf	___fladd@aexp,0
  8048     137D                     l2705:
  8049     137D  0867               	movf	___fladd@aexp,w
  8050     137E  1903               	btfsc	3,2
  8051     137F  2B81               	goto	u3661
  8052     1380  2B82               	goto	u3660
  8053     1381                     u3661:
  8054     1381  2B92               	goto	l2715
  8055     1382                     u3660:
  8056     1382                     l2707:
  8057     1382  0A67               	incf	___fladd@aexp,w
  8058     1383  1D03               	btfss	3,2
  8059     1384  2B86               	goto	u3671
  8060     1385  2B87               	goto	u3670
  8061     1386                     u3671:
  8062     1386  2B8F               	goto	l2711
  8063     1387                     u3670:
  8064     1387                     l2709:
  8065     1387  3000               	movlw	0
  8066     1388  00DD               	movwf	___fladd@a+3
  8067     1389  3000               	movlw	0
  8068     138A  00DC               	movwf	___fladd@a+2
  8069     138B  3000               	movlw	0
  8070     138C  00DB               	movwf	___fladd@a+1
  8071     138D  3000               	movlw	0
  8072     138E  00DA               	movwf	___fladd@a
  8073     138F                     l2711:
  8074     138F  17DC               	bsf	___fladd@a+2,7
  8075     1390                     l2713:
  8076     1390  01DD               	clrf	___fladd@a+3
  8077     1391  2B9A               	goto	l755
  8078     1392                     l2715:
  8079     1392  3000               	movlw	0
  8080     1393  00DD               	movwf	___fladd@a+3
  8081     1394  3000               	movlw	0
  8082     1395  00DC               	movwf	___fladd@a+2
  8083     1396  3000               	movlw	0
  8084     1397  00DB               	movwf	___fladd@a+1
  8085     1398  3000               	movlw	0
  8086     1399  00DA               	movwf	___fladd@a
  8087     139A                     l755:
  8088     139A  0868               	movf	___fladd@bexp,w
  8089     139B  0267               	subwf	___fladd@aexp,w
  8090     139C  1803               	skipnc
  8091     139D  2B9F               	goto	u3681
  8092     139E  2BA0               	goto	u3680
  8093     139F                     u3681:
  8094     139F  2BC6               	goto	l2751
  8095     13A0                     u3680:
  8096     13A0                     l2717:
  8097     13A0  1F66               	btfss	___fladd@signs,6
  8098     13A1  2BA3               	goto	u3691
  8099     13A2  2BA4               	goto	u3690
  8100     13A3                     u3691:
  8101     13A3  2BA8               	goto	l2721
  8102     13A4                     u3690:
  8103     13A4                     l2719:
  8104     13A4  3080               	movlw	128
  8105     13A5  00DE               	movwf	??___fladd
  8106     13A6  085E               	movf	??___fladd,w
  8107     13A7  06E6               	xorwf	___fladd@signs,f
  8108     13A8                     l2721:
  8109     13A8  0868               	movf	___fladd@bexp,w
  8110     13A9  00E9               	movwf	___fladd@grs
  8111     13AA                     l2723:
  8112     13AA  0867               	movf	___fladd@aexp,w
  8113     13AB  00E8               	movwf	___fladd@bexp
  8114     13AC                     l2725:
  8115     13AC  0869               	movf	___fladd@grs,w
  8116     13AD  00E7               	movwf	___fladd@aexp
  8117     13AE                     l2727:
  8118     13AE  0856               	movf	___fladd@b,w
  8119     13AF  00E9               	movwf	___fladd@grs
  8120     13B0                     l2729:
  8121     13B0  085A               	movf	___fladd@a,w
  8122     13B1  00D6               	movwf	___fladd@b
  8123     13B2                     l2731:
  8124     13B2  0869               	movf	___fladd@grs,w
  8125     13B3  00DA               	movwf	___fladd@a
  8126     13B4                     l2733:
  8127     13B4  0857               	movf	___fladd@b+1,w
  8128     13B5  00E9               	movwf	___fladd@grs
  8129     13B6                     l2735:
  8130     13B6  085B               	movf	___fladd@a+1,w
  8131     13B7  00D7               	movwf	___fladd@b+1
  8132     13B8                     l2737:
  8133     13B8  0869               	movf	___fladd@grs,w
  8134     13B9  00DB               	movwf	___fladd@a+1
  8135     13BA                     l2739:
  8136     13BA  0858               	movf	___fladd@b+2,w
  8137     13BB  00E9               	movwf	___fladd@grs
  8138     13BC                     l2741:
  8139     13BC  085C               	movf	___fladd@a+2,w
  8140     13BD  00D8               	movwf	___fladd@b+2
  8141     13BE                     l2743:
  8142     13BE  0869               	movf	___fladd@grs,w
  8143     13BF  00DC               	movwf	___fladd@a+2
  8144     13C0                     l2745:
  8145     13C0  0859               	movf	___fladd@b+3,w
  8146     13C1  00E9               	movwf	___fladd@grs
  8147     13C2                     l2747:
  8148     13C2  085D               	movf	___fladd@a+3,w
  8149     13C3  00D9               	movwf	___fladd@b+3
  8150     13C4                     l2749:
  8151     13C4  0869               	movf	___fladd@grs,w
  8152     13C5  00DD               	movwf	___fladd@a+3
  8153     13C6                     l2751:
  8154     13C6  01E9               	clrf	___fladd@grs
  8155     13C7                     l2753:
  8156     13C7  0867               	movf	___fladd@aexp,w
  8157     13C8  00DE               	movwf	??___fladd
  8158     13C9  01DF               	clrf	??___fladd+1
  8159     13CA  085F               	movf	??___fladd+1,w
  8160     13CB  00E1               	movwf	??___fladd+3
  8161     13CC  0868               	movf	___fladd@bexp,w
  8162     13CD  025E               	subwf	??___fladd,w
  8163     13CE  00E0               	movwf	??___fladd+2
  8164     13CF  1C03               	skipc
  8165     13D0  03E1               	decf	??___fladd+3,f
  8166     13D1  0861               	movf	??___fladd+3,w
  8167     13D2  3A80               	xorlw	128
  8168     13D3  00FF               	movwf	btemp+1
  8169     13D4  3080               	movlw	128
  8170     13D5  027F               	subwf	btemp+1,w
  8171     13D6  1D03               	skipz
  8172     13D7  2BDA               	goto	u3705
  8173     13D8  301A               	movlw	26
  8174     13D9  0260               	subwf	??___fladd+2,w
  8175     13DA                     u3705:
  8176     13DA  1C03               	skipc
  8177     13DB  2BDD               	goto	u3701
  8178     13DC  2BDE               	goto	u3700
  8179     13DD                     u3701:
  8180     13DD  2C15               	goto	l2769
  8181     13DE                     u3700:
  8182     13DE                     l2755:
  8183     13DE  1283               	bcf	3,5	;RP0=0, select bank0
  8184     13DF  1303               	bcf	3,6	;RP1=0, select bank0
  8185     13E0  0859               	movf	___fladd@b+3,w
  8186     13E1  0458               	iorwf	___fladd@b+2,w
  8187     13E2  0457               	iorwf	___fladd@b+1,w
  8188     13E3  0456               	iorwf	___fladd@b,w
  8189     13E4  1D03               	skipz
  8190     13E5  2BE7               	goto	u3711
  8191     13E6  2BE9               	goto	u3710
  8192     13E7                     u3711:
  8193     13E7  3001               	movlw	1
  8194     13E8  2BEA               	goto	u3720
  8195     13E9                     u3710:
  8196     13E9  3000               	movlw	0
  8197     13EA                     u3720:
  8198     13EA  00E9               	movwf	___fladd@grs
  8199     13EB  3000               	movlw	0
  8200     13EC  00D9               	movwf	___fladd@b+3
  8201     13ED  3000               	movlw	0
  8202     13EE  00D8               	movwf	___fladd@b+2
  8203     13EF  3000               	movlw	0
  8204     13F0  00D7               	movwf	___fladd@b+1
  8205     13F1  3000               	movlw	0
  8206     13F2  00D6               	movwf	___fladd@b
  8207     13F3  0867               	movf	___fladd@aexp,w
  8208     13F4  00E8               	movwf	___fladd@bexp
  8209     13F5  2C1D               	goto	l759
  8210     13F6                     l761:
  8211     13F6  1C69               	btfss	___fladd@grs,0
  8212     13F7  2BF9               	goto	u3731
  8213     13F8  2BFA               	goto	u3730
  8214     13F9                     u3731:
  8215     13F9  2C01               	goto	l2759
  8216     13FA                     u3730:
  8217     13FA                     l2757:
  8218     13FA  0869               	movf	___fladd@grs,w
  8219     13FB  00DE               	movwf	??___fladd
  8220     13FC  1003               	clrc
  8221     13FD  0C5E               	rrf	??___fladd,w
  8222     13FE  3801               	iorlw	1
  8223     13FF  00E9               	movwf	___fladd@grs
  8224     1400  2C03               	goto	l2761
  8225     1401                     l2759:
  8226     1401  1003               	clrc
  8227     1402  0CE9               	rrf	___fladd@grs,f
  8228     1403                     l2761:
  8229     1403  1C56               	btfss	___fladd@b,0
  8230     1404  2C06               	goto	u3741
  8231     1405  2C07               	goto	u3740
  8232     1406                     u3741:
  8233     1406  2C08               	goto	l2765
  8234     1407                     u3740:
  8235     1407                     l2763:
  8236     1407  17E9               	bsf	___fladd@grs,7
  8237     1408                     l2765:
  8238     1408  3001               	movlw	1
  8239     1409  00DE               	movwf	??___fladd
  8240     140A                     u3755:
  8241     140A  0D59               	rlf	___fladd@b+3,w
  8242     140B  0CD9               	rrf	___fladd@b+3,f
  8243     140C  0CD8               	rrf	___fladd@b+2,f
  8244     140D  0CD7               	rrf	___fladd@b+1,f
  8245     140E  0CD6               	rrf	___fladd@b,f
  8246     140F  0BDE               	decfsz	??___fladd& (0+127),f
  8247     1410  2C0A               	goto	u3755
  8248     1411                     l2767:
  8249     1411  3001               	movlw	1
  8250     1412  00DE               	movwf	??___fladd
  8251     1413  085E               	movf	??___fladd,w
  8252     1414  07E8               	addwf	___fladd@bexp,f
  8253     1415                     l2769:
  8254     1415  1283               	bcf	3,5	;RP0=0, select bank0
  8255     1416  1303               	bcf	3,6	;RP1=0, select bank0
  8256     1417  0867               	movf	___fladd@aexp,w
  8257     1418  0268               	subwf	___fladd@bexp,w
  8258     1419  1C03               	skipc
  8259     141A  2C1C               	goto	u3761
  8260     141B  2C1D               	goto	u3760
  8261     141C                     u3761:
  8262     141C  2BF6               	goto	l761
  8263     141D                     u3760:
  8264     141D                     l759:
  8265     141D  1B66               	btfsc	___fladd@signs,6
  8266     141E  2C20               	goto	u3771
  8267     141F  2C21               	goto	u3770
  8268     1420                     u3771:
  8269     1420  2C6A               	goto	l2795
  8270     1421                     u3770:
  8271     1421                     l2771:
  8272     1421  0868               	movf	___fladd@bexp,w
  8273     1422  1D03               	btfss	3,2
  8274     1423  2C25               	goto	u3781
  8275     1424  2C26               	goto	u3780
  8276     1425                     u3781:
  8277     1425  2C2F               	goto	l2777
  8278     1426                     u3780:
  8279     1426                     l2773:
  8280     1426  3000               	movlw	0
  8281     1427  00D9               	movwf	?___fladd+3
  8282     1428  3000               	movlw	0
  8283     1429  00D8               	movwf	?___fladd+2
  8284     142A  3000               	movlw	0
  8285     142B  00D7               	movwf	?___fladd+1
  8286     142C  3000               	movlw	0
  8287     142D  00D6               	movwf	?___fladd
  8288     142E  2D96               	goto	l768
  8289     142F                     l2777:
  8290     142F  085A               	movf	___fladd@a,w
  8291     1430  07D6               	addwf	___fladd@b,f
  8292     1431  085B               	movf	___fladd@a+1,w
  8293     1432  1103               	clrz
  8294     1433  1803               	skipnc
  8295     1434  3E01               	addlw	1
  8296     1435  1903               	skipnz
  8297     1436  2C38               	goto	u3791
  8298     1437  07D7               	addwf	___fladd@b+1,f
  8299     1438                     u3791:
  8300     1438  085C               	movf	___fladd@a+2,w
  8301     1439  1103               	clrz
  8302     143A  1803               	skipnc
  8303     143B  3E01               	addlw	1
  8304     143C  1903               	skipnz
  8305     143D  2C3F               	goto	u3792
  8306     143E  07D8               	addwf	___fladd@b+2,f
  8307     143F                     u3792:
  8308     143F  085D               	movf	___fladd@a+3,w
  8309     1440  1103               	clrz
  8310     1441  1803               	skipnc
  8311     1442  3E01               	addlw	1
  8312     1443  1903               	skipnz
  8313     1444  2C46               	goto	u3793
  8314     1445  07D9               	addwf	___fladd@b+3,f
  8315     1446                     u3793:
  8316     1446                     l2779:
  8317     1446  1C59               	btfss	___fladd@b+3,0
  8318     1447  2C49               	goto	u3801
  8319     1448  2C4A               	goto	u3800
  8320     1449                     u3801:
  8321     1449  2D1E               	goto	l2829
  8322     144A                     u3800:
  8323     144A                     l2781:
  8324     144A  1C69               	btfss	___fladd@grs,0
  8325     144B  2C4D               	goto	u3811
  8326     144C  2C4E               	goto	u3810
  8327     144D                     u3811:
  8328     144D  2C55               	goto	l2785
  8329     144E                     u3810:
  8330     144E                     l2783:
  8331     144E  0869               	movf	___fladd@grs,w
  8332     144F  00DE               	movwf	??___fladd
  8333     1450  1003               	clrc
  8334     1451  0C5E               	rrf	??___fladd,w
  8335     1452  3801               	iorlw	1
  8336     1453  00E9               	movwf	___fladd@grs
  8337     1454  2C57               	goto	l2787
  8338     1455                     l2785:
  8339     1455  1003               	clrc
  8340     1456  0CE9               	rrf	___fladd@grs,f
  8341     1457                     l2787:
  8342     1457  1C56               	btfss	___fladd@b,0
  8343     1458  2C5A               	goto	u3821
  8344     1459  2C5B               	goto	u3820
  8345     145A                     u3821:
  8346     145A  2C5C               	goto	l2791
  8347     145B                     u3820:
  8348     145B                     l2789:
  8349     145B  17E9               	bsf	___fladd@grs,7
  8350     145C                     l2791:
  8351     145C  3001               	movlw	1
  8352     145D  00DE               	movwf	??___fladd
  8353     145E                     u3835:
  8354     145E  0D59               	rlf	___fladd@b+3,w
  8355     145F  0CD9               	rrf	___fladd@b+3,f
  8356     1460  0CD8               	rrf	___fladd@b+2,f
  8357     1461  0CD7               	rrf	___fladd@b+1,f
  8358     1462  0CD6               	rrf	___fladd@b,f
  8359     1463  0BDE               	decfsz	??___fladd& (0+127),f
  8360     1464  2C5E               	goto	u3835
  8361     1465                     l2793:
  8362     1465  3001               	movlw	1
  8363     1466  00DE               	movwf	??___fladd
  8364     1467  085E               	movf	??___fladd,w
  8365     1468  07E8               	addwf	___fladd@bexp,f
  8366     1469  2D1E               	goto	l2829
  8367     146A                     l2795:
  8368     146A  0859               	movf	___fladd@b+3,w
  8369     146B  3A80               	xorlw	128
  8370     146C  00FF               	movwf	btemp+1
  8371     146D  085D               	movf	___fladd@a+3,w
  8372     146E  3A80               	xorlw	128
  8373     146F  027F               	subwf	btemp+1,w
  8374     1470  1D03               	skipz
  8375     1471  2C7C               	goto	u3843
  8376     1472  085C               	movf	___fladd@a+2,w
  8377     1473  0258               	subwf	___fladd@b+2,w
  8378     1474  1D03               	skipz
  8379     1475  2C7C               	goto	u3843
  8380     1476  085B               	movf	___fladd@a+1,w
  8381     1477  0257               	subwf	___fladd@b+1,w
  8382     1478  1D03               	skipz
  8383     1479  2C7C               	goto	u3843
  8384     147A  085A               	movf	___fladd@a,w
  8385     147B  0256               	subwf	___fladd@b,w
  8386     147C                     u3843:
  8387     147C  1803               	skipnc
  8388     147D  2C7F               	goto	u3841
  8389     147E  2C80               	goto	u3840
  8390     147F                     u3841:
  8391     147F  2CD8               	goto	l2805
  8392     1480                     u3840:
  8393     1480                     l2797:
  8394     1480  30FF               	movlw	255
  8395     1481  00DE               	movwf	??___fladd
  8396     1482  30FF               	movlw	255
  8397     1483  00DF               	movwf	??___fladd+1
  8398     1484  30FF               	movlw	255
  8399     1485  00E0               	movwf	??___fladd+2
  8400     1486  30FF               	movlw	255
  8401     1487  00E1               	movwf	??___fladd+3
  8402     1488  085A               	movf	___fladd@a,w
  8403     1489  00E2               	movwf	??___fladd+4
  8404     148A  085B               	movf	___fladd@a+1,w
  8405     148B  00E3               	movwf	??___fladd+5
  8406     148C  085C               	movf	___fladd@a+2,w
  8407     148D  00E4               	movwf	??___fladd+6
  8408     148E  085D               	movf	___fladd@a+3,w
  8409     148F  00E5               	movwf	??___fladd+7
  8410     1490  0856               	movf	___fladd@b,w
  8411     1491  02E2               	subwf	??___fladd+4,f
  8412     1492  0857               	movf	___fladd@b+1,w
  8413     1493  1C03               	skipc
  8414     1494  0F57               	incfsz	___fladd@b+1,w
  8415     1495  2C97               	goto	u3851
  8416     1496  2C98               	goto	u3852
  8417     1497                     u3851:
  8418     1497  02E3               	subwf	??___fladd+5,f
  8419     1498                     u3852:
  8420     1498  0858               	movf	___fladd@b+2,w
  8421     1499  1C03               	skipc
  8422     149A  0F58               	incfsz	___fladd@b+2,w
  8423     149B  2C9D               	goto	u3853
  8424     149C  2C9E               	goto	u3854
  8425     149D                     u3853:
  8426     149D  02E4               	subwf	??___fladd+6,f
  8427     149E                     u3854:
  8428     149E  0859               	movf	___fladd@b+3,w
  8429     149F  1C03               	skipc
  8430     14A0  0F59               	incfsz	___fladd@b+3,w
  8431     14A1  2CA3               	goto	u3855
  8432     14A2  2CA4               	goto	u3856
  8433     14A3                     u3855:
  8434     14A3  02E5               	subwf	??___fladd+7,f
  8435     14A4                     u3856:
  8436     14A4  0862               	movf	??___fladd+4,w
  8437     14A5  07DE               	addwf	??___fladd,f
  8438     14A6  0863               	movf	??___fladd+5,w
  8439     14A7  1803               	skipnc
  8440     14A8  0F63               	incfsz	??___fladd+5,w
  8441     14A9  2CAB               	goto	u3860
  8442     14AA  2CAC               	goto	u3861
  8443     14AB                     u3860:
  8444     14AB  07DF               	addwf	??___fladd+1,f
  8445     14AC                     u3861:
  8446     14AC  0864               	movf	??___fladd+6,w
  8447     14AD  1803               	skipnc
  8448     14AE  0F64               	incfsz	??___fladd+6,w
  8449     14AF  2CB1               	goto	u3862
  8450     14B0  2CB2               	goto	u3863
  8451     14B1                     u3862:
  8452     14B1  07E0               	addwf	??___fladd+2,f
  8453     14B2                     u3863:
  8454     14B2  0865               	movf	??___fladd+7,w
  8455     14B3  1803               	skipnc
  8456     14B4  0A65               	incf	??___fladd+7,w
  8457     14B5  07E1               	addwf	??___fladd+3,f
  8458     14B6  0861               	movf	??___fladd+3,w
  8459     14B7  00D9               	movwf	___fladd@b+3
  8460     14B8  0860               	movf	??___fladd+2,w
  8461     14B9  00D8               	movwf	___fladd@b+2
  8462     14BA  085F               	movf	??___fladd+1,w
  8463     14BB  00D7               	movwf	___fladd@b+1
  8464     14BC  085E               	movf	??___fladd,w
  8465     14BD  00D6               	movwf	___fladd@b
  8466     14BE                     l2799:
  8467     14BE  3080               	movlw	128
  8468     14BF  00DE               	movwf	??___fladd
  8469     14C0  085E               	movf	??___fladd,w
  8470     14C1  06E6               	xorwf	___fladd@signs,f
  8471     14C2  09E9               	comf	___fladd@grs,f
  8472     14C3  0AE9               	incf	___fladd@grs,f
  8473     14C4                     l2801:
  8474     14C4  0869               	movf	___fladd@grs,w
  8475     14C5  1D03               	btfss	3,2
  8476     14C6  2CC8               	goto	u3871
  8477     14C7  2CC9               	goto	u3870
  8478     14C8                     u3871:
  8479     14C8  2CE6               	goto	l776
  8480     14C9                     u3870:
  8481     14C9                     l2803:
  8482     14C9  3001               	movlw	1
  8483     14CA  07D6               	addwf	___fladd@b,f
  8484     14CB  3000               	movlw	0
  8485     14CC  1803               	skipnc
  8486     14CD  3001               	movlw	1
  8487     14CE  07D7               	addwf	___fladd@b+1,f
  8488     14CF  3000               	movlw	0
  8489     14D0  1803               	skipnc
  8490     14D1  3001               	movlw	1
  8491     14D2  07D8               	addwf	___fladd@b+2,f
  8492     14D3  3000               	movlw	0
  8493     14D4  1803               	skipnc
  8494     14D5  3001               	movlw	1
  8495     14D6  07D9               	addwf	___fladd@b+3,f
  8496     14D7  2CE6               	goto	l776
  8497     14D8                     l2805:
  8498     14D8  085A               	movf	___fladd@a,w
  8499     14D9  02D6               	subwf	___fladd@b,f
  8500     14DA  085B               	movf	___fladd@a+1,w
  8501     14DB  1C03               	skipc
  8502     14DC  0F5B               	incfsz	___fladd@a+1,w
  8503     14DD  02D7               	subwf	___fladd@b+1,f
  8504     14DE  085C               	movf	___fladd@a+2,w
  8505     14DF  1C03               	skipc
  8506     14E0  0F5C               	incfsz	___fladd@a+2,w
  8507     14E1  02D8               	subwf	___fladd@b+2,f
  8508     14E2  085D               	movf	___fladd@a+3,w
  8509     14E3  1C03               	skipc
  8510     14E4  0F5D               	incfsz	___fladd@a+3,w
  8511     14E5  02D9               	subwf	___fladd@b+3,f
  8512     14E6                     l776:
  8513     14E6  0859               	movf	___fladd@b+3,w
  8514     14E7  0458               	iorwf	___fladd@b+2,w
  8515     14E8  0457               	iorwf	___fladd@b+1,w
  8516     14E9  0456               	iorwf	___fladd@b,w
  8517     14EA  1D03               	skipz
  8518     14EB  2CED               	goto	u3881
  8519     14EC  2CEE               	goto	u3880
  8520     14ED                     u3881:
  8521     14ED  2D1A               	goto	l2827
  8522     14EE                     u3880:
  8523     14EE                     l2807:
  8524     14EE  0869               	movf	___fladd@grs,w
  8525     14EF  1D03               	btfss	3,2
  8526     14F0  2CF2               	goto	u3891
  8527     14F1  2CF3               	goto	u3890
  8528     14F2                     u3891:
  8529     14F2  2D1A               	goto	l2827
  8530     14F3                     u3890:
  8531     14F3                     l2809:
  8532     14F3  3000               	movlw	0
  8533     14F4  00D9               	movwf	?___fladd+3
  8534     14F5  3000               	movlw	0
  8535     14F6  00D8               	movwf	?___fladd+2
  8536     14F7  3000               	movlw	0
  8537     14F8  00D7               	movwf	?___fladd+1
  8538     14F9  3000               	movlw	0
  8539     14FA  00D6               	movwf	?___fladd
  8540     14FB  2D96               	goto	l768
  8541     14FC                     l2813:
  8542     14FC  3001               	movlw	1
  8543     14FD  00DE               	movwf	??___fladd
  8544     14FE                     u3905:
  8545     14FE  1003               	clrc
  8546     14FF  0DD6               	rlf	___fladd@b,f
  8547     1500  0DD7               	rlf	___fladd@b+1,f
  8548     1501  0DD8               	rlf	___fladd@b+2,f
  8549     1502  0DD9               	rlf	___fladd@b+3,f
  8550     1503  0BDE               	decfsz	??___fladd,f
  8551     1504  2CFE               	goto	u3905
  8552     1505                     l2815:
  8553     1505  1FE9               	btfss	___fladd@grs,7
  8554     1506  2D08               	goto	u3911
  8555     1507  2D09               	goto	u3910
  8556     1508                     u3911:
  8557     1508  2D0A               	goto	l780
  8558     1509                     u3910:
  8559     1509                     l2817:
  8560     1509  1456               	bsf	___fladd@b,0
  8561     150A                     l780:
  8562     150A  1C69               	btfss	___fladd@grs,0
  8563     150B  2D0D               	goto	u3921
  8564     150C  2D0E               	goto	u3920
  8565     150D                     u3921:
  8566     150D  2D11               	goto	l2821
  8567     150E                     u3920:
  8568     150E                     l2819:
  8569     150E  1403               	setc
  8570     150F  0DE9               	rlf	___fladd@grs,f
  8571     1510  2D13               	goto	l2823
  8572     1511                     l2821:
  8573     1511  1003               	clrc
  8574     1512  0DE9               	rlf	___fladd@grs,f
  8575     1513                     l2823:
  8576     1513  0868               	movf	___fladd@bexp,w
  8577     1514  1903               	btfsc	3,2
  8578     1515  2D17               	goto	u3931
  8579     1516  2D18               	goto	u3930
  8580     1517                     u3931:
  8581     1517  2D1A               	goto	l2827
  8582     1518                     u3930:
  8583     1518                     l2825:
  8584     1518  3001               	movlw	1
  8585     1519  02E8               	subwf	___fladd@bexp,f
  8586     151A                     l2827:
  8587     151A  1FD8               	btfss	___fladd@b+2,7
  8588     151B  2D1D               	goto	u3941
  8589     151C  2D1E               	goto	u3940
  8590     151D                     u3941:
  8591     151D  2CFC               	goto	l2813
  8592     151E                     u3940:
  8593     151E                     l2829:
  8594     151E  01E7               	clrf	___fladd@aexp
  8595     151F                     l2831:
  8596     151F  1FE9               	btfss	___fladd@grs,7
  8597     1520  2D22               	goto	u3951
  8598     1521  2D23               	goto	u3950
  8599     1522                     u3951:
  8600     1522  2D31               	goto	l2839
  8601     1523                     u3950:
  8602     1523                     l2833:
  8603     1523  0869               	movf	___fladd@grs,w
  8604     1524  397F               	andlw	127
  8605     1525  1903               	btfsc	3,2
  8606     1526  2D28               	goto	u3961
  8607     1527  2D29               	goto	u3960
  8608     1528                     u3961:
  8609     1528  2D2C               	goto	l786
  8610     1529                     u3960:
  8611     1529                     l2835:
  8612     1529  01E7               	clrf	___fladd@aexp
  8613     152A  0AE7               	incf	___fladd@aexp,f
  8614     152B  2D31               	goto	l2839
  8615     152C                     l786:
  8616     152C  1C56               	btfss	___fladd@b,0
  8617     152D  2D2F               	goto	u3971
  8618     152E  2D30               	goto	u3970
  8619     152F                     u3971:
  8620     152F  2D31               	goto	l2839
  8621     1530                     u3970:
  8622     1530  2D29               	goto	l2835
  8623     1531                     l2839:
  8624     1531  0867               	movf	___fladd@aexp,w
  8625     1532  1903               	btfsc	3,2
  8626     1533  2D35               	goto	u3981
  8627     1534  2D36               	goto	u3980
  8628     1535                     u3981:
  8629     1535  2D6A               	goto	l789
  8630     1536                     u3980:
  8631     1536                     l2841:
  8632     1536  3001               	movlw	1
  8633     1537  07D6               	addwf	___fladd@b,f
  8634     1538  3000               	movlw	0
  8635     1539  1803               	skipnc
  8636     153A  3001               	movlw	1
  8637     153B  07D7               	addwf	___fladd@b+1,f
  8638     153C  3000               	movlw	0
  8639     153D  1803               	skipnc
  8640     153E  3001               	movlw	1
  8641     153F  07D8               	addwf	___fladd@b+2,f
  8642     1540  3000               	movlw	0
  8643     1541  1803               	skipnc
  8644     1542  3001               	movlw	1
  8645     1543  07D9               	addwf	___fladd@b+3,f
  8646     1544                     l2843:
  8647     1544  1C59               	btfss	___fladd@b+3,0
  8648     1545  2D47               	goto	u3991
  8649     1546  2D48               	goto	u3990
  8650     1547                     u3991:
  8651     1547  2D6A               	goto	l789
  8652     1548                     u3990:
  8653     1548                     l2845:
  8654     1548  0856               	movf	___fladd@b,w
  8655     1549  00DE               	movwf	??___fladd
  8656     154A  0857               	movf	___fladd@b+1,w
  8657     154B  00DF               	movwf	??___fladd+1
  8658     154C  0858               	movf	___fladd@b+2,w
  8659     154D  00E0               	movwf	??___fladd+2
  8660     154E  0859               	movf	___fladd@b+3,w
  8661     154F  00E1               	movwf	??___fladd+3
  8662     1550  3001               	movlw	1
  8663     1551  00E2               	movwf	??___fladd+4
  8664     1552                     u4005:
  8665     1552  0D61               	rlf	??___fladd+3,w
  8666     1553  0CE1               	rrf	??___fladd+3,f
  8667     1554  0CE0               	rrf	??___fladd+2,f
  8668     1555  0CDF               	rrf	??___fladd+1,f
  8669     1556  0CDE               	rrf	??___fladd,f
  8670     1557                     u4000:
  8671     1557  0BE2               	decfsz	??___fladd+4,f
  8672     1558  2D52               	goto	u4005
  8673     1559  0861               	movf	??___fladd+3,w
  8674     155A  00D9               	movwf	___fladd@b+3
  8675     155B  0860               	movf	??___fladd+2,w
  8676     155C  00D8               	movwf	___fladd@b+2
  8677     155D  085F               	movf	??___fladd+1,w
  8678     155E  00D7               	movwf	___fladd@b+1
  8679     155F  085E               	movf	??___fladd,w
  8680     1560  00D6               	movwf	___fladd@b
  8681     1561  0A68               	incf	___fladd@bexp,w
  8682     1562  1903               	btfsc	3,2
  8683     1563  2D65               	goto	u4011
  8684     1564  2D66               	goto	u4010
  8685     1565                     u4011:
  8686     1565  2D6A               	goto	l789
  8687     1566                     u4010:
  8688     1566                     l2847:
  8689     1566  3001               	movlw	1
  8690     1567  00DE               	movwf	??___fladd
  8691     1568  085E               	movf	??___fladd,w
  8692     1569  07E8               	addwf	___fladd@bexp,f
  8693     156A                     l789:
  8694     156A  0A68               	incf	___fladd@bexp,w
  8695     156B  1903               	btfsc	3,2
  8696     156C  2D6E               	goto	u4021
  8697     156D  2D6F               	goto	u4020
  8698     156E                     u4021:
  8699     156E  2D74               	goto	l2851
  8700     156F                     u4020:
  8701     156F                     l2849:
  8702     156F  0868               	movf	___fladd@bexp,w
  8703     1570  1D03               	btfss	3,2
  8704     1571  2D73               	goto	u4031
  8705     1572  2D74               	goto	u4030
  8706     1573                     u4031:
  8707     1573  2D82               	goto	l2857
  8708     1574                     u4030:
  8709     1574                     l2851:
  8710     1574  3000               	movlw	0
  8711     1575  00D9               	movwf	___fladd@b+3
  8712     1576  3000               	movlw	0
  8713     1577  00D8               	movwf	___fladd@b+2
  8714     1578  3000               	movlw	0
  8715     1579  00D7               	movwf	___fladd@b+1
  8716     157A  3000               	movlw	0
  8717     157B  00D6               	movwf	___fladd@b
  8718     157C                     l2853:
  8719     157C  0868               	movf	___fladd@bexp,w
  8720     157D  1D03               	btfss	3,2
  8721     157E  2D80               	goto	u4041
  8722     157F  2D81               	goto	u4040
  8723     1580                     u4041:
  8724     1580  2D82               	goto	l2857
  8725     1581                     u4040:
  8726     1581                     l2855:
  8727     1581  01E6               	clrf	___fladd@signs
  8728     1582                     l2857:
  8729     1582  1C68               	btfss	___fladd@bexp,0
  8730     1583  2D85               	goto	u4051
  8731     1584  2D86               	goto	u4050
  8732     1585                     u4051:
  8733     1585  2D88               	goto	l2861
  8734     1586                     u4050:
  8735     1586                     l2859:
  8736     1586  17D8               	bsf	___fladd@b+2,7
  8737     1587  2D8C               	goto	l797
  8738     1588                     l2861:
  8739     1588  307F               	movlw	127
  8740     1589  00DE               	movwf	??___fladd
  8741     158A  085E               	movf	??___fladd,w
  8742     158B  05D8               	andwf	___fladd@b+2,f
  8743     158C                     l797:
  8744     158C  0868               	movf	___fladd@bexp,w
  8745     158D  00DE               	movwf	??___fladd
  8746     158E  1003               	clrc
  8747     158F  0C5E               	rrf	??___fladd,w
  8748     1590  00D9               	movwf	___fladd@b+3
  8749     1591                     l2863:
  8750     1591  1FE6               	btfss	___fladd@signs,7
  8751     1592  2D94               	goto	u4061
  8752     1593  2D95               	goto	u4060
  8753     1594                     u4061:
  8754     1594  2D96               	goto	l798
  8755     1595                     u4060:
  8756     1595                     l2865:
  8757     1595  17D9               	bsf	___fladd@b+3,7
  8758     1596                     l798:
  8759     1596                     l768:
  8760     1596  0008               	return
  8761     1597                     __end_of___fladd:
  8762                           
  8763                           	psect	text18
  8764     189C                     __ptext18:	
  8765 ;; *************** function ___flneg *****************
  8766 ;; Defined at:
  8767 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flneg.c"
  8768 ;; Parameters:    Size  Location     Type
  8769 ;;  f1              4    2[COMMON] unsigned char 
  8770 ;; Auto vars:     Size  Location     Type
  8771 ;;		None
  8772 ;; Return value:  Size  Location     Type
  8773 ;;                  4    2[COMMON] unsigned char 
  8774 ;; Registers used:
  8775 ;;		wreg
  8776 ;; Tracked objects:
  8777 ;;		On entry : 0/0
  8778 ;;		On exit  : 0/0
  8779 ;;		Unchanged: 0/0
  8780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8781 ;;      Params:         4       0       0       0       0
  8782 ;;      Locals:         0       0       0       0       0
  8783 ;;      Temps:          0       0       0       0       0
  8784 ;;      Totals:         4       0       0       0       0
  8785 ;;Total ram usage:        4 bytes
  8786 ;; Hardware stack levels used: 1
  8787 ;; Hardware stack levels required when called: 2
  8788 ;; This function calls:
  8789 ;;		Nothing
  8790 ;; This function is called by:
  8791 ;;		_sprintf
  8792 ;; This function uses a non-reentrant model
  8793 ;;
  8794                           
  8795     189C                     ___flneg:	
  8796                           ;psect for function ___flneg
  8797                           
  8798     189C                     l3271:	
  8799                           ;incstack = 0
  8800                           ; Regs used in ___flneg: [wreg]
  8801                           
  8802     189C  0875               	movf	___flneg@f1+3,w
  8803     189D  0474               	iorwf	___flneg@f1+2,w
  8804     189E  0473               	iorwf	___flneg@f1+1,w
  8805     189F  0472               	iorwf	___flneg@f1,w
  8806     18A0  1903               	skipnz
  8807     18A1  28A3               	goto	u5181
  8808     18A2  28A4               	goto	u5180
  8809     18A3                     u5181:
  8810     18A3  28A6               	goto	l3275
  8811     18A4                     u5180:
  8812     18A4                     l3273:
  8813     18A4  3080               	movlw	128
  8814     18A5  06F5               	xorwf	___flneg@f1+3,f
  8815     18A6                     l3275:
  8816     18A6                     l627:
  8817     18A6  0008               	return
  8818     18A7                     __end_of___flneg:
  8819                           
  8820                           	psect	text19
  8821     1D89                     __ptext19:	
  8822 ;; *************** function ___flge *****************
  8823 ;; Defined at:
  8824 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flge.c"
  8825 ;; Parameters:    Size  Location     Type
  8826 ;;  ff1             4    2[COMMON] unsigned char 
  8827 ;;  ff2             4    6[COMMON] unsigned char 
  8828 ;; Auto vars:     Size  Location     Type
  8829 ;;		None
  8830 ;; Return value:  Size  Location     Type
  8831 ;;		None               void
  8832 ;; Registers used:
  8833 ;;		wreg, status,2, status,0
  8834 ;; Tracked objects:
  8835 ;;		On entry : 0/0
  8836 ;;		On exit  : 0/0
  8837 ;;		Unchanged: 0/0
  8838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8839 ;;      Params:         8       0       0       0       0
  8840 ;;      Locals:         0       0       0       0       0
  8841 ;;      Temps:          0       4       0       0       0
  8842 ;;      Totals:         8       4       0       0       0
  8843 ;;Total ram usage:       12 bytes
  8844 ;; Hardware stack levels used: 1
  8845 ;; Hardware stack levels required when called: 2
  8846 ;; This function calls:
  8847 ;;		Nothing
  8848 ;; This function is called by:
  8849 ;;		_sprintf
  8850 ;; This function uses a non-reentrant model
  8851 ;;
  8852                           
  8853     1D89                     ___flge:	
  8854                           ;psect for function ___flge
  8855                           
  8856     1D89                     l3251:	
  8857                           ;incstack = 0
  8858                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8859                           
  8860     1D89  3000               	movlw	0
  8861     1D8A  0572               	andwf	___flge@ff1,w
  8862     1D8B  1283               	bcf	3,5	;RP0=0, select bank0
  8863     1D8C  1303               	bcf	3,6	;RP1=0, select bank0
  8864     1D8D  00A0               	movwf	??___flge
  8865     1D8E  3000               	movlw	0
  8866     1D8F  0573               	andwf	___flge@ff1+1,w
  8867     1D90  00A1               	movwf	??___flge+1
  8868     1D91  3080               	movlw	128
  8869     1D92  0574               	andwf	___flge@ff1+2,w
  8870     1D93  00A2               	movwf	??___flge+2
  8871     1D94  307F               	movlw	127
  8872     1D95  0575               	andwf	___flge@ff1+3,w
  8873     1D96  00A3               	movwf	??___flge+3
  8874     1D97  0823               	movf	??___flge+3,w
  8875     1D98  0422               	iorwf	??___flge+2,w
  8876     1D99  0421               	iorwf	??___flge+1,w
  8877     1D9A  0420               	iorwf	??___flge,w
  8878     1D9B  1D03               	skipz
  8879     1D9C  2D9E               	goto	u5111
  8880     1D9D  2D9F               	goto	u5110
  8881     1D9E                     u5111:
  8882     1D9E  2DA7               	goto	l619
  8883     1D9F                     u5110:
  8884     1D9F                     l3253:
  8885     1D9F  3000               	movlw	0
  8886     1DA0  00F5               	movwf	___flge@ff1+3
  8887     1DA1  3000               	movlw	0
  8888     1DA2  00F4               	movwf	___flge@ff1+2
  8889     1DA3  3000               	movlw	0
  8890     1DA4  00F3               	movwf	___flge@ff1+1
  8891     1DA5  3000               	movlw	0
  8892     1DA6  00F2               	movwf	___flge@ff1
  8893     1DA7                     l619:
  8894     1DA7  3000               	movlw	0
  8895     1DA8  0576               	andwf	___flge@ff2,w
  8896     1DA9  00A0               	movwf	??___flge
  8897     1DAA  3000               	movlw	0
  8898     1DAB  0577               	andwf	___flge@ff2+1,w
  8899     1DAC  00A1               	movwf	??___flge+1
  8900     1DAD  3080               	movlw	128
  8901     1DAE  0578               	andwf	___flge@ff2+2,w
  8902     1DAF  00A2               	movwf	??___flge+2
  8903     1DB0  307F               	movlw	127
  8904     1DB1  0579               	andwf	___flge@ff2+3,w
  8905     1DB2  00A3               	movwf	??___flge+3
  8906     1DB3  0823               	movf	??___flge+3,w
  8907     1DB4  0422               	iorwf	??___flge+2,w
  8908     1DB5  0421               	iorwf	??___flge+1,w
  8909     1DB6  0420               	iorwf	??___flge,w
  8910     1DB7  1D03               	skipz
  8911     1DB8  2DBA               	goto	u5121
  8912     1DB9  2DBB               	goto	u5120
  8913     1DBA                     u5121:
  8914     1DBA  2DC3               	goto	l3257
  8915     1DBB                     u5120:
  8916     1DBB                     l3255:
  8917     1DBB  3000               	movlw	0
  8918     1DBC  00F9               	movwf	___flge@ff2+3
  8919     1DBD  3000               	movlw	0
  8920     1DBE  00F8               	movwf	___flge@ff2+2
  8921     1DBF  3000               	movlw	0
  8922     1DC0  00F7               	movwf	___flge@ff2+1
  8923     1DC1  3000               	movlw	0
  8924     1DC2  00F6               	movwf	___flge@ff2
  8925     1DC3                     l3257:
  8926     1DC3  1FF5               	btfss	___flge@ff1+3,7
  8927     1DC4  2DC6               	goto	u5131
  8928     1DC5  2DC7               	goto	u5130
  8929     1DC6                     u5131:
  8930     1DC6  2DEB               	goto	l3261
  8931     1DC7                     u5130:
  8932     1DC7                     l3259:
  8933     1DC7  3000               	movlw	0
  8934     1DC8  00A0               	movwf	??___flge
  8935     1DC9  3000               	movlw	0
  8936     1DCA  00A1               	movwf	??___flge+1
  8937     1DCB  3000               	movlw	0
  8938     1DCC  00A2               	movwf	??___flge+2
  8939     1DCD  3080               	movlw	128
  8940     1DCE  00A3               	movwf	??___flge+3
  8941     1DCF  0872               	movf	___flge@ff1,w
  8942     1DD0  02A0               	subwf	??___flge,f
  8943     1DD1  0873               	movf	___flge@ff1+1,w
  8944     1DD2  1C03               	skipc
  8945     1DD3  0F73               	incfsz	___flge@ff1+1,w
  8946     1DD4  2DD6               	goto	u5141
  8947     1DD5  2DD7               	goto	u5142
  8948     1DD6                     u5141:
  8949     1DD6  02A1               	subwf	??___flge+1,f
  8950     1DD7                     u5142:
  8951     1DD7  0874               	movf	___flge@ff1+2,w
  8952     1DD8  1C03               	skipc
  8953     1DD9  0F74               	incfsz	___flge@ff1+2,w
  8954     1DDA  2DDC               	goto	u5143
  8955     1DDB  2DDD               	goto	u5144
  8956     1DDC                     u5143:
  8957     1DDC  02A2               	subwf	??___flge+2,f
  8958     1DDD                     u5144:
  8959     1DDD  0875               	movf	___flge@ff1+3,w
  8960     1DDE  1C03               	skipc
  8961     1DDF  0F75               	incfsz	___flge@ff1+3,w
  8962     1DE0  2DE2               	goto	u5145
  8963     1DE1  2DE3               	goto	u5146
  8964     1DE2                     u5145:
  8965     1DE2  02A3               	subwf	??___flge+3,f
  8966     1DE3                     u5146:
  8967     1DE3  0823               	movf	??___flge+3,w
  8968     1DE4  00F5               	movwf	___flge@ff1+3
  8969     1DE5  0822               	movf	??___flge+2,w
  8970     1DE6  00F4               	movwf	___flge@ff1+2
  8971     1DE7  0821               	movf	??___flge+1,w
  8972     1DE8  00F3               	movwf	___flge@ff1+1
  8973     1DE9  0820               	movf	??___flge,w
  8974     1DEA  00F2               	movwf	___flge@ff1
  8975     1DEB                     l3261:
  8976     1DEB  1FF9               	btfss	___flge@ff2+3,7
  8977     1DEC  2DEE               	goto	u5151
  8978     1DED  2DEF               	goto	u5150
  8979     1DEE                     u5151:
  8980     1DEE  2E13               	goto	l622
  8981     1DEF                     u5150:
  8982     1DEF                     l3263:
  8983     1DEF  3000               	movlw	0
  8984     1DF0  00A0               	movwf	??___flge
  8985     1DF1  3000               	movlw	0
  8986     1DF2  00A1               	movwf	??___flge+1
  8987     1DF3  3000               	movlw	0
  8988     1DF4  00A2               	movwf	??___flge+2
  8989     1DF5  3080               	movlw	128
  8990     1DF6  00A3               	movwf	??___flge+3
  8991     1DF7  0876               	movf	___flge@ff2,w
  8992     1DF8  02A0               	subwf	??___flge,f
  8993     1DF9  0877               	movf	___flge@ff2+1,w
  8994     1DFA  1C03               	skipc
  8995     1DFB  0F77               	incfsz	___flge@ff2+1,w
  8996     1DFC  2DFE               	goto	u5161
  8997     1DFD  2DFF               	goto	u5162
  8998     1DFE                     u5161:
  8999     1DFE  02A1               	subwf	??___flge+1,f
  9000     1DFF                     u5162:
  9001     1DFF  0878               	movf	___flge@ff2+2,w
  9002     1E00  1C03               	skipc
  9003     1E01  0F78               	incfsz	___flge@ff2+2,w
  9004     1E02  2E04               	goto	u5163
  9005     1E03  2E05               	goto	u5164
  9006     1E04                     u5163:
  9007     1E04  02A2               	subwf	??___flge+2,f
  9008     1E05                     u5164:
  9009     1E05  0879               	movf	___flge@ff2+3,w
  9010     1E06  1C03               	skipc
  9011     1E07  0F79               	incfsz	___flge@ff2+3,w
  9012     1E08  2E0A               	goto	u5165
  9013     1E09  2E0B               	goto	u5166
  9014     1E0A                     u5165:
  9015     1E0A  02A3               	subwf	??___flge+3,f
  9016     1E0B                     u5166:
  9017     1E0B  0823               	movf	??___flge+3,w
  9018     1E0C  00F9               	movwf	___flge@ff2+3
  9019     1E0D  0822               	movf	??___flge+2,w
  9020     1E0E  00F8               	movwf	___flge@ff2+2
  9021     1E0F  0821               	movf	??___flge+1,w
  9022     1E10  00F7               	movwf	___flge@ff2+1
  9023     1E11  0820               	movf	??___flge,w
  9024     1E12  00F6               	movwf	___flge@ff2
  9025     1E13                     l622:
  9026     1E13  3080               	movlw	128
  9027     1E14  06F5               	xorwf	___flge@ff1+3,f
  9028     1E15  3080               	movlw	128
  9029     1E16  06F9               	xorwf	___flge@ff2+3,f
  9030     1E17  0879               	movf	___flge@ff2+3,w
  9031     1E18  0275               	subwf	___flge@ff1+3,w
  9032     1E19  1D03               	skipz
  9033     1E1A  2E25               	goto	u5175
  9034     1E1B  0878               	movf	___flge@ff2+2,w
  9035     1E1C  0274               	subwf	___flge@ff1+2,w
  9036     1E1D  1D03               	skipz
  9037     1E1E  2E25               	goto	u5175
  9038     1E1F  0877               	movf	___flge@ff2+1,w
  9039     1E20  0273               	subwf	___flge@ff1+1,w
  9040     1E21  1D03               	skipz
  9041     1E22  2E25               	goto	u5175
  9042     1E23  0876               	movf	___flge@ff2,w
  9043     1E24  0272               	subwf	___flge@ff1,w
  9044     1E25                     u5175:
  9045     1E25  1803               	skipnc
  9046     1E26  2E28               	goto	u5171
  9047     1E27  2E29               	goto	u5170
  9048     1E28                     u5171:
  9049     1E28  2E2B               	goto	l3267
  9050     1E29                     u5170:
  9051     1E29                     l3265:
  9052     1E29  1003               	clrc
  9053     1E2A  2E2C               	goto	l623
  9054     1E2B                     l3267:
  9055     1E2B  1403               	setc
  9056     1E2C                     l623:
  9057     1E2C  0008               	return
  9058     1E2D                     __end_of___flge:
  9059                           
  9060                           	psect	text20
  9061     1A99                     __ptext20:	
  9062 ;; *************** function ___fleq *****************
  9063 ;; Defined at:
  9064 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fleq.c"
  9065 ;; Parameters:    Size  Location     Type
  9066 ;;  ff1             4    2[COMMON] unsigned char 
  9067 ;;  ff2             4    6[COMMON] unsigned char 
  9068 ;; Auto vars:     Size  Location     Type
  9069 ;;		None
  9070 ;; Return value:  Size  Location     Type
  9071 ;;		None               void
  9072 ;; Registers used:
  9073 ;;		wreg, status,2, status,0
  9074 ;; Tracked objects:
  9075 ;;		On entry : 0/0
  9076 ;;		On exit  : 0/0
  9077 ;;		Unchanged: 0/0
  9078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9079 ;;      Params:         8       0       0       0       0
  9080 ;;      Locals:         0       0       0       0       0
  9081 ;;      Temps:          0       4       0       0       0
  9082 ;;      Totals:         8       4       0       0       0
  9083 ;;Total ram usage:       12 bytes
  9084 ;; Hardware stack levels used: 1
  9085 ;; Hardware stack levels required when called: 2
  9086 ;; This function calls:
  9087 ;;		Nothing
  9088 ;; This function is called by:
  9089 ;;		_sprintf
  9090 ;; This function uses a non-reentrant model
  9091 ;;
  9092                           
  9093     1A99                     ___fleq:	
  9094                           ;psect for function ___fleq
  9095                           
  9096     1A99                     l3239:	
  9097                           ;incstack = 0
  9098                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9099                           
  9100     1A99  3000               	movlw	0
  9101     1A9A  0572               	andwf	___fleq@ff1,w
  9102     1A9B  1283               	bcf	3,5	;RP0=0, select bank0
  9103     1A9C  1303               	bcf	3,6	;RP1=0, select bank0
  9104     1A9D  00A0               	movwf	??___fleq
  9105     1A9E  3000               	movlw	0
  9106     1A9F  0573               	andwf	___fleq@ff1+1,w
  9107     1AA0  00A1               	movwf	??___fleq+1
  9108     1AA1  3080               	movlw	128
  9109     1AA2  0574               	andwf	___fleq@ff1+2,w
  9110     1AA3  00A2               	movwf	??___fleq+2
  9111     1AA4  307F               	movlw	127
  9112     1AA5  0575               	andwf	___fleq@ff1+3,w
  9113     1AA6  00A3               	movwf	??___fleq+3
  9114     1AA7  0823               	movf	??___fleq+3,w
  9115     1AA8  0422               	iorwf	??___fleq+2,w
  9116     1AA9  0421               	iorwf	??___fleq+1,w
  9117     1AAA  0420               	iorwf	??___fleq,w
  9118     1AAB  1D03               	skipz
  9119     1AAC  2AAE               	goto	u5081
  9120     1AAD  2AAF               	goto	u5080
  9121     1AAE                     u5081:
  9122     1AAE  2AB7               	goto	l614
  9123     1AAF                     u5080:
  9124     1AAF                     l3241:
  9125     1AAF  3000               	movlw	0
  9126     1AB0  00F5               	movwf	___fleq@ff1+3
  9127     1AB1  3000               	movlw	0
  9128     1AB2  00F4               	movwf	___fleq@ff1+2
  9129     1AB3  3000               	movlw	0
  9130     1AB4  00F3               	movwf	___fleq@ff1+1
  9131     1AB5  3000               	movlw	0
  9132     1AB6  00F2               	movwf	___fleq@ff1
  9133     1AB7                     l614:
  9134     1AB7  3000               	movlw	0
  9135     1AB8  0576               	andwf	___fleq@ff2,w
  9136     1AB9  00A0               	movwf	??___fleq
  9137     1ABA  3000               	movlw	0
  9138     1ABB  0577               	andwf	___fleq@ff2+1,w
  9139     1ABC  00A1               	movwf	??___fleq+1
  9140     1ABD  3080               	movlw	128
  9141     1ABE  0578               	andwf	___fleq@ff2+2,w
  9142     1ABF  00A2               	movwf	??___fleq+2
  9143     1AC0  307F               	movlw	127
  9144     1AC1  0579               	andwf	___fleq@ff2+3,w
  9145     1AC2  00A3               	movwf	??___fleq+3
  9146     1AC3  0823               	movf	??___fleq+3,w
  9147     1AC4  0422               	iorwf	??___fleq+2,w
  9148     1AC5  0421               	iorwf	??___fleq+1,w
  9149     1AC6  0420               	iorwf	??___fleq,w
  9150     1AC7  1D03               	skipz
  9151     1AC8  2ACA               	goto	u5091
  9152     1AC9  2ACB               	goto	u5090
  9153     1ACA                     u5091:
  9154     1ACA  2AD3               	goto	l615
  9155     1ACB                     u5090:
  9156     1ACB                     l3243:
  9157     1ACB  3000               	movlw	0
  9158     1ACC  00F9               	movwf	___fleq@ff2+3
  9159     1ACD  3000               	movlw	0
  9160     1ACE  00F8               	movwf	___fleq@ff2+2
  9161     1ACF  3000               	movlw	0
  9162     1AD0  00F7               	movwf	___fleq@ff2+1
  9163     1AD1  3000               	movlw	0
  9164     1AD2  00F6               	movwf	___fleq@ff2
  9165     1AD3                     l615:
  9166     1AD3  0879               	movf	___fleq@ff2+3,w
  9167     1AD4  0675               	xorwf	___fleq@ff1+3,w
  9168     1AD5  1D03               	skipz
  9169     1AD6  2AE1               	goto	u5105
  9170     1AD7  0878               	movf	___fleq@ff2+2,w
  9171     1AD8  0674               	xorwf	___fleq@ff1+2,w
  9172     1AD9  1D03               	skipz
  9173     1ADA  2AE1               	goto	u5105
  9174     1ADB  0877               	movf	___fleq@ff2+1,w
  9175     1ADC  0673               	xorwf	___fleq@ff1+1,w
  9176     1ADD  1D03               	skipz
  9177     1ADE  2AE1               	goto	u5105
  9178     1ADF  0876               	movf	___fleq@ff2,w
  9179     1AE0  0672               	xorwf	___fleq@ff1,w
  9180     1AE1                     u5105:
  9181     1AE1  1903               	skipnz
  9182     1AE2  2AE4               	goto	u5101
  9183     1AE3  2AE5               	goto	u5100
  9184     1AE4                     u5101:
  9185     1AE4  2AE7               	goto	l3247
  9186     1AE5                     u5100:
  9187     1AE5                     l3245:
  9188     1AE5  1003               	clrc
  9189     1AE6  2AE8               	goto	l616
  9190     1AE7                     l3247:
  9191     1AE7  1403               	setc
  9192     1AE8                     l616:
  9193     1AE8  0008               	return
  9194     1AE9                     __end_of___fleq:
  9195                           
  9196                           	psect	text21
  9197     18CF                     __ptext21:	
  9198 ;; *************** function _setupADC *****************
  9199 ;; Defined at:
  9200 ;;		line 54 in file "adc.c"
  9201 ;; Parameters:    Size  Location     Type
  9202 ;;		None
  9203 ;; Auto vars:     Size  Location     Type
  9204 ;;		None
  9205 ;; Return value:  Size  Location     Type
  9206 ;;                  1    wreg      void 
  9207 ;; Registers used:
  9208 ;;		wreg, status,2, status,0
  9209 ;; Tracked objects:
  9210 ;;		On entry : 0/0
  9211 ;;		On exit  : 0/0
  9212 ;;		Unchanged: 0/0
  9213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9214 ;;      Params:         0       0       0       0       0
  9215 ;;      Locals:         0       0       0       0       0
  9216 ;;      Temps:          1       0       0       0       0
  9217 ;;      Totals:         1       0       0       0       0
  9218 ;;Total ram usage:        1 bytes
  9219 ;; Hardware stack levels used: 1
  9220 ;; Hardware stack levels required when called: 2
  9221 ;; This function calls:
  9222 ;;		Nothing
  9223 ;; This function is called by:
  9224 ;;		_main
  9225 ;; This function uses a non-reentrant model
  9226 ;;
  9227                           
  9228     18CF                     _setupADC:	
  9229                           ;psect for function _setupADC
  9230                           
  9231     18CF                     l3433:	
  9232                           ;incstack = 0
  9233                           ; Regs used in _setupADC: [wreg+status,2+status,0]
  9234                           
  9235                           
  9236                           ;adc.c: 56:     ADCON0bits.ADCS = 0b01;
  9237     18CF  1283               	bcf	3,5	;RP0=0, select bank0
  9238     18D0  1303               	bcf	3,6	;RP1=0, select bank0
  9239     18D1  081F               	movf	31,w	;volatile
  9240     18D2  393F               	andlw	-193
  9241     18D3  3840               	iorlw	64
  9242     18D4  009F               	movwf	31	;volatile
  9243     18D5                     l3435:
  9244                           
  9245                           ;adc.c: 58:     ADCON1bits.VCFG1 = 0;
  9246     18D5  1683               	bsf	3,5	;RP0=1, select bank1
  9247     18D6  1303               	bcf	3,6	;RP1=0, select bank1
  9248     18D7  129F               	bcf	31,5	;volatile
  9249     18D8                     l3437:
  9250                           
  9251                           ;adc.c: 59:     ADCON1bits.VCFG0 = 0;
  9252     18D8  121F               	bcf	31,4	;volatile
  9253     18D9                     l3439:
  9254                           
  9255                           ;adc.c: 62:     ADCON1bits.ADFM = 0;
  9256     18D9  139F               	bcf	31,7	;volatile
  9257                           
  9258                           ;adc.c: 65:     ADCON0bits.CHS = 0b0000;
  9259     18DA  30C3               	movlw	-61
  9260     18DB  1283               	bcf	3,5	;RP0=0, select bank0
  9261     18DC  1303               	bcf	3,6	;RP1=0, select bank0
  9262     18DD  059F               	andwf	31,f	;volatile
  9263     18DE                     l3441:
  9264                           
  9265                           ;adc.c: 67:     ADCON0bits.ADON = 1;
  9266     18DE  141F               	bsf	31,0	;volatile
  9267     18DF                     l3443:
  9268                           
  9269                           ;adc.c: 69:     PIR1bits.ADIF = 0;
  9270     18DF  130C               	bcf	12,6	;volatile
  9271     18E0                     l3445:
  9272                           
  9273                           ;adc.c: 72:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  9274     18E0  3042               	movlw	66
  9275     18E1  00F2               	movwf	??_setupADC
  9276     18E2                     u7037:
  9277     18E2  0BF2               	decfsz	??_setupADC,f
  9278     18E3  28E2               	goto	u7037
  9279     18E4  0000               	nop
  9280     18E5                     l217:
  9281     18E5  0008               	return
  9282     18E6                     __end_of_setupADC:
  9283                           
  9284                           	psect	text22
  9285     1966                     __ptext22:	
  9286 ;; *************** function _setup *****************
  9287 ;; Defined at:
  9288 ;;		line 196 in file "main.c"
  9289 ;; Parameters:    Size  Location     Type
  9290 ;;		None
  9291 ;; Auto vars:     Size  Location     Type
  9292 ;;		None
  9293 ;; Return value:  Size  Location     Type
  9294 ;;                  1    wreg      void 
  9295 ;; Registers used:
  9296 ;;		wreg, status,2, status,0
  9297 ;; Tracked objects:
  9298 ;;		On entry : 0/0
  9299 ;;		On exit  : 0/0
  9300 ;;		Unchanged: 0/0
  9301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9302 ;;      Params:         0       0       0       0       0
  9303 ;;      Locals:         0       0       0       0       0
  9304 ;;      Temps:          0       0       0       0       0
  9305 ;;      Totals:         0       0       0       0       0
  9306 ;;Total ram usage:        0 bytes
  9307 ;; Hardware stack levels used: 1
  9308 ;; Hardware stack levels required when called: 2
  9309 ;; This function calls:
  9310 ;;		Nothing
  9311 ;; This function is called by:
  9312 ;;		_main
  9313 ;; This function uses a non-reentrant model
  9314 ;;
  9315                           
  9316     1966                     _setup:	
  9317                           ;psect for function _setup
  9318                           
  9319     1966                     l3389:	
  9320                           ;incstack = 0
  9321                           ; Regs used in _setup: [wreg+status,2+status,0]
  9322                           
  9323                           
  9324                           ;main.c: 199:     ANSEL = 0b00000011;
  9325     1966  3003               	movlw	3
  9326     1967  1683               	bsf	3,5	;RP0=1, select bank3
  9327     1968  1703               	bsf	3,6	;RP1=1, select bank3
  9328     1969  0088               	movwf	8	;volatile
  9329     196A                     l3391:
  9330                           
  9331                           ;main.c: 200:     ANSELH = 0;
  9332     196A  0189               	clrf	9	;volatile
  9333     196B                     l3393:
  9334                           
  9335                           ;main.c: 203:     TRISA = 0b00000011;
  9336     196B  3003               	movlw	3
  9337     196C  1683               	bsf	3,5	;RP0=1, select bank1
  9338     196D  1303               	bcf	3,6	;RP1=0, select bank1
  9339     196E  0085               	movwf	5	;volatile
  9340                           
  9341                           ;main.c: 204:     TRISB = 0b00000000;
  9342     196F  0186               	clrf	6	;volatile
  9343     1970                     l3395:
  9344                           
  9345                           ;main.c: 205:     TRISC = 0b10000000;
  9346     1970  3080               	movlw	128
  9347     1971  0087               	movwf	7	;volatile
  9348     1972                     l3397:
  9349                           
  9350                           ;main.c: 206:     TRISD = 0b00000000;
  9351     1972  0188               	clrf	8	;volatile
  9352     1973                     l3399:
  9353                           
  9354                           ;main.c: 207:     TRISE = 0b00000000;
  9355     1973  0189               	clrf	9	;volatile
  9356     1974                     l3401:
  9357                           
  9358                           ;main.c: 209:     PORTA = 0b00000000;
  9359     1974  1283               	bcf	3,5	;RP0=0, select bank0
  9360     1975  1303               	bcf	3,6	;RP1=0, select bank0
  9361     1976  0185               	clrf	5	;volatile
  9362     1977                     l3403:
  9363                           
  9364                           ;main.c: 210:     PORTB = 0b00000000;
  9365     1977  0186               	clrf	6	;volatile
  9366     1978                     l3405:
  9367                           
  9368                           ;main.c: 211:     PORTC = 0b00000000;
  9369     1978  0187               	clrf	7	;volatile
  9370     1979                     l3407:
  9371                           
  9372                           ;main.c: 212:     PORTD = 0b00000000;
  9373     1979  0188               	clrf	8	;volatile
  9374     197A                     l3409:
  9375                           
  9376                           ;main.c: 213:     PORTE = 0b00000000;
  9377     197A  0189               	clrf	9	;volatile
  9378     197B                     l3411:
  9379                           
  9380                           ;main.c: 216:     OSCCONbits.IRCF = 0b111;
  9381     197B  3070               	movlw	112
  9382     197C  1683               	bsf	3,5	;RP0=1, select bank1
  9383     197D  1303               	bcf	3,6	;RP1=0, select bank1
  9384     197E  048F               	iorwf	15,f	;volatile
  9385     197F                     l3413:
  9386                           
  9387                           ;main.c: 217:     OSCCONbits.SCS = 1;
  9388     197F  140F               	bsf	15,0	;volatile
  9389     1980                     l3415:
  9390                           
  9391                           ;main.c: 225:     INTCONbits.GIE = 1;
  9392     1980  178B               	bsf	11,7	;volatile
  9393     1981                     l3417:
  9394                           
  9395                           ;main.c: 228:     PIE1bits.ADIE = 1;
  9396     1981  170C               	bsf	12,6	;volatile
  9397     1982                     l3419:
  9398                           
  9399                           ;main.c: 229:     INTCONbits.TMR0IE = 1;
  9400     1982  168B               	bsf	11,5	;volatile
  9401     1983                     l3421:
  9402                           
  9403                           ;main.c: 231:     PIR1bits.ADIF = 0;
  9404     1983  1283               	bcf	3,5	;RP0=0, select bank0
  9405     1984  1303               	bcf	3,6	;RP1=0, select bank0
  9406     1985  130C               	bcf	12,6	;volatile
  9407     1986                     l3423:
  9408                           
  9409                           ;main.c: 232:     INTCONbits.RBIF = 0;
  9410     1986  100B               	bcf	11,0	;volatile
  9411     1987                     l3425:
  9412                           
  9413                           ;main.c: 235:     OPTION_REGbits.T0CS = 0;
  9414     1987  1683               	bsf	3,5	;RP0=1, select bank1
  9415     1988  1303               	bcf	3,6	;RP1=0, select bank1
  9416     1989  1281               	bcf	1,5	;volatile
  9417     198A                     l3427:
  9418                           
  9419                           ;main.c: 236:     OPTION_REGbits.PSA = 0;
  9420     198A  1181               	bcf	1,3	;volatile
  9421     198B                     l3429:
  9422                           
  9423                           ;main.c: 237:     OPTION_REGbits.PS = 0b011;
  9424     198B  0801               	movf	1,w	;volatile
  9425     198C  39F8               	andlw	-8
  9426     198D  3803               	iorlw	3
  9427     198E  0081               	movwf	1	;volatile
  9428                           
  9429                           ;main.c: 238:     TMR0 = 179;
  9430     198F  30B3               	movlw	179
  9431     1990  1283               	bcf	3,5	;RP0=0, select bank0
  9432     1991  1303               	bcf	3,6	;RP1=0, select bank0
  9433     1992  0081               	movwf	1	;volatile
  9434     1993                     l3431:
  9435                           
  9436                           ;main.c: 239:     INTCONbits.T0IF = 0;
  9437     1993  110B               	bcf	11,2	;volatile
  9438     1994                     l118:
  9439     1994  0008               	return
  9440     1995                     __end_of_setup:
  9441                           
  9442                           	psect	text23
  9443     0807                     __ptext23:	
  9444 ;; *************** function _readADC *****************
  9445 ;; Defined at:
  9446 ;;		line 18 in file "adc.c"
  9447 ;; Parameters:    Size  Location     Type
  9448 ;;  canal           2   63[BANK0 ] int 
  9449 ;; Auto vars:     Size  Location     Type
  9450 ;;		None
  9451 ;; Return value:  Size  Location     Type
  9452 ;;                  2   63[BANK0 ] int 
  9453 ;; Registers used:
  9454 ;;		wreg, status,2, status,0, pclath, cstack
  9455 ;; Tracked objects:
  9456 ;;		On entry : 0/0
  9457 ;;		On exit  : 0/0
  9458 ;;		Unchanged: 0/0
  9459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9460 ;;      Params:         0       2       0       0       0
  9461 ;;      Locals:         0       0       0       0       0
  9462 ;;      Temps:          0       4       0       0       0
  9463 ;;      Totals:         0       6       0       0       0
  9464 ;;Total ram usage:        6 bytes
  9465 ;; Hardware stack levels used: 1
  9466 ;; Hardware stack levels required when called: 3
  9467 ;; This function calls:
  9468 ;;		___fltol
  9469 ;;		___xxtofl
  9470 ;; This function is called by:
  9471 ;;		_main
  9472 ;; This function uses a non-reentrant model
  9473 ;;
  9474                           
  9475     0807                     _readADC:	
  9476                           ;psect for function _readADC
  9477                           
  9478     0807                     l3511:	
  9479                           ;incstack = 0
  9480                           ; Regs used in _readADC: [wreg+status,2+status,0+pclath+cstack]
  9481                           
  9482                           
  9483                           ;adc.c: 20:     if (canal == 0){
  9484     0807  1283               	bcf	3,5	;RP0=0, select bank0
  9485     0808  1303               	bcf	3,6	;RP1=0, select bank0
  9486     0809  085F               	movf	readADC@canal,w
  9487     080A  0460               	iorwf	readADC@canal+1,w
  9488     080B  1D03               	btfss	3,2
  9489     080C  280E               	goto	u5561
  9490     080D  280F               	goto	u5560
  9491     080E                     u5561:
  9492     080E  2845               	goto	l3523
  9493     080F                     u5560:
  9494     080F                     l3513:
  9495                           
  9496                           ;adc.c: 22:         ADCON0bits.CHS = 0b0000;
  9497     080F  30C3               	movlw	-61
  9498     0810  059F               	andwf	31,f	;volatile
  9499     0811                     l3515:
  9500                           
  9501                           ;adc.c: 23:          _delay((unsigned long)((100)*(8000000/4000000.0)));
  9502     0811  3041               	movlw	65
  9503     0812  1283               	bcf	3,5	;RP0=0, select bank0
  9504     0813  1303               	bcf	3,6	;RP1=0, select bank0
  9505     0814  00E1               	movwf	??_readADC
  9506     0815                     u7047:
  9507     0815  0BE1               	decfsz	??_readADC,f
  9508     0816  2815               	goto	u7047
  9509     0817  2818               	nop2
  9510     0818                     l3517:
  9511                           
  9512                           ;adc.c: 24:         ADCON0bits.GO = 1;
  9513     0818  1283               	bcf	3,5	;RP0=0, select bank0
  9514     0819  1303               	bcf	3,6	;RP1=0, select bank0
  9515     081A  149F               	bsf	31,1	;volatile
  9516     081B                     l206:	
  9517                           ;adc.c: 28:         }
  9518                           
  9519                           
  9520                           ;adc.c: 26:         while (ADCON0bits.GO == 1){
  9521     081B  189F               	btfsc	31,1	;volatile
  9522     081C  281E               	goto	u5571
  9523     081D  281F               	goto	u5570
  9524     081E                     u5571:
  9525     081E  281B               	goto	l206
  9526     081F                     u5570:
  9527     081F                     l208:
  9528                           
  9529                           ;adc.c: 29:         PIR1bits.ADIF=0;
  9530     081F  130C               	bcf	12,6	;volatile
  9531     0820                     l3519:
  9532                           
  9533                           ;adc.c: 30:         ADC_Voltaje = ADRESH;
  9534     0820  081E               	movf	30,w	;volatile
  9535     0821  00E1               	movwf	??_readADC
  9536     0822  01E2               	clrf	??_readADC+1
  9537     0823  01E3               	clrf	??_readADC+2
  9538     0824  01E4               	clrf	??_readADC+3
  9539     0825  0864               	movf	??_readADC+3,w
  9540     0826  00F5               	movwf	___xxtofl@val+3
  9541     0827  0863               	movf	??_readADC+2,w
  9542     0828  00F4               	movwf	___xxtofl@val+2
  9543     0829  0862               	movf	??_readADC+1,w
  9544     082A  00F3               	movwf	___xxtofl@val+1
  9545     082B  0861               	movf	??_readADC,w
  9546     082C  00F2               	movwf	___xxtofl@val
  9547     082D  3000               	movlw	0
  9548     082E  120A  118A  2666  120A  158A  	fcall	___xxtofl
  9549     0833  0875               	movf	?___xxtofl+3,w
  9550     0834  1683               	bsf	3,5	;RP0=1, select bank1
  9551     0835  1303               	bcf	3,6	;RP1=0, select bank1
  9552     0836  00CD               	movwf	(_ADC_Voltaje+3)^(0+128)
  9553     0837  0874               	movf	?___xxtofl+2,w
  9554     0838  00CC               	movwf	(_ADC_Voltaje+2)^(0+128)
  9555     0839  0873               	movf	?___xxtofl+1,w
  9556     083A  00CB               	movwf	(_ADC_Voltaje+1)^(0+128)
  9557     083B  0872               	movf	?___xxtofl,w
  9558     083C  00CA               	movwf	_ADC_Voltaje^(0+128)
  9559     083D                     l3521:
  9560                           
  9561                           ;adc.c: 31:         _delay((unsigned long)((100)*(8000000/4000000.0)));
  9562     083D  3041               	movlw	65
  9563     083E  1283               	bcf	3,5	;RP0=0, select bank0
  9564     083F  1303               	bcf	3,6	;RP1=0, select bank0
  9565     0840  00E1               	movwf	??_readADC
  9566     0841                     u7057:
  9567     0841  0BE1               	decfsz	??_readADC,f
  9568     0842  2841               	goto	u7057
  9569     0843  2844               	nop2
  9570                           
  9571                           ;adc.c: 33:     }
  9572     0844  287C               	goto	l3535
  9573     0845                     l3523:
  9574     0845  035F               	decf	readADC@canal,w
  9575     0846  0460               	iorwf	readADC@canal+1,w
  9576     0847  1D03               	btfss	3,2
  9577     0848  284A               	goto	u5581
  9578     0849  284B               	goto	u5580
  9579     084A                     u5581:
  9580     084A  287C               	goto	l3535
  9581     084B                     u5580:
  9582     084B                     l3525:
  9583                           
  9584                           ;adc.c: 38:         ADCON0bits.CHS = 0b0001;
  9585     084B  081F               	movf	31,w	;volatile
  9586     084C  39C3               	andlw	-61
  9587     084D  3804               	iorlw	4
  9588     084E  009F               	movwf	31	;volatile
  9589     084F                     l3527:
  9590                           
  9591                           ;adc.c: 39:          _delay((unsigned long)((100)*(8000000/4000000.0)));
  9592     084F  3041               	movlw	65
  9593     0850  1283               	bcf	3,5	;RP0=0, select bank0
  9594     0851  1303               	bcf	3,6	;RP1=0, select bank0
  9595     0852  00E1               	movwf	??_readADC
  9596     0853                     u7067:
  9597     0853  0BE1               	decfsz	??_readADC,f
  9598     0854  2853               	goto	u7067
  9599     0855  2856               	nop2
  9600     0856                     l3529:
  9601                           
  9602                           ;adc.c: 40:         ADCON0bits.GO = 1;
  9603     0856  1283               	bcf	3,5	;RP0=0, select bank0
  9604     0857  1303               	bcf	3,6	;RP1=0, select bank0
  9605     0858  149F               	bsf	31,1	;volatile
  9606     0859                     l211:	
  9607                           ;adc.c: 44:         }
  9608                           
  9609                           
  9610                           ;adc.c: 42:         while (ADCON0bits.GO == 1){
  9611     0859  189F               	btfsc	31,1	;volatile
  9612     085A  285C               	goto	u5591
  9613     085B  285D               	goto	u5590
  9614     085C                     u5591:
  9615     085C  2859               	goto	l211
  9616     085D                     u5590:
  9617     085D                     l213:
  9618                           
  9619                           ;adc.c: 45:         PIR1bits.ADIF=0;
  9620     085D  130C               	bcf	12,6	;volatile
  9621     085E                     l3531:
  9622                           
  9623                           ;adc.c: 46:         ADC_Voltaje = ADRESH;
  9624     085E  081E               	movf	30,w	;volatile
  9625     085F  00E1               	movwf	??_readADC
  9626     0860  01E2               	clrf	??_readADC+1
  9627     0861  01E3               	clrf	??_readADC+2
  9628     0862  01E4               	clrf	??_readADC+3
  9629     0863  0864               	movf	??_readADC+3,w
  9630     0864  00F5               	movwf	___xxtofl@val+3
  9631     0865  0863               	movf	??_readADC+2,w
  9632     0866  00F4               	movwf	___xxtofl@val+2
  9633     0867  0862               	movf	??_readADC+1,w
  9634     0868  00F3               	movwf	___xxtofl@val+1
  9635     0869  0861               	movf	??_readADC,w
  9636     086A  00F2               	movwf	___xxtofl@val
  9637     086B  3000               	movlw	0
  9638     086C  120A  118A  2666  120A  158A  	fcall	___xxtofl
  9639     0871  0875               	movf	?___xxtofl+3,w
  9640     0872  1683               	bsf	3,5	;RP0=1, select bank1
  9641     0873  1303               	bcf	3,6	;RP1=0, select bank1
  9642     0874  00CD               	movwf	(_ADC_Voltaje+3)^(0+128)
  9643     0875  0874               	movf	?___xxtofl+2,w
  9644     0876  00CC               	movwf	(_ADC_Voltaje+2)^(0+128)
  9645     0877  0873               	movf	?___xxtofl+1,w
  9646     0878  00CB               	movwf	(_ADC_Voltaje+1)^(0+128)
  9647     0879  0872               	movf	?___xxtofl,w
  9648     087A  00CA               	movwf	_ADC_Voltaje^(0+128)
  9649     087B  283D               	goto	l3521
  9650     087C                     l3535:
  9651                           
  9652                           ;adc.c: 50:     return ADC_Voltaje;
  9653     087C  1683               	bsf	3,5	;RP0=1, select bank1
  9654     087D  1303               	bcf	3,6	;RP1=0, select bank1
  9655     087E  084D               	movf	(_ADC_Voltaje+3)^(0+128),w
  9656     087F  1283               	bcf	3,5	;RP0=0, select bank0
  9657     0880  1303               	bcf	3,6	;RP1=0, select bank0
  9658     0881  00D8               	movwf	___fltol@f1+3
  9659     0882  1683               	bsf	3,5	;RP0=1, select bank1
  9660     0883  1303               	bcf	3,6	;RP1=0, select bank1
  9661     0884  084C               	movf	(_ADC_Voltaje+2)^(0+128),w
  9662     0885  1283               	bcf	3,5	;RP0=0, select bank0
  9663     0886  1303               	bcf	3,6	;RP1=0, select bank0
  9664     0887  00D7               	movwf	___fltol@f1+2
  9665     0888  1683               	bsf	3,5	;RP0=1, select bank1
  9666     0889  1303               	bcf	3,6	;RP1=0, select bank1
  9667     088A  084B               	movf	(_ADC_Voltaje+1)^(0+128),w
  9668     088B  1283               	bcf	3,5	;RP0=0, select bank0
  9669     088C  1303               	bcf	3,6	;RP1=0, select bank0
  9670     088D  00D6               	movwf	___fltol@f1+1
  9671     088E  1683               	bsf	3,5	;RP0=1, select bank1
  9672     088F  1303               	bcf	3,6	;RP1=0, select bank1
  9673     0890  084A               	movf	_ADC_Voltaje^(0+128),w
  9674     0891  1283               	bcf	3,5	;RP0=0, select bank0
  9675     0892  1303               	bcf	3,6	;RP1=0, select bank0
  9676     0893  00D5               	movwf	___fltol@f1
  9677     0894  160A  118A  2003  120A  158A  	fcall	___fltol
  9678     0899  1283               	bcf	3,5	;RP0=0, select bank0
  9679     089A  1303               	bcf	3,6	;RP1=0, select bank0
  9680     089B  0856               	movf	?___fltol+1,w
  9681     089C  00E0               	movwf	?_readADC+1
  9682     089D  0855               	movf	?___fltol,w
  9683     089E  00DF               	movwf	?_readADC
  9684     089F                     l214:
  9685     089F  0008               	return
  9686     08A0                     __end_of_readADC:
  9687                           
  9688                           	psect	text24
  9689     0666                     __ptext24:	
  9690 ;; *************** function ___xxtofl *****************
  9691 ;; Defined at:
  9692 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  9693 ;; Parameters:    Size  Location     Type
  9694 ;;  sign            1    wreg     unsigned char 
  9695 ;;  val             4    2[COMMON] long 
  9696 ;; Auto vars:     Size  Location     Type
  9697 ;;  sign            1    0[BANK0 ] unsigned char 
  9698 ;;  arg             4    2[BANK0 ] unsigned long 
  9699 ;;  exp             1    1[BANK0 ] unsigned char 
  9700 ;; Return value:  Size  Location     Type
  9701 ;;                  4    2[COMMON] unsigned char 
  9702 ;; Registers used:
  9703 ;;		wreg, status,2, status,0
  9704 ;; Tracked objects:
  9705 ;;		On entry : 0/0
  9706 ;;		On exit  : 0/0
  9707 ;;		Unchanged: 0/0
  9708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9709 ;;      Params:         4       0       0       0       0
  9710 ;;      Locals:         0       6       0       0       0
  9711 ;;      Temps:          4       0       0       0       0
  9712 ;;      Totals:         8       6       0       0       0
  9713 ;;Total ram usage:       14 bytes
  9714 ;; Hardware stack levels used: 1
  9715 ;; Hardware stack levels required when called: 2
  9716 ;; This function calls:
  9717 ;;		Nothing
  9718 ;; This function is called by:
  9719 ;;		_main
  9720 ;;		_readADC
  9721 ;;		_sprintf
  9722 ;; This function uses a non-reentrant model
  9723 ;;
  9724                           
  9725     0666                     ___xxtofl:	
  9726                           ;psect for function ___xxtofl
  9727                           
  9728                           
  9729                           ;incstack = 0
  9730                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  9731                           ;___xxtofl@sign stored from wreg
  9732     0666  1283               	bcf	3,5	;RP0=0, select bank0
  9733     0667  1303               	bcf	3,6	;RP1=0, select bank0
  9734     0668  00A0               	movwf	___xxtofl@sign
  9735     0669                     l3341:
  9736     0669  0820               	movf	___xxtofl@sign,w
  9737     066A  1903               	btfsc	3,2
  9738     066B  2E6D               	goto	u5351
  9739     066C  2E6E               	goto	u5350
  9740     066D                     u5351:
  9741     066D  2E82               	goto	l3347
  9742     066E                     u5350:
  9743     066E                     l3343:
  9744     066E  1FF5               	btfss	___xxtofl@val+3,7
  9745     066F  2E71               	goto	u5361
  9746     0670  2E72               	goto	u5360
  9747     0671                     u5361:
  9748     0671  2E82               	goto	l3347
  9749     0672                     u5360:
  9750     0672                     l3345:
  9751     0672  0972               	comf	___xxtofl@val,w
  9752     0673  00A2               	movwf	___xxtofl@arg
  9753     0674  0973               	comf	___xxtofl@val+1,w
  9754     0675  00A3               	movwf	___xxtofl@arg+1
  9755     0676  0974               	comf	___xxtofl@val+2,w
  9756     0677  00A4               	movwf	___xxtofl@arg+2
  9757     0678  0975               	comf	___xxtofl@val+3,w
  9758     0679  00A5               	movwf	___xxtofl@arg+3
  9759     067A  0AA2               	incf	___xxtofl@arg,f
  9760     067B  1903               	skipnz
  9761     067C  0AA3               	incf	___xxtofl@arg+1,f
  9762     067D  1903               	skipnz
  9763     067E  0AA4               	incf	___xxtofl@arg+2,f
  9764     067F  1903               	skipnz
  9765     0680  0AA5               	incf	___xxtofl@arg+3,f
  9766     0681  2E8A               	goto	l895
  9767     0682                     l3347:
  9768     0682  0875               	movf	___xxtofl@val+3,w
  9769     0683  00A5               	movwf	___xxtofl@arg+3
  9770     0684  0874               	movf	___xxtofl@val+2,w
  9771     0685  00A4               	movwf	___xxtofl@arg+2
  9772     0686  0873               	movf	___xxtofl@val+1,w
  9773     0687  00A3               	movwf	___xxtofl@arg+1
  9774     0688  0872               	movf	___xxtofl@val,w
  9775     0689  00A2               	movwf	___xxtofl@arg
  9776     068A                     l895:
  9777     068A  0875               	movf	___xxtofl@val+3,w
  9778     068B  0474               	iorwf	___xxtofl@val+2,w
  9779     068C  0473               	iorwf	___xxtofl@val+1,w
  9780     068D  0472               	iorwf	___xxtofl@val,w
  9781     068E  1D03               	skipz
  9782     068F  2E91               	goto	u5371
  9783     0690  2E92               	goto	u5370
  9784     0691                     u5371:
  9785     0691  2E9B               	goto	l3353
  9786     0692                     u5370:
  9787     0692                     l3349:
  9788     0692  3000               	movlw	0
  9789     0693  00F5               	movwf	?___xxtofl+3
  9790     0694  3000               	movlw	0
  9791     0695  00F4               	movwf	?___xxtofl+2
  9792     0696  3000               	movlw	0
  9793     0697  00F3               	movwf	?___xxtofl+1
  9794     0698  3000               	movlw	0
  9795     0699  00F2               	movwf	?___xxtofl
  9796     069A  2F1F               	goto	l897
  9797     069B                     l3353:
  9798     069B  3096               	movlw	150
  9799     069C  00A1               	movwf	___xxtofl@exp
  9800     069D  2EAB               	goto	l3357
  9801     069E                     l3355:
  9802     069E  3001               	movlw	1
  9803     069F  00F6               	movwf	??___xxtofl
  9804     06A0  0876               	movf	??___xxtofl,w
  9805     06A1  07A1               	addwf	___xxtofl@exp,f
  9806     06A2  3001               	movlw	1
  9807     06A3                     u5385:
  9808     06A3  1003               	clrc
  9809     06A4  0CA5               	rrf	___xxtofl@arg+3,f
  9810     06A5  0CA4               	rrf	___xxtofl@arg+2,f
  9811     06A6  0CA3               	rrf	___xxtofl@arg+1,f
  9812     06A7  0CA2               	rrf	___xxtofl@arg,f
  9813     06A8  3EFF               	addlw	-1
  9814     06A9  1D03               	skipz
  9815     06AA  2EA3               	goto	u5385
  9816     06AB                     l3357:
  9817     06AB  30FE               	movlw	254
  9818     06AC  0525               	andwf	___xxtofl@arg+3,w
  9819     06AD  1D03               	btfss	3,2
  9820     06AE  2EB0               	goto	u5391
  9821     06AF  2EB1               	goto	u5390
  9822     06B0                     u5391:
  9823     06B0  2E9E               	goto	l3355
  9824     06B1                     u5390:
  9825     06B1  2ECD               	goto	l901
  9826     06B2                     l3359:
  9827     06B2  3001               	movlw	1
  9828     06B3  00F6               	movwf	??___xxtofl
  9829     06B4  0876               	movf	??___xxtofl,w
  9830     06B5  07A1               	addwf	___xxtofl@exp,f
  9831     06B6                     l3361:
  9832     06B6  3001               	movlw	1
  9833     06B7  07A2               	addwf	___xxtofl@arg,f
  9834     06B8  3000               	movlw	0
  9835     06B9  1803               	skipnc
  9836     06BA  3001               	movlw	1
  9837     06BB  07A3               	addwf	___xxtofl@arg+1,f
  9838     06BC  3000               	movlw	0
  9839     06BD  1803               	skipnc
  9840     06BE  3001               	movlw	1
  9841     06BF  07A4               	addwf	___xxtofl@arg+2,f
  9842     06C0  3000               	movlw	0
  9843     06C1  1803               	skipnc
  9844     06C2  3001               	movlw	1
  9845     06C3  07A5               	addwf	___xxtofl@arg+3,f
  9846     06C4                     l3363:
  9847     06C4  3001               	movlw	1
  9848     06C5                     u5405:
  9849     06C5  1003               	clrc
  9850     06C6  0CA5               	rrf	___xxtofl@arg+3,f
  9851     06C7  0CA4               	rrf	___xxtofl@arg+2,f
  9852     06C8  0CA3               	rrf	___xxtofl@arg+1,f
  9853     06C9  0CA2               	rrf	___xxtofl@arg,f
  9854     06CA  3EFF               	addlw	-1
  9855     06CB  1D03               	skipz
  9856     06CC  2EC5               	goto	u5405
  9857     06CD                     l901:
  9858     06CD  30FF               	movlw	255
  9859     06CE  0525               	andwf	___xxtofl@arg+3,w
  9860     06CF  1D03               	btfss	3,2
  9861     06D0  2ED2               	goto	u5411
  9862     06D1  2ED3               	goto	u5410
  9863     06D2                     u5411:
  9864     06D2  2EB2               	goto	l3359
  9865     06D3                     u5410:
  9866     06D3  2EDF               	goto	l3367
  9867     06D4                     l3365:
  9868     06D4  3001               	movlw	1
  9869     06D5  02A1               	subwf	___xxtofl@exp,f
  9870     06D6  3001               	movlw	1
  9871     06D7  00F6               	movwf	??___xxtofl
  9872     06D8                     u5425:
  9873     06D8  1003               	clrc
  9874     06D9  0DA2               	rlf	___xxtofl@arg,f
  9875     06DA  0DA3               	rlf	___xxtofl@arg+1,f
  9876     06DB  0DA4               	rlf	___xxtofl@arg+2,f
  9877     06DC  0DA5               	rlf	___xxtofl@arg+3,f
  9878     06DD  0BF6               	decfsz	??___xxtofl,f
  9879     06DE  2ED8               	goto	u5425
  9880     06DF                     l3367:
  9881     06DF  1BA4               	btfsc	___xxtofl@arg+2,7
  9882     06E0  2EE2               	goto	u5431
  9883     06E1  2EE3               	goto	u5430
  9884     06E2                     u5431:
  9885     06E2  2EE9               	goto	l908
  9886     06E3                     u5430:
  9887     06E3                     l3369:
  9888     06E3  3002               	movlw	2
  9889     06E4  0221               	subwf	___xxtofl@exp,w
  9890     06E5  1803               	skipnc
  9891     06E6  2EE8               	goto	u5441
  9892     06E7  2EE9               	goto	u5440
  9893     06E8                     u5441:
  9894     06E8  2ED4               	goto	l3365
  9895     06E9                     u5440:
  9896     06E9                     l908:
  9897     06E9  1821               	btfsc	___xxtofl@exp,0
  9898     06EA  2EEC               	goto	u5451
  9899     06EB  2EED               	goto	u5450
  9900     06EC                     u5451:
  9901     06EC  2EF5               	goto	l909
  9902     06ED                     u5450:
  9903     06ED                     l3371:
  9904     06ED  30FF               	movlw	255
  9905     06EE  05A2               	andwf	___xxtofl@arg,f
  9906     06EF  30FF               	movlw	255
  9907     06F0  05A3               	andwf	___xxtofl@arg+1,f
  9908     06F1  307F               	movlw	127
  9909     06F2  05A4               	andwf	___xxtofl@arg+2,f
  9910     06F3  30FF               	movlw	255
  9911     06F4  05A5               	andwf	___xxtofl@arg+3,f
  9912     06F5                     l909:
  9913     06F5  1003               	clrc
  9914     06F6  0CA1               	rrf	___xxtofl@exp,f
  9915     06F7                     l3373:
  9916     06F7  0821               	movf	___xxtofl@exp,w
  9917     06F8  00F6               	movwf	??___xxtofl
  9918     06F9  01F7               	clrf	??___xxtofl+1
  9919     06FA  01F8               	clrf	??___xxtofl+2
  9920     06FB  01F9               	clrf	??___xxtofl+3
  9921     06FC  3018               	movlw	24
  9922     06FD                     u5465:
  9923     06FD  1003               	clrc
  9924     06FE  0DF6               	rlf	??___xxtofl,f
  9925     06FF  0DF7               	rlf	??___xxtofl+1,f
  9926     0700  0DF8               	rlf	??___xxtofl+2,f
  9927     0701  0DF9               	rlf	??___xxtofl+3,f
  9928     0702                     u5460:
  9929     0702  3EFF               	addlw	-1
  9930     0703  1D03               	skipz
  9931     0704  2EFD               	goto	u5465
  9932     0705  0876               	movf	??___xxtofl,w
  9933     0706  04A2               	iorwf	___xxtofl@arg,f
  9934     0707  0877               	movf	??___xxtofl+1,w
  9935     0708  04A3               	iorwf	___xxtofl@arg+1,f
  9936     0709  0878               	movf	??___xxtofl+2,w
  9937     070A  04A4               	iorwf	___xxtofl@arg+2,f
  9938     070B  0879               	movf	??___xxtofl+3,w
  9939     070C  04A5               	iorwf	___xxtofl@arg+3,f
  9940     070D                     l3375:
  9941     070D  0820               	movf	___xxtofl@sign,w
  9942     070E  1903               	btfsc	3,2
  9943     070F  2F11               	goto	u5471
  9944     0710  2F12               	goto	u5470
  9945     0711                     u5471:
  9946     0711  2F17               	goto	l3381
  9947     0712                     u5470:
  9948     0712                     l3377:
  9949     0712  1FF5               	btfss	___xxtofl@val+3,7
  9950     0713  2F15               	goto	u5481
  9951     0714  2F16               	goto	u5480
  9952     0715                     u5481:
  9953     0715  2F17               	goto	l3381
  9954     0716                     u5480:
  9955     0716                     l3379:
  9956     0716  17A5               	bsf	___xxtofl@arg+3,7
  9957     0717                     l3381:
  9958     0717  0825               	movf	___xxtofl@arg+3,w
  9959     0718  00F5               	movwf	?___xxtofl+3
  9960     0719  0824               	movf	___xxtofl@arg+2,w
  9961     071A  00F4               	movwf	?___xxtofl+2
  9962     071B  0823               	movf	___xxtofl@arg+1,w
  9963     071C  00F3               	movwf	?___xxtofl+1
  9964     071D  0822               	movf	___xxtofl@arg,w
  9965     071E  00F2               	movwf	?___xxtofl
  9966     071F                     l897:
  9967     071F  0008               	return
  9968     0720                     __end_of___xxtofl:
  9969                           
  9970                           	psect	text25
  9971     1003                     __ptext25:	
  9972 ;; *************** function ___fltol *****************
  9973 ;; Defined at:
  9974 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  9975 ;; Parameters:    Size  Location     Type
  9976 ;;  f1              4   53[BANK0 ] unsigned char 
  9977 ;; Auto vars:     Size  Location     Type
  9978 ;;  exp1            1   62[BANK0 ] unsigned char 
  9979 ;;  sign1           1   61[BANK0 ] unsigned char 
  9980 ;; Return value:  Size  Location     Type
  9981 ;;                  4   53[BANK0 ] long 
  9982 ;; Registers used:
  9983 ;;		wreg, status,2, status,0
  9984 ;; Tracked objects:
  9985 ;;		On entry : 0/0
  9986 ;;		On exit  : 0/0
  9987 ;;		Unchanged: 0/0
  9988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9989 ;;      Params:         0       4       0       0       0
  9990 ;;      Locals:         0       2       0       0       0
  9991 ;;      Temps:          0       4       0       0       0
  9992 ;;      Totals:         0      10       0       0       0
  9993 ;;Total ram usage:       10 bytes
  9994 ;; Hardware stack levels used: 1
  9995 ;; Hardware stack levels required when called: 2
  9996 ;; This function calls:
  9997 ;;		Nothing
  9998 ;; This function is called by:
  9999 ;;		_readADC
 10000 ;;		_sprintf
 10001 ;; This function uses a non-reentrant model
 10002 ;;
 10003                           
 10004     1003                     ___fltol:	
 10005                           ;psect for function ___fltol
 10006                           
 10007     1003                     l3279:	
 10008                           ;incstack = 0
 10009                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 10010                           
 10011     1003  1003               	clrc
 10012     1004  1283               	bcf	3,5	;RP0=0, select bank0
 10013     1005  1303               	bcf	3,6	;RP1=0, select bank0
 10014     1006  0D57               	rlf	___fltol@f1+2,w
 10015     1007  0D58               	rlf	___fltol@f1+3,w
 10016     1008  00DE               	movwf	___fltol@exp1
 10017     1009  085E               	movf	___fltol@exp1,w
 10018     100A  1D03               	btfss	3,2
 10019     100B  280D               	goto	u5191
 10020     100C  280E               	goto	u5190
 10021     100D                     u5191:
 10022     100D  2817               	goto	l3285
 10023     100E                     u5190:
 10024     100E                     l3281:
 10025     100E  3000               	movlw	0
 10026     100F  00D8               	movwf	?___fltol+3
 10027     1010  3000               	movlw	0
 10028     1011  00D7               	movwf	?___fltol+2
 10029     1012  3000               	movlw	0
 10030     1013  00D6               	movwf	?___fltol+1
 10031     1014  3000               	movlw	0
 10032     1015  00D5               	movwf	?___fltol
 10033     1016  287A               	goto	l631
 10034     1017                     l3285:
 10035     1017  0855               	movf	___fltol@f1,w
 10036     1018  00D9               	movwf	??___fltol
 10037     1019  0856               	movf	___fltol@f1+1,w
 10038     101A  00DA               	movwf	??___fltol+1
 10039     101B  0857               	movf	___fltol@f1+2,w
 10040     101C  00DB               	movwf	??___fltol+2
 10041     101D  0858               	movf	___fltol@f1+3,w
 10042     101E  00DC               	movwf	??___fltol+3
 10043     101F  301F               	movlw	31
 10044     1020                     u5205:
 10045     1020  1003               	clrc
 10046     1021  0CDC               	rrf	??___fltol+3,f
 10047     1022  0CDB               	rrf	??___fltol+2,f
 10048     1023  0CDA               	rrf	??___fltol+1,f
 10049     1024  0CD9               	rrf	??___fltol,f
 10050     1025                     u5200:
 10051     1025  3EFF               	addlw	-1
 10052     1026  1D03               	skipz
 10053     1027  2820               	goto	u5205
 10054     1028  0859               	movf	??___fltol,w
 10055     1029  00DD               	movwf	___fltol@sign1
 10056     102A                     l3287:
 10057     102A  17D7               	bsf	___fltol@f1+2,7
 10058     102B                     l3289:
 10059     102B  30FF               	movlw	255
 10060     102C  05D5               	andwf	___fltol@f1,f
 10061     102D  30FF               	movlw	255
 10062     102E  05D6               	andwf	___fltol@f1+1,f
 10063     102F  30FF               	movlw	255
 10064     1030  05D7               	andwf	___fltol@f1+2,f
 10065     1031  3000               	movlw	0
 10066     1032  05D8               	andwf	___fltol@f1+3,f
 10067     1033                     l3291:
 10068     1033  3096               	movlw	150
 10069     1034  02DE               	subwf	___fltol@exp1,f
 10070     1035                     l3293:
 10071     1035  1FDE               	btfss	___fltol@exp1,7
 10072     1036  2838               	goto	u5211
 10073     1037  2839               	goto	u5210
 10074     1038                     u5211:
 10075     1038  2853               	goto	l3303
 10076     1039                     u5210:
 10077     1039                     l3295:
 10078     1039  085E               	movf	___fltol@exp1,w
 10079     103A  3A80               	xorlw	128
 10080     103B  3E97               	addlw	151
 10081     103C  1803               	skipnc
 10082     103D  283F               	goto	u5221
 10083     103E  2840               	goto	u5220
 10084     103F                     u5221:
 10085     103F  2841               	goto	l3301
 10086     1040                     u5220:
 10087     1040  280E               	goto	l3281
 10088     1041                     l3301:
 10089     1041  3001               	movlw	1
 10090     1042                     u5235:
 10091     1042  1003               	clrc
 10092     1043  0CD8               	rrf	___fltol@f1+3,f
 10093     1044  0CD7               	rrf	___fltol@f1+2,f
 10094     1045  0CD6               	rrf	___fltol@f1+1,f
 10095     1046  0CD5               	rrf	___fltol@f1,f
 10096     1047  3EFF               	addlw	-1
 10097     1048  1D03               	skipz
 10098     1049  2842               	goto	u5235
 10099     104A  3001               	movlw	1
 10100     104B  00D9               	movwf	??___fltol
 10101     104C  0859               	movf	??___fltol,w
 10102     104D  07DE               	addwf	___fltol@exp1,f
 10103     104E  1D03               	btfss	3,2
 10104     104F  2851               	goto	u5241
 10105     1050  2852               	goto	u5240
 10106     1051                     u5241:
 10107     1051  2841               	goto	l3301
 10108     1052                     u5240:
 10109     1052  286A               	goto	l3311
 10110     1053                     l3303:
 10111     1053  3020               	movlw	32
 10112     1054  025E               	subwf	___fltol@exp1,w
 10113     1055  1C03               	skipc
 10114     1056  2858               	goto	u5251
 10115     1057  2859               	goto	u5250
 10116     1058                     u5251:
 10117     1058  2865               	goto	l638
 10118     1059                     u5250:
 10119     1059  280E               	goto	l3281
 10120     105A                     l3309:
 10121     105A  3001               	movlw	1
 10122     105B  00D9               	movwf	??___fltol
 10123     105C                     u5265:
 10124     105C  1003               	clrc
 10125     105D  0DD5               	rlf	___fltol@f1,f
 10126     105E  0DD6               	rlf	___fltol@f1+1,f
 10127     105F  0DD7               	rlf	___fltol@f1+2,f
 10128     1060  0DD8               	rlf	___fltol@f1+3,f
 10129     1061  0BD9               	decfsz	??___fltol,f
 10130     1062  285C               	goto	u5265
 10131     1063  3001               	movlw	1
 10132     1064  02DE               	subwf	___fltol@exp1,f
 10133     1065                     l638:
 10134     1065  085E               	movf	___fltol@exp1,w
 10135     1066  1D03               	btfss	3,2
 10136     1067  2869               	goto	u5271
 10137     1068  286A               	goto	u5270
 10138     1069                     u5271:
 10139     1069  285A               	goto	l3309
 10140     106A                     u5270:
 10141     106A                     l3311:
 10142     106A  085D               	movf	___fltol@sign1,w
 10143     106B  1903               	btfsc	3,2
 10144     106C  286E               	goto	u5281
 10145     106D  286F               	goto	u5280
 10146     106E                     u5281:
 10147     106E  287A               	goto	l641
 10148     106F                     u5280:
 10149     106F                     l3313:
 10150     106F  09D5               	comf	___fltol@f1,f
 10151     1070  09D6               	comf	___fltol@f1+1,f
 10152     1071  09D7               	comf	___fltol@f1+2,f
 10153     1072  09D8               	comf	___fltol@f1+3,f
 10154     1073  0AD5               	incf	___fltol@f1,f
 10155     1074  1903               	skipnz
 10156     1075  0AD6               	incf	___fltol@f1+1,f
 10157     1076  1903               	skipnz
 10158     1077  0AD7               	incf	___fltol@f1+2,f
 10159     1078  1903               	skipnz
 10160     1079  0AD8               	incf	___fltol@f1+3,f
 10161     107A                     l641:
 10162     107A                     l631:
 10163     107A  0008               	return
 10164     107B                     __end_of___fltol:
 10165                           
 10166                           	psect	text26
 10167     1E2D                     __ptext26:	
 10168 ;; *************** function ___fldiv *****************
 10169 ;; Defined at:
 10170 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcdiv.c"
 10171 ;; Parameters:    Size  Location     Type
 10172 ;;  a               4   34[BANK0 ] long 
 10173 ;;  b               4   38[BANK0 ] long 
 10174 ;; Auto vars:     Size  Location     Type
 10175 ;;  grs             4   54[BANK0 ] unsigned long 
 10176 ;;  rem             4   47[BANK0 ] unsigned long 
 10177 ;;  new_exp         2   52[BANK0 ] int 
 10178 ;;  aexp            1   59[BANK0 ] unsigned char 
 10179 ;;  bexp            1   58[BANK0 ] unsigned char 
 10180 ;;  sign            1   51[BANK0 ] unsigned char 
 10181 ;; Return value:  Size  Location     Type
 10182 ;;                  4   34[BANK0 ] unsigned char 
 10183 ;; Registers used:
 10184 ;;		wreg, status,2, status,0, btemp+1
 10185 ;; Tracked objects:
 10186 ;;		On entry : 0/0
 10187 ;;		On exit  : 0/0
 10188 ;;		Unchanged: 0/0
 10189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10190 ;;      Params:         0       8       0       0       0
 10191 ;;      Locals:         0      13       0       0       0
 10192 ;;      Temps:          0       5       0       0       0
 10193 ;;      Totals:         0      26       0       0       0
 10194 ;;Total ram usage:       26 bytes
 10195 ;; Hardware stack levels used: 1
 10196 ;; Hardware stack levels required when called: 2
 10197 ;; This function calls:
 10198 ;;		Nothing
 10199 ;; This function is called by:
 10200 ;;		_main
 10201 ;; This function uses a non-reentrant model
 10202 ;;
 10203                           
 10204     1E2D                     ___fldiv:	
 10205                           ;psect for function ___fldiv
 10206                           
 10207     1E2D                     l3745:	
 10208                           ;incstack = 0
 10209                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
 10210                           
 10211     1E2D  1283               	bcf	3,5	;RP0=0, select bank0
 10212     1E2E  1303               	bcf	3,6	;RP1=0, select bank0
 10213     1E2F  0849               	movf	___fldiv@b+3,w
 10214     1E30  3980               	andlw	128
 10215     1E31  00D3               	movwf	___fldiv@sign
 10216     1E32                     l3747:
 10217     1E32  0849               	movf	___fldiv@b+3,w
 10218     1E33  00CA               	movwf	??___fldiv
 10219     1E34  074A               	addwf	??___fldiv,w
 10220     1E35  00DA               	movwf	___fldiv@bexp
 10221     1E36                     l3749:
 10222     1E36  1FC8               	btfss	___fldiv@b+2,7
 10223     1E37  2E39               	goto	u5951
 10224     1E38  2E3A               	goto	u5950
 10225     1E39                     u5951:
 10226     1E39  2E3B               	goto	l3753
 10227     1E3A                     u5950:
 10228     1E3A                     l3751:
 10229     1E3A  145A               	bsf	___fldiv@bexp,0
 10230     1E3B                     l3753:
 10231     1E3B  085A               	movf	___fldiv@bexp,w
 10232     1E3C  1903               	btfsc	3,2
 10233     1E3D  2E3F               	goto	u5961
 10234     1E3E  2E40               	goto	u5960
 10235     1E3F                     u5961:
 10236     1E3F  2E50               	goto	l3763
 10237     1E40                     u5960:
 10238     1E40                     l3755:
 10239     1E40  0A5A               	incf	___fldiv@bexp,w
 10240     1E41  1D03               	btfss	3,2
 10241     1E42  2E44               	goto	u5971
 10242     1E43  2E45               	goto	u5970
 10243     1E44                     u5971:
 10244     1E44  2E4D               	goto	l3759
 10245     1E45                     u5970:
 10246     1E45                     l3757:
 10247     1E45  3000               	movlw	0
 10248     1E46  00C9               	movwf	___fldiv@b+3
 10249     1E47  3000               	movlw	0
 10250     1E48  00C8               	movwf	___fldiv@b+2
 10251     1E49  3000               	movlw	0
 10252     1E4A  00C7               	movwf	___fldiv@b+1
 10253     1E4B  3000               	movlw	0
 10254     1E4C  00C6               	movwf	___fldiv@b
 10255     1E4D                     l3759:
 10256     1E4D  17C8               	bsf	___fldiv@b+2,7
 10257     1E4E                     l3761:
 10258     1E4E  01C9               	clrf	___fldiv@b+3
 10259     1E4F  2E58               	goto	l3765
 10260     1E50                     l3763:
 10261     1E50  3000               	movlw	0
 10262     1E51  00C9               	movwf	___fldiv@b+3
 10263     1E52  3000               	movlw	0
 10264     1E53  00C8               	movwf	___fldiv@b+2
 10265     1E54  3000               	movlw	0
 10266     1E55  00C7               	movwf	___fldiv@b+1
 10267     1E56  3000               	movlw	0
 10268     1E57  00C6               	movwf	___fldiv@b
 10269     1E58                     l3765:
 10270     1E58  0845               	movf	___fldiv@a+3,w
 10271     1E59  3980               	andlw	128
 10272     1E5A  00CA               	movwf	??___fldiv
 10273     1E5B  084A               	movf	??___fldiv,w
 10274     1E5C  06D3               	xorwf	___fldiv@sign,f
 10275     1E5D                     l3767:
 10276     1E5D  0845               	movf	___fldiv@a+3,w
 10277     1E5E  00CA               	movwf	??___fldiv
 10278     1E5F  074A               	addwf	??___fldiv,w
 10279     1E60  00DB               	movwf	___fldiv@aexp
 10280     1E61                     l3769:
 10281     1E61  1FC4               	btfss	___fldiv@a+2,7
 10282     1E62  2E64               	goto	u5981
 10283     1E63  2E65               	goto	u5980
 10284     1E64                     u5981:
 10285     1E64  2E66               	goto	l3773
 10286     1E65                     u5980:
 10287     1E65                     l3771:
 10288     1E65  145B               	bsf	___fldiv@aexp,0
 10289     1E66                     l3773:
 10290     1E66  085B               	movf	___fldiv@aexp,w
 10291     1E67  1903               	btfsc	3,2
 10292     1E68  2E6A               	goto	u5991
 10293     1E69  2E6B               	goto	u5990
 10294     1E6A                     u5991:
 10295     1E6A  2E7B               	goto	l3783
 10296     1E6B                     u5990:
 10297     1E6B                     l3775:
 10298     1E6B  0A5B               	incf	___fldiv@aexp,w
 10299     1E6C  1D03               	btfss	3,2
 10300     1E6D  2E6F               	goto	u6001
 10301     1E6E  2E70               	goto	u6000
 10302     1E6F                     u6001:
 10303     1E6F  2E78               	goto	l3779
 10304     1E70                     u6000:
 10305     1E70                     l3777:
 10306     1E70  3000               	movlw	0
 10307     1E71  00C5               	movwf	___fldiv@a+3
 10308     1E72  3000               	movlw	0
 10309     1E73  00C4               	movwf	___fldiv@a+2
 10310     1E74  3000               	movlw	0
 10311     1E75  00C3               	movwf	___fldiv@a+1
 10312     1E76  3000               	movlw	0
 10313     1E77  00C2               	movwf	___fldiv@a
 10314     1E78                     l3779:
 10315     1E78  17C4               	bsf	___fldiv@a+2,7
 10316     1E79                     l3781:
 10317     1E79  01C5               	clrf	___fldiv@a+3
 10318     1E7A  2E83               	goto	l811
 10319     1E7B                     l3783:
 10320     1E7B  3000               	movlw	0
 10321     1E7C  00C5               	movwf	___fldiv@a+3
 10322     1E7D  3000               	movlw	0
 10323     1E7E  00C4               	movwf	___fldiv@a+2
 10324     1E7F  3000               	movlw	0
 10325     1E80  00C3               	movwf	___fldiv@a+1
 10326     1E81  3000               	movlw	0
 10327     1E82  00C2               	movwf	___fldiv@a
 10328     1E83                     l811:
 10329     1E83  0845               	movf	___fldiv@a+3,w
 10330     1E84  0444               	iorwf	___fldiv@a+2,w
 10331     1E85  0443               	iorwf	___fldiv@a+1,w
 10332     1E86  0442               	iorwf	___fldiv@a,w
 10333     1E87  1D03               	skipz
 10334     1E88  2E8A               	goto	u6011
 10335     1E89  2E8B               	goto	u6010
 10336     1E8A                     u6011:
 10337     1E8A  2EA4               	goto	l3793
 10338     1E8B                     u6010:
 10339     1E8B                     l3785:
 10340     1E8B  3000               	movlw	0
 10341     1E8C  00C9               	movwf	___fldiv@b+3
 10342     1E8D  3000               	movlw	0
 10343     1E8E  00C8               	movwf	___fldiv@b+2
 10344     1E8F  3000               	movlw	0
 10345     1E90  00C7               	movwf	___fldiv@b+1
 10346     1E91  3000               	movlw	0
 10347     1E92  00C6               	movwf	___fldiv@b
 10348     1E93  3080               	movlw	128
 10349     1E94  04C8               	iorwf	___fldiv@b+2,f
 10350     1E95  307F               	movlw	127
 10351     1E96  04C9               	iorwf	___fldiv@b+3,f
 10352     1E97                     l3787:
 10353     1E97  0853               	movf	___fldiv@sign,w
 10354     1E98  00CA               	movwf	??___fldiv
 10355     1E99  084A               	movf	??___fldiv,w
 10356     1E9A  04C9               	iorwf	___fldiv@b+3,f
 10357     1E9B                     l3789:
 10358     1E9B  0849               	movf	___fldiv@b+3,w
 10359     1E9C  00C5               	movwf	?___fldiv+3
 10360     1E9D  0848               	movf	___fldiv@b+2,w
 10361     1E9E  00C4               	movwf	?___fldiv+2
 10362     1E9F  0847               	movf	___fldiv@b+1,w
 10363     1EA0  00C3               	movwf	?___fldiv+1
 10364     1EA1  0846               	movf	___fldiv@b,w
 10365     1EA2  00C2               	movwf	?___fldiv
 10366     1EA3  2FFF               	goto	l813
 10367     1EA4                     l3793:
 10368     1EA4  085A               	movf	___fldiv@bexp,w
 10369     1EA5  1D03               	btfss	3,2
 10370     1EA6  2EA8               	goto	u6021
 10371     1EA7  2EA9               	goto	u6020
 10372     1EA8                     u6021:
 10373     1EA8  2EB2               	goto	l3799
 10374     1EA9                     u6020:
 10375     1EA9                     l3795:
 10376     1EA9  3000               	movlw	0
 10377     1EAA  00C5               	movwf	?___fldiv+3
 10378     1EAB  3000               	movlw	0
 10379     1EAC  00C4               	movwf	?___fldiv+2
 10380     1EAD  3000               	movlw	0
 10381     1EAE  00C3               	movwf	?___fldiv+1
 10382     1EAF  3000               	movlw	0
 10383     1EB0  00C2               	movwf	?___fldiv
 10384     1EB1  2FFF               	goto	l813
 10385     1EB2                     l3799:
 10386     1EB2  085A               	movf	___fldiv@bexp,w
 10387     1EB3  00CA               	movwf	??___fldiv
 10388     1EB4  01CB               	clrf	??___fldiv+1
 10389     1EB5  084B               	movf	??___fldiv+1,w
 10390     1EB6  00CD               	movwf	??___fldiv+3
 10391     1EB7  085B               	movf	___fldiv@aexp,w
 10392     1EB8  024A               	subwf	??___fldiv,w
 10393     1EB9  00CC               	movwf	??___fldiv+2
 10394     1EBA  1C03               	skipc
 10395     1EBB  03CD               	decf	??___fldiv+3,f
 10396     1EBC  084C               	movf	??___fldiv+2,w
 10397     1EBD  3E7F               	addlw	127
 10398     1EBE  00D4               	movwf	___fldiv@new_exp
 10399     1EBF  084D               	movf	??___fldiv+3,w
 10400     1EC0  1803               	skipnc
 10401     1EC1  3E01               	addlw	1
 10402     1EC2  3E00               	addlw	0
 10403     1EC3  00D5               	movwf	___fldiv@new_exp+1
 10404     1EC4                     l3801:
 10405     1EC4  0849               	movf	___fldiv@b+3,w
 10406     1EC5  00D2               	movwf	___fldiv@rem+3
 10407     1EC6  0848               	movf	___fldiv@b+2,w
 10408     1EC7  00D1               	movwf	___fldiv@rem+2
 10409     1EC8  0847               	movf	___fldiv@b+1,w
 10410     1EC9  00D0               	movwf	___fldiv@rem+1
 10411     1ECA  0846               	movf	___fldiv@b,w
 10412     1ECB  00CF               	movwf	___fldiv@rem
 10413     1ECC                     l3803:
 10414     1ECC  3000               	movlw	0
 10415     1ECD  00C9               	movwf	___fldiv@b+3
 10416     1ECE  3000               	movlw	0
 10417     1ECF  00C8               	movwf	___fldiv@b+2
 10418     1ED0  3000               	movlw	0
 10419     1ED1  00C7               	movwf	___fldiv@b+1
 10420     1ED2  3000               	movlw	0
 10421     1ED3  00C6               	movwf	___fldiv@b
 10422     1ED4                     l3805:
 10423     1ED4  3000               	movlw	0
 10424     1ED5  00D9               	movwf	___fldiv@grs+3
 10425     1ED6  3000               	movlw	0
 10426     1ED7  00D8               	movwf	___fldiv@grs+2
 10427     1ED8  3000               	movlw	0
 10428     1ED9  00D7               	movwf	___fldiv@grs+1
 10429     1EDA  3000               	movlw	0
 10430     1EDB  00D6               	movwf	___fldiv@grs
 10431     1EDC                     l3807:
 10432     1EDC  01DB               	clrf	___fldiv@aexp
 10433     1EDD  2F28               	goto	l3827
 10434     1EDE                     l3809:
 10435     1EDE  085B               	movf	___fldiv@aexp,w
 10436     1EDF  1903               	btfsc	3,2
 10437     1EE0  2EE2               	goto	u6031
 10438     1EE1  2EE3               	goto	u6030
 10439     1EE2                     u6031:
 10440     1EE2  2F03               	goto	l3819
 10441     1EE3                     u6030:
 10442     1EE3                     l3811:
 10443     1EE3  3001               	movlw	1
 10444     1EE4  00CA               	movwf	??___fldiv
 10445     1EE5                     u6045:
 10446     1EE5  1003               	clrc
 10447     1EE6  0DCF               	rlf	___fldiv@rem,f
 10448     1EE7  0DD0               	rlf	___fldiv@rem+1,f
 10449     1EE8  0DD1               	rlf	___fldiv@rem+2,f
 10450     1EE9  0DD2               	rlf	___fldiv@rem+3,f
 10451     1EEA  0BCA               	decfsz	??___fldiv,f
 10452     1EEB  2EE5               	goto	u6045
 10453     1EEC  3001               	movlw	1
 10454     1EED  00CA               	movwf	??___fldiv
 10455     1EEE                     u6055:
 10456     1EEE  1003               	clrc
 10457     1EEF  0DC6               	rlf	___fldiv@b,f
 10458     1EF0  0DC7               	rlf	___fldiv@b+1,f
 10459     1EF1  0DC8               	rlf	___fldiv@b+2,f
 10460     1EF2  0DC9               	rlf	___fldiv@b+3,f
 10461     1EF3  0BCA               	decfsz	??___fldiv,f
 10462     1EF4  2EEE               	goto	u6055
 10463     1EF5                     l3813:
 10464     1EF5  1FD9               	btfss	___fldiv@grs+3,7
 10465     1EF6  2EF8               	goto	u6061
 10466     1EF7  2EF9               	goto	u6060
 10467     1EF8                     u6061:
 10468     1EF8  2EFA               	goto	l3817
 10469     1EF9                     u6060:
 10470     1EF9                     l3815:
 10471     1EF9  1446               	bsf	___fldiv@b,0
 10472     1EFA                     l3817:
 10473     1EFA  3001               	movlw	1
 10474     1EFB  00CA               	movwf	??___fldiv
 10475     1EFC                     u6075:
 10476     1EFC  1003               	clrc
 10477     1EFD  0DD6               	rlf	___fldiv@grs,f
 10478     1EFE  0DD7               	rlf	___fldiv@grs+1,f
 10479     1EFF  0DD8               	rlf	___fldiv@grs+2,f
 10480     1F00  0DD9               	rlf	___fldiv@grs+3,f
 10481     1F01  0BCA               	decfsz	??___fldiv,f
 10482     1F02  2EFC               	goto	u6075
 10483     1F03                     l3819:
 10484     1F03  0845               	movf	___fldiv@a+3,w
 10485     1F04  0252               	subwf	___fldiv@rem+3,w
 10486     1F05  1D03               	skipz
 10487     1F06  2F11               	goto	u6085
 10488     1F07  0844               	movf	___fldiv@a+2,w
 10489     1F08  0251               	subwf	___fldiv@rem+2,w
 10490     1F09  1D03               	skipz
 10491     1F0A  2F11               	goto	u6085
 10492     1F0B  0843               	movf	___fldiv@a+1,w
 10493     1F0C  0250               	subwf	___fldiv@rem+1,w
 10494     1F0D  1D03               	skipz
 10495     1F0E  2F11               	goto	u6085
 10496     1F0F  0842               	movf	___fldiv@a,w
 10497     1F10  024F               	subwf	___fldiv@rem,w
 10498     1F11                     u6085:
 10499     1F11  1C03               	skipc
 10500     1F12  2F14               	goto	u6081
 10501     1F13  2F15               	goto	u6080
 10502     1F14                     u6081:
 10503     1F14  2F24               	goto	l3825
 10504     1F15                     u6080:
 10505     1F15                     l3821:
 10506     1F15  1759               	bsf	___fldiv@grs+3,6
 10507     1F16                     l3823:
 10508     1F16  0842               	movf	___fldiv@a,w
 10509     1F17  02CF               	subwf	___fldiv@rem,f
 10510     1F18  0843               	movf	___fldiv@a+1,w
 10511     1F19  1C03               	skipc
 10512     1F1A  0F43               	incfsz	___fldiv@a+1,w
 10513     1F1B  02D0               	subwf	___fldiv@rem+1,f
 10514     1F1C  0844               	movf	___fldiv@a+2,w
 10515     1F1D  1C03               	skipc
 10516     1F1E  0F44               	incfsz	___fldiv@a+2,w
 10517     1F1F  02D1               	subwf	___fldiv@rem+2,f
 10518     1F20  0845               	movf	___fldiv@a+3,w
 10519     1F21  1C03               	skipc
 10520     1F22  0F45               	incfsz	___fldiv@a+3,w
 10521     1F23  02D2               	subwf	___fldiv@rem+3,f
 10522     1F24                     l3825:
 10523     1F24  3001               	movlw	1
 10524     1F25  00CA               	movwf	??___fldiv
 10525     1F26  084A               	movf	??___fldiv,w
 10526     1F27  07DB               	addwf	___fldiv@aexp,f
 10527     1F28                     l3827:
 10528     1F28  301A               	movlw	26
 10529     1F29  025B               	subwf	___fldiv@aexp,w
 10530     1F2A  1C03               	skipc
 10531     1F2B  2F2D               	goto	u6091
 10532     1F2C  2F2E               	goto	u6090
 10533     1F2D                     u6091:
 10534     1F2D  2EDE               	goto	l3809
 10535     1F2E                     u6090:
 10536     1F2E                     l3829:
 10537     1F2E  0852               	movf	___fldiv@rem+3,w
 10538     1F2F  0451               	iorwf	___fldiv@rem+2,w
 10539     1F30  0450               	iorwf	___fldiv@rem+1,w
 10540     1F31  044F               	iorwf	___fldiv@rem,w
 10541     1F32  1903               	skipnz
 10542     1F33  2F35               	goto	u6101
 10543     1F34  2F36               	goto	u6100
 10544     1F35                     u6101:
 10545     1F35  2F55               	goto	l3843
 10546     1F36                     u6100:
 10547     1F36                     l3831:
 10548     1F36  1456               	bsf	___fldiv@grs,0
 10549     1F37  2F55               	goto	l3843
 10550     1F38                     l3833:
 10551     1F38  3001               	movlw	1
 10552     1F39  00CA               	movwf	??___fldiv
 10553     1F3A                     u6115:
 10554     1F3A  1003               	clrc
 10555     1F3B  0DC6               	rlf	___fldiv@b,f
 10556     1F3C  0DC7               	rlf	___fldiv@b+1,f
 10557     1F3D  0DC8               	rlf	___fldiv@b+2,f
 10558     1F3E  0DC9               	rlf	___fldiv@b+3,f
 10559     1F3F  0BCA               	decfsz	??___fldiv,f
 10560     1F40  2F3A               	goto	u6115
 10561     1F41                     l3835:
 10562     1F41  1FD9               	btfss	___fldiv@grs+3,7
 10563     1F42  2F44               	goto	u6121
 10564     1F43  2F45               	goto	u6120
 10565     1F44                     u6121:
 10566     1F44  2F46               	goto	l3839
 10567     1F45                     u6120:
 10568     1F45                     l3837:
 10569     1F45  1446               	bsf	___fldiv@b,0
 10570     1F46                     l3839:
 10571     1F46  3001               	movlw	1
 10572     1F47  00CA               	movwf	??___fldiv
 10573     1F48                     u6135:
 10574     1F48  1003               	clrc
 10575     1F49  0DD6               	rlf	___fldiv@grs,f
 10576     1F4A  0DD7               	rlf	___fldiv@grs+1,f
 10577     1F4B  0DD8               	rlf	___fldiv@grs+2,f
 10578     1F4C  0DD9               	rlf	___fldiv@grs+3,f
 10579     1F4D  0BCA               	decfsz	??___fldiv,f
 10580     1F4E  2F48               	goto	u6135
 10581     1F4F                     l3841:
 10582     1F4F  30FF               	movlw	255
 10583     1F50  07D4               	addwf	___fldiv@new_exp,f
 10584     1F51  1803               	skipnc
 10585     1F52  0AD5               	incf	___fldiv@new_exp+1,f
 10586     1F53  30FF               	movlw	255
 10587     1F54  07D5               	addwf	___fldiv@new_exp+1,f
 10588     1F55                     l3843:
 10589     1F55  1FC8               	btfss	___fldiv@b+2,7
 10590     1F56  2F58               	goto	u6141
 10591     1F57  2F59               	goto	u6140
 10592     1F58                     u6141:
 10593     1F58  2F38               	goto	l3833
 10594     1F59                     u6140:
 10595     1F59                     l3845:
 10596     1F59  01DB               	clrf	___fldiv@aexp
 10597     1F5A                     l3847:
 10598     1F5A  1FD9               	btfss	___fldiv@grs+3,7
 10599     1F5B  2F5D               	goto	u6151
 10600     1F5C  2F5E               	goto	u6150
 10601     1F5D                     u6151:
 10602     1F5D  2F7A               	goto	l3855
 10603     1F5E                     u6150:
 10604     1F5E                     l3849:
 10605     1F5E  30FF               	movlw	255
 10606     1F5F  0556               	andwf	___fldiv@grs,w
 10607     1F60  00CA               	movwf	??___fldiv
 10608     1F61  30FF               	movlw	255
 10609     1F62  0557               	andwf	___fldiv@grs+1,w
 10610     1F63  00CB               	movwf	??___fldiv+1
 10611     1F64  30FF               	movlw	255
 10612     1F65  0558               	andwf	___fldiv@grs+2,w
 10613     1F66  00CC               	movwf	??___fldiv+2
 10614     1F67  307F               	movlw	127
 10615     1F68  0559               	andwf	___fldiv@grs+3,w
 10616     1F69  00CD               	movwf	??___fldiv+3
 10617     1F6A  084D               	movf	??___fldiv+3,w
 10618     1F6B  044C               	iorwf	??___fldiv+2,w
 10619     1F6C  044B               	iorwf	??___fldiv+1,w
 10620     1F6D  044A               	iorwf	??___fldiv,w
 10621     1F6E  1903               	skipnz
 10622     1F6F  2F71               	goto	u6161
 10623     1F70  2F72               	goto	u6160
 10624     1F71                     u6161:
 10625     1F71  2F75               	goto	l827
 10626     1F72                     u6160:
 10627     1F72                     l3851:
 10628     1F72  01DB               	clrf	___fldiv@aexp
 10629     1F73  0ADB               	incf	___fldiv@aexp,f
 10630     1F74  2F7A               	goto	l3855
 10631     1F75                     l827:
 10632     1F75  1C46               	btfss	___fldiv@b,0
 10633     1F76  2F78               	goto	u6171
 10634     1F77  2F79               	goto	u6170
 10635     1F78                     u6171:
 10636     1F78  2F7A               	goto	l3855
 10637     1F79                     u6170:
 10638     1F79  2F72               	goto	l3851
 10639     1F7A                     l3855:
 10640     1F7A  085B               	movf	___fldiv@aexp,w
 10641     1F7B  1903               	btfsc	3,2
 10642     1F7C  2F7E               	goto	u6181
 10643     1F7D  2F7F               	goto	u6180
 10644     1F7E                     u6181:
 10645     1F7E  2FB0               	goto	l3865
 10646     1F7F                     u6180:
 10647     1F7F                     l3857:
 10648     1F7F  3001               	movlw	1
 10649     1F80  07C6               	addwf	___fldiv@b,f
 10650     1F81  3000               	movlw	0
 10651     1F82  1803               	skipnc
 10652     1F83  3001               	movlw	1
 10653     1F84  07C7               	addwf	___fldiv@b+1,f
 10654     1F85  3000               	movlw	0
 10655     1F86  1803               	skipnc
 10656     1F87  3001               	movlw	1
 10657     1F88  07C8               	addwf	___fldiv@b+2,f
 10658     1F89  3000               	movlw	0
 10659     1F8A  1803               	skipnc
 10660     1F8B  3001               	movlw	1
 10661     1F8C  07C9               	addwf	___fldiv@b+3,f
 10662     1F8D                     l3859:
 10663     1F8D  1C49               	btfss	___fldiv@b+3,0
 10664     1F8E  2F90               	goto	u6191
 10665     1F8F  2F91               	goto	u6190
 10666     1F90                     u6191:
 10667     1F90  2FB0               	goto	l3865
 10668     1F91                     u6190:
 10669     1F91                     l3861:
 10670     1F91  0846               	movf	___fldiv@b,w
 10671     1F92  00CA               	movwf	??___fldiv
 10672     1F93  0847               	movf	___fldiv@b+1,w
 10673     1F94  00CB               	movwf	??___fldiv+1
 10674     1F95  0848               	movf	___fldiv@b+2,w
 10675     1F96  00CC               	movwf	??___fldiv+2
 10676     1F97  0849               	movf	___fldiv@b+3,w
 10677     1F98  00CD               	movwf	??___fldiv+3
 10678     1F99  3001               	movlw	1
 10679     1F9A  00CE               	movwf	??___fldiv+4
 10680     1F9B                     u6205:
 10681     1F9B  0D4D               	rlf	??___fldiv+3,w
 10682     1F9C  0CCD               	rrf	??___fldiv+3,f
 10683     1F9D  0CCC               	rrf	??___fldiv+2,f
 10684     1F9E  0CCB               	rrf	??___fldiv+1,f
 10685     1F9F  0CCA               	rrf	??___fldiv,f
 10686     1FA0                     u6200:
 10687     1FA0  0BCE               	decfsz	??___fldiv+4,f
 10688     1FA1  2F9B               	goto	u6205
 10689     1FA2  084D               	movf	??___fldiv+3,w
 10690     1FA3  00C9               	movwf	___fldiv@b+3
 10691     1FA4  084C               	movf	??___fldiv+2,w
 10692     1FA5  00C8               	movwf	___fldiv@b+2
 10693     1FA6  084B               	movf	??___fldiv+1,w
 10694     1FA7  00C7               	movwf	___fldiv@b+1
 10695     1FA8  084A               	movf	??___fldiv,w
 10696     1FA9  00C6               	movwf	___fldiv@b
 10697     1FAA                     l3863:
 10698     1FAA  3001               	movlw	1
 10699     1FAB  07D4               	addwf	___fldiv@new_exp,f
 10700     1FAC  1803               	skipnc
 10701     1FAD  0AD5               	incf	___fldiv@new_exp+1,f
 10702     1FAE  3000               	movlw	0
 10703     1FAF  07D5               	addwf	___fldiv@new_exp+1,f
 10704     1FB0                     l3865:
 10705     1FB0  0855               	movf	___fldiv@new_exp+1,w
 10706     1FB1  3A80               	xorlw	128
 10707     1FB2  00FF               	movwf	btemp+1
 10708     1FB3  3080               	movlw	128
 10709     1FB4  027F               	subwf	btemp+1,w
 10710     1FB5  1D03               	skipz
 10711     1FB6  2FB9               	goto	u6215
 10712     1FB7  30FF               	movlw	255
 10713     1FB8  0254               	subwf	___fldiv@new_exp,w
 10714     1FB9                     u6215:
 10715     1FB9  1C03               	skipc
 10716     1FBA  2FBC               	goto	u6211
 10717     1FBB  2FBD               	goto	u6210
 10718     1FBC                     u6211:
 10719     1FBC  2FCB               	goto	l3869
 10720     1FBD                     u6210:
 10721     1FBD                     l3867:
 10722     1FBD  30FF               	movlw	255
 10723     1FBE  1283               	bcf	3,5	;RP0=0, select bank0
 10724     1FBF  1303               	bcf	3,6	;RP1=0, select bank0
 10725     1FC0  00D4               	movwf	___fldiv@new_exp
 10726     1FC1  3000               	movlw	0
 10727     1FC2  00D5               	movwf	___fldiv@new_exp+1
 10728     1FC3  3000               	movlw	0
 10729     1FC4  00C9               	movwf	___fldiv@b+3
 10730     1FC5  3000               	movlw	0
 10731     1FC6  00C8               	movwf	___fldiv@b+2
 10732     1FC7  3000               	movlw	0
 10733     1FC8  00C7               	movwf	___fldiv@b+1
 10734     1FC9  3000               	movlw	0
 10735     1FCA  00C6               	movwf	___fldiv@b
 10736     1FCB                     l3869:
 10737     1FCB  1283               	bcf	3,5	;RP0=0, select bank0
 10738     1FCC  1303               	bcf	3,6	;RP1=0, select bank0
 10739     1FCD  0855               	movf	___fldiv@new_exp+1,w
 10740     1FCE  3A80               	xorlw	128
 10741     1FCF  00FF               	movwf	btemp+1
 10742     1FD0  3080               	movlw	128
 10743     1FD1  027F               	subwf	btemp+1,w
 10744     1FD2  1D03               	skipz
 10745     1FD3  2FD6               	goto	u6225
 10746     1FD4  3001               	movlw	1
 10747     1FD5  0254               	subwf	___fldiv@new_exp,w
 10748     1FD6                     u6225:
 10749     1FD6  1803               	skipnc
 10750     1FD7  2FD9               	goto	u6221
 10751     1FD8  2FDA               	goto	u6220
 10752     1FD9                     u6221:
 10753     1FD9  2FE7               	goto	l833
 10754     1FDA                     u6220:
 10755     1FDA                     l3871:
 10756     1FDA  1283               	bcf	3,5	;RP0=0, select bank0
 10757     1FDB  1303               	bcf	3,6	;RP1=0, select bank0
 10758     1FDC  01D4               	clrf	___fldiv@new_exp
 10759     1FDD  01D5               	clrf	___fldiv@new_exp+1
 10760     1FDE                     l3873:
 10761     1FDE  3000               	movlw	0
 10762     1FDF  00C9               	movwf	___fldiv@b+3
 10763     1FE0  3000               	movlw	0
 10764     1FE1  00C8               	movwf	___fldiv@b+2
 10765     1FE2  3000               	movlw	0
 10766     1FE3  00C7               	movwf	___fldiv@b+1
 10767     1FE4  3000               	movlw	0
 10768     1FE5  00C6               	movwf	___fldiv@b
 10769     1FE6                     l3875:
 10770     1FE6  01D3               	clrf	___fldiv@sign
 10771     1FE7                     l833:
 10772     1FE7  1283               	bcf	3,5	;RP0=0, select bank0
 10773     1FE8  1303               	bcf	3,6	;RP1=0, select bank0
 10774     1FE9  0854               	movf	___fldiv@new_exp,w
 10775     1FEA  00DA               	movwf	___fldiv@bexp
 10776     1FEB                     l3877:
 10777     1FEB  1C5A               	btfss	___fldiv@bexp,0
 10778     1FEC  2FEE               	goto	u6231
 10779     1FED  2FEF               	goto	u6230
 10780     1FEE                     u6231:
 10781     1FEE  2FF1               	goto	l3881
 10782     1FEF                     u6230:
 10783     1FEF                     l3879:
 10784     1FEF  17C8               	bsf	___fldiv@b+2,7
 10785     1FF0  2FF5               	goto	l835
 10786     1FF1                     l3881:
 10787     1FF1  307F               	movlw	127
 10788     1FF2  00CA               	movwf	??___fldiv
 10789     1FF3  084A               	movf	??___fldiv,w
 10790     1FF4  05C8               	andwf	___fldiv@b+2,f
 10791     1FF5                     l835:
 10792     1FF5  085A               	movf	___fldiv@bexp,w
 10793     1FF6  00CA               	movwf	??___fldiv
 10794     1FF7  1003               	clrc
 10795     1FF8  0C4A               	rrf	??___fldiv,w
 10796     1FF9  00C9               	movwf	___fldiv@b+3
 10797     1FFA  0853               	movf	___fldiv@sign,w
 10798     1FFB  00CA               	movwf	??___fldiv
 10799     1FFC  084A               	movf	??___fldiv,w
 10800     1FFD  04C9               	iorwf	___fldiv@b+3,f
 10801     1FFE  2E9B               	goto	l3789
 10802     1FFF                     l813:
 10803     1FFF  0008               	return
 10804     2000                     __end_of___fldiv:
 10805                           
 10806                           	psect	text27
 10807     1920                     __ptext27:	
 10808 ;; *************** function _UART_write_char *****************
 10809 ;; Defined at:
 10810 ;;		line 32 in file "uart.c"
 10811 ;; Parameters:    Size  Location     Type
 10812 ;;  character       1    wreg     PTR unsigned char 
 10813 ;;		 -> STR_1(8), 
 10814 ;; Auto vars:     Size  Location     Type
 10815 ;;  character       1    3[COMMON] PTR unsigned char 
 10816 ;;		 -> STR_1(8), 
 10817 ;; Return value:  Size  Location     Type
 10818 ;;                  1    wreg      void 
 10819 ;; Registers used:
 10820 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 10821 ;; Tracked objects:
 10822 ;;		On entry : 0/0
 10823 ;;		On exit  : 0/0
 10824 ;;		Unchanged: 0/0
 10825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10826 ;;      Params:         0       0       0       0       0
 10827 ;;      Locals:         1       0       0       0       0
 10828 ;;      Temps:          1       0       0       0       0
 10829 ;;      Totals:         2       0       0       0       0
 10830 ;;Total ram usage:        2 bytes
 10831 ;; Hardware stack levels used: 1
 10832 ;; Hardware stack levels required when called: 2
 10833 ;; This function calls:
 10834 ;;		Nothing
 10835 ;; This function is called by:
 10836 ;;		_main
 10837 ;; This function uses a non-reentrant model
 10838 ;;
 10839                           
 10840     1920                     _UART_write_char:	
 10841                           ;psect for function _UART_write_char
 10842                           
 10843                           
 10844                           ;incstack = 0
 10845                           ; Regs used in _UART_write_char: [wreg-fsr0h+status,2+status,0+pclath]
 10846                           ;UART_write_char@character stored from wreg
 10847     1920  00F3               	movwf	UART_write_char@character
 10848     1921                     l3483:
 10849                           
 10850                           ;uart.c: 33:     while (*character != '\0'){
 10851     1921  2934               	goto	l3489
 10852     1922                     l242:
 10853     1922  1283               	bcf	3,5	;RP0=0, select bank0
 10854     1923  1303               	bcf	3,6	;RP1=0, select bank0
 10855     1924  1E0C               	btfss	12,4	;volatile
 10856     1925  2927               	goto	u5491
 10857     1926  2928               	goto	u5490
 10858     1927                     u5491:
 10859     1927  2922               	goto	l242
 10860     1928                     u5490:
 10861     1928                     l3485:
 10862                           
 10863                           ;uart.c: 35:         TXREG = *character;
 10864     1928  0873               	movf	UART_write_char@character,w
 10865     1929  0084               	movwf	4
 10866     192A  120A  118A  272A  160A  158A  	fcall	stringdir
 10867     192F  0099               	movwf	25	;volatile
 10868     1930                     l3487:
 10869                           
 10870                           ;uart.c: 36:         *character++;
 10871     1930  3001               	movlw	1
 10872     1931  00F2               	movwf	??_UART_write_char
 10873     1932  0872               	movf	??_UART_write_char,w
 10874     1933  07F3               	addwf	UART_write_char@character,f
 10875     1934                     l3489:
 10876                           
 10877                           ;uart.c: 33:     while (*character != '\0'){
 10878     1934  0873               	movf	UART_write_char@character,w
 10879     1935  0084               	movwf	4
 10880     1936  120A  118A  272A  160A  158A  	fcall	stringdir
 10881     193B  3A00               	xorlw	0
 10882     193C  1D03               	skipz
 10883     193D  293F               	goto	u5501
 10884     193E  2940               	goto	u5500
 10885     193F                     u5501:
 10886     193F  2922               	goto	l242
 10887     1940                     u5500:
 10888     1940                     l246:
 10889     1940  0008               	return
 10890     1941                     __end_of_UART_write_char:
 10891                           
 10892                           	psect	text28
 10893     0800                     __ptext28:	
 10894 ;; *************** function _UART_TX_config *****************
 10895 ;; Defined at:
 10896 ;;		line 26 in file "uart.c"
 10897 ;; Parameters:    Size  Location     Type
 10898 ;;  baudrate        2    2[COMMON] unsigned int 
 10899 ;; Auto vars:     Size  Location     Type
 10900 ;;		None
 10901 ;; Return value:  Size  Location     Type
 10902 ;;                  1    wreg      void 
 10903 ;; Registers used:
 10904 ;;		None
 10905 ;; Tracked objects:
 10906 ;;		On entry : 0/0
 10907 ;;		On exit  : 0/0
 10908 ;;		Unchanged: 0/0
 10909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10910 ;;      Params:         2       0       0       0       0
 10911 ;;      Locals:         0       0       0       0       0
 10912 ;;      Temps:          0       0       0       0       0
 10913 ;;      Totals:         2       0       0       0       0
 10914 ;;Total ram usage:        2 bytes
 10915 ;; Hardware stack levels used: 1
 10916 ;; Hardware stack levels required when called: 2
 10917 ;; This function calls:
 10918 ;;		Nothing
 10919 ;; This function is called by:
 10920 ;;		_main
 10921 ;; This function uses a non-reentrant model
 10922 ;;
 10923                           
 10924     0800                     _UART_TX_config:	
 10925                           ;psect for function _UART_TX_config
 10926                           
 10927     0800                     l3473:	
 10928                           ;incstack = 0
 10929                           ; Regs used in _UART_TX_config: []
 10930                           
 10931                           
 10932                           ;uart.c: 27:     TXSTAbits.TXEN = 1;
 10933     0800  1683               	bsf	3,5	;RP0=1, select bank1
 10934     0801  1303               	bcf	3,6	;RP1=0, select bank1
 10935     0802  1698               	bsf	24,5	;volatile
 10936                           
 10937                           ;uart.c: 29:     PIR1bits.TXIF = 0;
 10938     0803  1283               	bcf	3,5	;RP0=0, select bank0
 10939     0804  1303               	bcf	3,6	;RP1=0, select bank0
 10940     0805  120C               	bcf	12,4	;volatile
 10941     0806                     l237:
 10942     0806  0008               	return
 10943     0807                     __end_of_UART_TX_config:
 10944                           
 10945                           	psect	text29
 10946     1892                     __ptext29:	
 10947 ;; *************** function _UART_RX_config *****************
 10948 ;; Defined at:
 10949 ;;		line 17 in file "uart.c"
 10950 ;; Parameters:    Size  Location     Type
 10951 ;;  baudrate        2    2[COMMON] unsigned int 
 10952 ;; Auto vars:     Size  Location     Type
 10953 ;;		None
 10954 ;; Return value:  Size  Location     Type
 10955 ;;                  1    wreg      void 
 10956 ;; Registers used:
 10957 ;;		wreg
 10958 ;; Tracked objects:
 10959 ;;		On entry : 0/0
 10960 ;;		On exit  : 0/0
 10961 ;;		Unchanged: 0/0
 10962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10963 ;;      Params:         2       0       0       0       0
 10964 ;;      Locals:         0       0       0       0       0
 10965 ;;      Temps:          0       0       0       0       0
 10966 ;;      Totals:         2       0       0       0       0
 10967 ;;Total ram usage:        2 bytes
 10968 ;; Hardware stack levels used: 1
 10969 ;; Hardware stack levels required when called: 2
 10970 ;; This function calls:
 10971 ;;		Nothing
 10972 ;; This function is called by:
 10973 ;;		_main
 10974 ;; This function uses a non-reentrant model
 10975 ;;
 10976                           
 10977     1892                     _UART_RX_config:	
 10978                           ;psect for function _UART_RX_config
 10979                           
 10980     1892                     l3475:	
 10981                           ;incstack = 0
 10982                           ; Regs used in _UART_RX_config: [wreg]
 10983                           
 10984                           
 10985                           ;uart.c: 18:     SPBRG = 12;
 10986     1892  300C               	movlw	12
 10987     1893  1683               	bsf	3,5	;RP0=1, select bank1
 10988     1894  1303               	bcf	3,6	;RP1=0, select bank1
 10989     1895  0099               	movwf	25	;volatile
 10990     1896                     l3477:
 10991                           
 10992                           ;uart.c: 21:     TXSTAbits.SYNC = 0;
 10993     1896  1218               	bcf	24,4	;volatile
 10994     1897                     l3479:
 10995                           
 10996                           ;uart.c: 22:     RCSTAbits.SPEN = 1;
 10997     1897  1283               	bcf	3,5	;RP0=0, select bank0
 10998     1898  1303               	bcf	3,6	;RP1=0, select bank0
 10999     1899  1798               	bsf	24,7	;volatile
 11000     189A                     l3481:
 11001                           
 11002                           ;uart.c: 23:     RCSTAbits.CREN = 1;
 11003     189A  1618               	bsf	24,4	;volatile
 11004     189B                     l234:
 11005     189B  0008               	return
 11006     189C                     __end_of_UART_RX_config:
 11007                           
 11008                           	psect	text30
 11009     1A53                     __ptext30:	
 11010 ;; *************** function _Lcd_Write_String *****************
 11011 ;; Defined at:
 11012 ;;		line 117 in file "LCD.c"
 11013 ;; Parameters:    Size  Location     Type
 11014 ;;  a               2    5[COMMON] PTR unsigned char 
 11015 ;;		 -> STR_8(2), ADC2(4), STR_6(2), ADC1(4), 
 11016 ;;		 -> STR_4(4), STR_3(3), STR_2(3), 
 11017 ;; Auto vars:     Size  Location     Type
 11018 ;;  i               2    0[BANK0 ] int 
 11019 ;; Return value:  Size  Location     Type
 11020 ;;                  1    wreg      void 
 11021 ;; Registers used:
 11022 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11023 ;; Tracked objects:
 11024 ;;		On entry : 0/0
 11025 ;;		On exit  : 0/0
 11026 ;;		Unchanged: 0/0
 11027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11028 ;;      Params:         2       0       0       0       0
 11029 ;;      Locals:         0       2       0       0       0
 11030 ;;      Temps:          3       0       0       0       0
 11031 ;;      Totals:         5       2       0       0       0
 11032 ;;Total ram usage:        7 bytes
 11033 ;; Hardware stack levels used: 1
 11034 ;; Hardware stack levels required when called: 4
 11035 ;; This function calls:
 11036 ;;		_Lcd_Write_Char
 11037 ;; This function is called by:
 11038 ;;		_main
 11039 ;; This function uses a non-reentrant model
 11040 ;;
 11041                           
 11042     1A53                     _Lcd_Write_String:	
 11043                           ;psect for function _Lcd_Write_String
 11044                           
 11045     1A53                     l4161:	
 11046                           ;incstack = 0
 11047                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 11048                           
 11049                           
 11050                           ;LCD.c: 118:     int i;;LCD.c: 119:     for (i = 0; a[i] != '\0'; i++)
 11051     1A53  1283               	bcf	3,5	;RP0=0, select bank0
 11052     1A54  1303               	bcf	3,6	;RP1=0, select bank0
 11053     1A55  01A0               	clrf	Lcd_Write_String@i
 11054     1A56  01A1               	clrf	Lcd_Write_String@i+1
 11055     1A57  2A7C               	goto	l4167
 11056     1A58                     l4163:
 11057                           
 11058                           ;LCD.c: 120:         Lcd_Write_Char(a[i]);
 11059     1A58  0820               	movf	Lcd_Write_String@i,w
 11060     1A59  0775               	addwf	Lcd_Write_String@a,w
 11061     1A5A  00F8               	movwf	??_Lcd_Write_String+1
 11062     1A5B  0876               	movf	Lcd_Write_String@a+1,w
 11063     1A5C  00F7               	movwf	??_Lcd_Write_String
 11064     1A5D  1803               	skipnc
 11065     1A5E  0AF7               	incf	??_Lcd_Write_String,f
 11066     1A5F  1FA0               	btfss	Lcd_Write_String@i,7
 11067     1A60  2A62               	goto	u6650
 11068     1A61  03F7               	decf	??_Lcd_Write_String,f
 11069     1A62                     u6650:
 11070     1A62  0877               	movf	??_Lcd_Write_String,w
 11071     1A63  00F9               	movwf	??_Lcd_Write_String+2
 11072     1A64  0879               	movf	??_Lcd_Write_String+2,w
 11073     1A65  1283               	bcf	3,5	;RP0=0, select bank0
 11074     1A66  1303               	bcf	3,6	;RP1=0, select bank0
 11075     1A67  00FF               	movwf	btemp+1
 11076     1A68  0878               	movf	??_Lcd_Write_String+1,w
 11077     1A69  0084               	movwf	4
 11078     1A6A  120A  118A  2720  160A  158A  	fcall	stringtab
 11079     1A6F  160A  158A  20B9  160A  158A  	fcall	_Lcd_Write_Char
 11080     1A74                     l4165:
 11081     1A74  3001               	movlw	1
 11082     1A75  1283               	bcf	3,5	;RP0=0, select bank0
 11083     1A76  1303               	bcf	3,6	;RP1=0, select bank0
 11084     1A77  07A0               	addwf	Lcd_Write_String@i,f
 11085     1A78  1803               	skipnc
 11086     1A79  0AA1               	incf	Lcd_Write_String@i+1,f
 11087     1A7A  3000               	movlw	0
 11088     1A7B  07A1               	addwf	Lcd_Write_String@i+1,f
 11089     1A7C                     l4167:
 11090     1A7C  0820               	movf	Lcd_Write_String@i,w
 11091     1A7D  0775               	addwf	Lcd_Write_String@a,w
 11092     1A7E  00F8               	movwf	??_Lcd_Write_String+1
 11093     1A7F  0876               	movf	Lcd_Write_String@a+1,w
 11094     1A80  00F7               	movwf	??_Lcd_Write_String
 11095     1A81  1803               	skipnc
 11096     1A82  0AF7               	incf	??_Lcd_Write_String,f
 11097     1A83  1FA0               	btfss	Lcd_Write_String@i,7
 11098     1A84  2A86               	goto	u6660
 11099     1A85  03F7               	decf	??_Lcd_Write_String,f
 11100     1A86                     u6660:
 11101     1A86  0877               	movf	??_Lcd_Write_String,w
 11102     1A87  00F9               	movwf	??_Lcd_Write_String+2
 11103     1A88  0879               	movf	??_Lcd_Write_String+2,w
 11104     1A89  1283               	bcf	3,5	;RP0=0, select bank0
 11105     1A8A  1303               	bcf	3,6	;RP1=0, select bank0
 11106     1A8B  00FF               	movwf	btemp+1
 11107     1A8C  0878               	movf	??_Lcd_Write_String+1,w
 11108     1A8D  0084               	movwf	4
 11109     1A8E  120A  118A  2720  160A  158A  	fcall	stringtab
 11110     1A93  3A00               	xorlw	0
 11111     1A94  1D03               	skipz
 11112     1A95  2A97               	goto	u6671
 11113     1A96  2A98               	goto	u6670
 11114     1A97                     u6671:
 11115     1A97  2A58               	goto	l4163
 11116     1A98                     u6670:
 11117     1A98                     l184:
 11118     1A98  0008               	return
 11119     1A99                     __end_of_Lcd_Write_String:
 11120                           
 11121                           	psect	text31
 11122     18B9                     __ptext31:	
 11123 ;; *************** function _Lcd_Write_Char *****************
 11124 ;; Defined at:
 11125 ;;		line 106 in file "LCD.c"
 11126 ;; Parameters:    Size  Location     Type
 11127 ;;  a               1    wreg     unsigned char 
 11128 ;; Auto vars:     Size  Location     Type
 11129 ;;  a               1    4[COMMON] unsigned char 
 11130 ;; Return value:  Size  Location     Type
 11131 ;;                  1    wreg      void 
 11132 ;; Registers used:
 11133 ;;		wreg, status,2, status,0, pclath, cstack
 11134 ;; Tracked objects:
 11135 ;;		On entry : 0/0
 11136 ;;		On exit  : 0/0
 11137 ;;		Unchanged: 0/0
 11138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11139 ;;      Params:         0       0       0       0       0
 11140 ;;      Locals:         1       0       0       0       0
 11141 ;;      Temps:          1       0       0       0       0
 11142 ;;      Totals:         2       0       0       0       0
 11143 ;;Total ram usage:        2 bytes
 11144 ;; Hardware stack levels used: 1
 11145 ;; Hardware stack levels required when called: 3
 11146 ;; This function calls:
 11147 ;;		_Lcd_Port
 11148 ;; This function is called by:
 11149 ;;		_main
 11150 ;;		_Lcd_Write_String
 11151 ;; This function uses a non-reentrant model
 11152 ;;
 11153                           
 11154     18B9                     _Lcd_Write_Char:	
 11155                           ;psect for function _Lcd_Write_Char
 11156                           
 11157                           
 11158                           ;incstack = 0
 11159                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 11160                           ;Lcd_Write_Char@a stored from wreg
 11161     18B9  00F4               	movwf	Lcd_Write_Char@a
 11162     18BA                     l4065:
 11163                           
 11164                           ;LCD.c: 110:     PORTBbits.RB7 = 1;
 11165     18BA  1283               	bcf	3,5	;RP0=0, select bank0
 11166     18BB  1303               	bcf	3,6	;RP1=0, select bank0
 11167     18BC  1786               	bsf	6,7	;volatile
 11168     18BD                     l4067:
 11169                           
 11170                           ;LCD.c: 111:     Lcd_Port(a);
 11171     18BD  0874               	movf	Lcd_Write_Char@a,w
 11172     18BE  160A  158A  21D1  160A  158A  	fcall	_Lcd_Port
 11173     18C3                     l4069:
 11174                           
 11175                           ;LCD.c: 112:     PORTBbits.RB6 = 1;
 11176     18C3  1283               	bcf	3,5	;RP0=0, select bank0
 11177     18C4  1303               	bcf	3,6	;RP1=0, select bank0
 11178     18C5  1706               	bsf	6,6	;volatile
 11179     18C6                     l4071:
 11180                           
 11181                           ;LCD.c: 113:     _delay((unsigned long)((40)*(8000000/4000000.0)));
 11182     18C6  301A               	movlw	26
 11183     18C7  00F3               	movwf	??_Lcd_Write_Char
 11184     18C8                     u7077:
 11185     18C8  0BF3               	decfsz	??_Lcd_Write_Char,f
 11186     18C9  28C8               	goto	u7077
 11187     18CA  0000               	nop
 11188     18CB                     l4073:
 11189                           
 11190                           ;LCD.c: 114:     PORTBbits.RB6 = 0;
 11191     18CB  1283               	bcf	3,5	;RP0=0, select bank0
 11192     18CC  1303               	bcf	3,6	;RP1=0, select bank0
 11193     18CD  1306               	bcf	6,6	;volatile
 11194     18CE                     l178:
 11195     18CE  0008               	return
 11196     18CF                     __end_of_Lcd_Write_Char:
 11197                           
 11198                           	psect	text32
 11199     1900                     __ptext32:	
 11200 ;; *************** function _Lcd_Set_Cursor *****************
 11201 ;; Defined at:
 11202 ;;		line 67 in file "LCD.c"
 11203 ;; Parameters:    Size  Location     Type
 11204 ;;  a               1    wreg     unsigned char 
 11205 ;;  b               1    6[COMMON] unsigned char 
 11206 ;; Auto vars:     Size  Location     Type
 11207 ;;  a               1    7[COMMON] unsigned char 
 11208 ;;  temp            1    8[COMMON] unsigned char 
 11209 ;; Return value:  Size  Location     Type
 11210 ;;                  1    wreg      void 
 11211 ;; Registers used:
 11212 ;;		wreg, status,2, status,0, pclath, cstack
 11213 ;; Tracked objects:
 11214 ;;		On entry : 0/0
 11215 ;;		On exit  : 0/0
 11216 ;;		Unchanged: 0/0
 11217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11218 ;;      Params:         1       0       0       0       0
 11219 ;;      Locals:         2       0       0       0       0
 11220 ;;      Temps:          0       0       0       0       0
 11221 ;;      Totals:         3       0       0       0       0
 11222 ;;Total ram usage:        3 bytes
 11223 ;; Hardware stack levels used: 1
 11224 ;; Hardware stack levels required when called: 4
 11225 ;; This function calls:
 11226 ;;		_Lcd_Cmd
 11227 ;; This function is called by:
 11228 ;;		_main
 11229 ;; This function uses a non-reentrant model
 11230 ;;
 11231                           
 11232     1900                     _Lcd_Set_Cursor:	
 11233                           ;psect for function _Lcd_Set_Cursor
 11234                           
 11235                           
 11236                           ;incstack = 0
 11237                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 11238                           ;Lcd_Set_Cursor@a stored from wreg
 11239     1900  00F7               	movwf	Lcd_Set_Cursor@a
 11240     1901                     l4149:
 11241                           
 11242                           ;LCD.c: 68:     char temp;;LCD.c: 69:     if (a == 1) {
 11243     1901  0377               	decf	Lcd_Set_Cursor@a,w
 11244     1902  1D03               	btfss	3,2
 11245     1903  2905               	goto	u6631
 11246     1904  2906               	goto	u6630
 11247     1905                     u6631:
 11248     1905  2910               	goto	l4155
 11249     1906                     u6630:
 11250     1906                     l4151:
 11251                           
 11252                           ;LCD.c: 70:         temp = 0x80 + b - 1;
 11253     1906  0876               	movf	Lcd_Set_Cursor@b,w
 11254     1907  3E7F               	addlw	127
 11255     1908  00F8               	movwf	Lcd_Set_Cursor@temp
 11256     1909                     l4153:
 11257                           
 11258                           ;LCD.c: 75:         Lcd_Cmd(temp);
 11259     1909  0878               	movf	Lcd_Set_Cursor@temp,w
 11260     190A  160A  158A  20E6  160A  158A  	fcall	_Lcd_Cmd
 11261                           
 11262                           ;LCD.c: 76:     } else if (a == 2) {
 11263     190F  291F               	goto	l172
 11264     1910                     l4155:
 11265     1910  3002               	movlw	2
 11266     1911  0677               	xorwf	Lcd_Set_Cursor@a,w
 11267     1912  1D03               	btfss	3,2
 11268     1913  2915               	goto	u6641
 11269     1914  2916               	goto	u6640
 11270     1915                     u6641:
 11271     1915  291F               	goto	l172
 11272     1916                     u6640:
 11273     1916                     l4157:
 11274                           
 11275                           ;LCD.c: 77:         temp = 0xC0 + b - 1;
 11276     1916  0876               	movf	Lcd_Set_Cursor@b,w
 11277     1917  3EBF               	addlw	191
 11278     1918  00F8               	movwf	Lcd_Set_Cursor@temp
 11279     1919                     l4159:
 11280                           
 11281                           ;LCD.c: 82:         Lcd_Cmd(temp);
 11282     1919  0878               	movf	Lcd_Set_Cursor@temp,w
 11283     191A  160A  158A  20E6  160A  158A  	fcall	_Lcd_Cmd
 11284     191F                     l172:
 11285     191F  0008               	return
 11286     1920                     __end_of_Lcd_Set_Cursor:
 11287                           
 11288                           	psect	text33
 11289     1BE8                     __ptext33:	
 11290 ;; *************** function _Lcd_Init *****************
 11291 ;; Defined at:
 11292 ;;		line 86 in file "LCD.c"
 11293 ;; Parameters:    Size  Location     Type
 11294 ;;		None
 11295 ;; Auto vars:     Size  Location     Type
 11296 ;;		None
 11297 ;; Return value:  Size  Location     Type
 11298 ;;                  1    wreg      void 
 11299 ;; Registers used:
 11300 ;;		wreg, status,2, status,0, pclath, cstack
 11301 ;; Tracked objects:
 11302 ;;		On entry : 0/0
 11303 ;;		On exit  : 0/0
 11304 ;;		Unchanged: 0/0
 11305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11306 ;;      Params:         0       0       0       0       0
 11307 ;;      Locals:         0       0       0       0       0
 11308 ;;      Temps:          3       0       0       0       0
 11309 ;;      Totals:         3       0       0       0       0
 11310 ;;Total ram usage:        3 bytes
 11311 ;; Hardware stack levels used: 1
 11312 ;; Hardware stack levels required when called: 4
 11313 ;; This function calls:
 11314 ;;		_Lcd_Cmd
 11315 ;;		_Lcd_Port
 11316 ;; This function is called by:
 11317 ;;		_main
 11318 ;; This function uses a non-reentrant model
 11319 ;;
 11320                           
 11321     1BE8                     _Lcd_Init:	
 11322                           ;psect for function _Lcd_Init
 11323                           
 11324     1BE8                     l4123:	
 11325                           ;incstack = 0
 11326                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 11327                           
 11328                           
 11329                           ;LCD.c: 87:     Lcd_Port(0x00);
 11330     1BE8  3000               	movlw	0
 11331     1BE9  160A  158A  21D1  160A  158A  	fcall	_Lcd_Port
 11332     1BEE                     l4125:
 11333                           
 11334                           ;LCD.c: 88:     _delay((unsigned long)((110)*(8000000/4000.0)));
 11335     1BEE  3002               	movlw	2
 11336     1BEF  00F8               	movwf	??_Lcd_Init+2
 11337     1BF0  301E               	movlw	30
 11338     1BF1  00F7               	movwf	??_Lcd_Init+1
 11339     1BF2  30B3               	movlw	179
 11340     1BF3  00F6               	movwf	??_Lcd_Init
 11341     1BF4                     u7087:
 11342     1BF4  0BF6               	decfsz	??_Lcd_Init,f
 11343     1BF5  2BF4               	goto	u7087
 11344     1BF6  0BF7               	decfsz	??_Lcd_Init+1,f
 11345     1BF7  2BF4               	goto	u7087
 11346     1BF8  0BF8               	decfsz	??_Lcd_Init+2,f
 11347     1BF9  2BF4               	goto	u7087
 11348     1BFA  2BFB               	nop2
 11349     1BFB                     l4127:
 11350                           
 11351                           ;LCD.c: 89:     Lcd_Cmd(0x30);
 11352     1BFB  3030               	movlw	48
 11353     1BFC  160A  158A  20E6  160A  158A  	fcall	_Lcd_Cmd
 11354                           
 11355                           ;LCD.c: 90:     _delay((unsigned long)((5)*(8000000/4000.0)));
 11356     1C01  300D               	movlw	13
 11357     1C02  00F7               	movwf	??_Lcd_Init+1
 11358     1C03  30FB               	movlw	251
 11359     1C04  00F6               	movwf	??_Lcd_Init
 11360     1C05                     u7097:
 11361     1C05  0BF6               	decfsz	??_Lcd_Init,f
 11362     1C06  2C05               	goto	u7097
 11363     1C07  0BF7               	decfsz	??_Lcd_Init+1,f
 11364     1C08  2C05               	goto	u7097
 11365     1C09  2C0A               	nop2
 11366     1C0A                     l4129:
 11367                           
 11368                           ;LCD.c: 91:     Lcd_Cmd(0x30);
 11369     1C0A  3030               	movlw	48
 11370     1C0B  160A  158A  20E6  160A  158A  	fcall	_Lcd_Cmd
 11371     1C10                     l4131:
 11372                           
 11373                           ;LCD.c: 92:     _delay((unsigned long)((20)*(8000000/4000000.0)));
 11374     1C10  300D               	movlw	13
 11375     1C11  00F6               	movwf	??_Lcd_Init
 11376     1C12                     u7107:
 11377     1C12  0BF6               	decfsz	??_Lcd_Init,f
 11378     1C13  2C12               	goto	u7107
 11379                           
 11380                           ;LCD.c: 93:     Lcd_Cmd(0x30);
 11381     1C14  3030               	movlw	48
 11382     1C15  160A  158A  20E6  160A  158A  	fcall	_Lcd_Cmd
 11383     1C1A                     l4133:
 11384                           
 11385                           ;LCD.c: 94:     _delay((unsigned long)((20)*(8000000/4000000.0)));
 11386     1C1A  300D               	movlw	13
 11387     1C1B  00F6               	movwf	??_Lcd_Init
 11388     1C1C                     u7117:
 11389     1C1C  0BF6               	decfsz	??_Lcd_Init,f
 11390     1C1D  2C1C               	goto	u7117
 11391     1C1E                     l4135:
 11392                           
 11393                           ;LCD.c: 96:     Lcd_Cmd(0x38);
 11394     1C1E  3038               	movlw	56
 11395     1C1F  160A  158A  20E6  160A  158A  	fcall	_Lcd_Cmd
 11396                           
 11397                           ;LCD.c: 97:     _delay((unsigned long)((55)*(8000000/4000000.0)));
 11398     1C24  3024               	movlw	36
 11399     1C25  00F6               	movwf	??_Lcd_Init
 11400     1C26                     u7127:
 11401     1C26  0BF6               	decfsz	??_Lcd_Init,f
 11402     1C27  2C26               	goto	u7127
 11403     1C28  0000               	nop
 11404     1C29                     l4137:
 11405                           
 11406                           ;LCD.c: 98:     Lcd_Cmd(0x08);
 11407     1C29  3008               	movlw	8
 11408     1C2A  160A  158A  20E6  160A  158A  	fcall	_Lcd_Cmd
 11409     1C2F                     l4139:
 11410                           
 11411                           ;LCD.c: 99:     _delay((unsigned long)((55)*(8000000/4000000.0)));
 11412     1C2F  3024               	movlw	36
 11413     1C30  00F6               	movwf	??_Lcd_Init
 11414     1C31                     u7137:
 11415     1C31  0BF6               	decfsz	??_Lcd_Init,f
 11416     1C32  2C31               	goto	u7137
 11417     1C33  0000               	nop
 11418                           
 11419                           ;LCD.c: 100:     Lcd_Cmd(0x01);
 11420     1C34  3001               	movlw	1
 11421     1C35  160A  158A  20E6  160A  158A  	fcall	_Lcd_Cmd
 11422     1C3A                     l4141:
 11423                           
 11424                           ;LCD.c: 101:     _delay((unsigned long)((55)*(8000000/4000000.0)));
 11425     1C3A  3024               	movlw	36
 11426     1C3B  00F6               	movwf	??_Lcd_Init
 11427     1C3C                     u7147:
 11428     1C3C  0BF6               	decfsz	??_Lcd_Init,f
 11429     1C3D  2C3C               	goto	u7147
 11430     1C3E  0000               	nop
 11431     1C3F                     l4143:
 11432                           
 11433                           ;LCD.c: 102:     Lcd_Cmd(0x06);
 11434     1C3F  3006               	movlw	6
 11435     1C40  160A  158A  20E6  160A  158A  	fcall	_Lcd_Cmd
 11436     1C45                     l4145:
 11437                           
 11438                           ;LCD.c: 103:     Lcd_Cmd(0x0C);
 11439     1C45  300C               	movlw	12
 11440     1C46  160A  158A  20E6  160A  158A  	fcall	_Lcd_Cmd
 11441     1C4B                     l175:
 11442     1C4B  0008               	return
 11443     1C4C                     __end_of_Lcd_Init:
 11444                           
 11445                           	psect	text34
 11446     1883                     __ptext34:	
 11447 ;; *************** function _Lcd_Clear *****************
 11448 ;; Defined at:
 11449 ;;		line 63 in file "LCD.c"
 11450 ;; Parameters:    Size  Location     Type
 11451 ;;		None
 11452 ;; Auto vars:     Size  Location     Type
 11453 ;;		None
 11454 ;; Return value:  Size  Location     Type
 11455 ;;                  1    wreg      void 
 11456 ;; Registers used:
 11457 ;;		wreg, status,2, status,0, pclath, cstack
 11458 ;; Tracked objects:
 11459 ;;		On entry : 0/0
 11460 ;;		On exit  : 0/0
 11461 ;;		Unchanged: 0/0
 11462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11463 ;;      Params:         0       0       0       0       0
 11464 ;;      Locals:         0       0       0       0       0
 11465 ;;      Temps:          0       0       0       0       0
 11466 ;;      Totals:         0       0       0       0       0
 11467 ;;Total ram usage:        0 bytes
 11468 ;; Hardware stack levels used: 1
 11469 ;; Hardware stack levels required when called: 4
 11470 ;; This function calls:
 11471 ;;		_Lcd_Cmd
 11472 ;; This function is called by:
 11473 ;;		_main
 11474 ;; This function uses a non-reentrant model
 11475 ;;
 11476                           
 11477     1883                     _Lcd_Clear:	
 11478                           ;psect for function _Lcd_Clear
 11479                           
 11480     1883                     l4147:	
 11481                           ;incstack = 0
 11482                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 11483                           
 11484                           
 11485                           ;LCD.c: 64:     Lcd_Cmd(0x01);
 11486     1883  3001               	movlw	1
 11487     1884  160A  158A  20E6  160A  158A  	fcall	_Lcd_Cmd
 11488     1889                     l166:
 11489     1889  0008               	return
 11490     188A                     __end_of_Lcd_Clear:
 11491                           
 11492                           	psect	text35
 11493     18E6                     __ptext35:	
 11494 ;; *************** function _Lcd_Cmd *****************
 11495 ;; Defined at:
 11496 ;;		line 55 in file "LCD.c"
 11497 ;; Parameters:    Size  Location     Type
 11498 ;;  a               1    wreg     unsigned char 
 11499 ;; Auto vars:     Size  Location     Type
 11500 ;;  a               1    5[COMMON] unsigned char 
 11501 ;; Return value:  Size  Location     Type
 11502 ;;                  1    wreg      void 
 11503 ;; Registers used:
 11504 ;;		wreg, status,2, status,0, pclath, cstack
 11505 ;; Tracked objects:
 11506 ;;		On entry : 0/0
 11507 ;;		On exit  : 0/0
 11508 ;;		Unchanged: 0/0
 11509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11510 ;;      Params:         0       0       0       0       0
 11511 ;;      Locals:         1       0       0       0       0
 11512 ;;      Temps:          2       0       0       0       0
 11513 ;;      Totals:         3       0       0       0       0
 11514 ;;Total ram usage:        3 bytes
 11515 ;; Hardware stack levels used: 1
 11516 ;; Hardware stack levels required when called: 3
 11517 ;; This function calls:
 11518 ;;		_Lcd_Port
 11519 ;; This function is called by:
 11520 ;;		_Lcd_Clear
 11521 ;;		_Lcd_Set_Cursor
 11522 ;;		_Lcd_Init
 11523 ;;		_Lcd_Shift_Right
 11524 ;;		_Lcd_Shift_Left
 11525 ;; This function uses a non-reentrant model
 11526 ;;
 11527                           
 11528     18E6                     _Lcd_Cmd:	
 11529                           ;psect for function _Lcd_Cmd
 11530                           
 11531                           
 11532                           ;incstack = 0
 11533                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 11534                           ;Lcd_Cmd@a stored from wreg
 11535     18E6  00F5               	movwf	Lcd_Cmd@a
 11536     18E7                     l4075:
 11537                           
 11538                           ;LCD.c: 56:     PORTBbits.RB7 = 0;
 11539     18E7  1283               	bcf	3,5	;RP0=0, select bank0
 11540     18E8  1303               	bcf	3,6	;RP1=0, select bank0
 11541     18E9  1386               	bcf	6,7	;volatile
 11542     18EA                     l4077:
 11543                           
 11544                           ;LCD.c: 57:     Lcd_Port(a);
 11545     18EA  0875               	movf	Lcd_Cmd@a,w
 11546     18EB  160A  158A  21D1  160A  158A  	fcall	_Lcd_Port
 11547     18F0                     l4079:
 11548                           
 11549                           ;LCD.c: 58:     PORTBbits.RB6 = 1;
 11550     18F0  1283               	bcf	3,5	;RP0=0, select bank0
 11551     18F1  1303               	bcf	3,6	;RP1=0, select bank0
 11552     18F2  1706               	bsf	6,6	;volatile
 11553     18F3                     l4081:
 11554                           
 11555                           ;LCD.c: 59:     _delay((unsigned long)((4)*(8000000/4000.0)));
 11556     18F3  300B               	movlw	11
 11557     18F4  00F4               	movwf	??_Lcd_Cmd+1
 11558     18F5  3062               	movlw	98
 11559     18F6  00F3               	movwf	??_Lcd_Cmd
 11560     18F7                     u7157:
 11561     18F7  0BF3               	decfsz	??_Lcd_Cmd,f
 11562     18F8  28F7               	goto	u7157
 11563     18F9  0BF4               	decfsz	??_Lcd_Cmd+1,f
 11564     18FA  28F7               	goto	u7157
 11565     18FB  0000               	nop
 11566     18FC                     l4083:
 11567                           
 11568                           ;LCD.c: 60:     PORTBbits.RB6 = 0;
 11569     18FC  1283               	bcf	3,5	;RP0=0, select bank0
 11570     18FD  1303               	bcf	3,6	;RP1=0, select bank0
 11571     18FE  1306               	bcf	6,6	;volatile
 11572     18FF                     l163:
 11573     18FF  0008               	return
 11574     1900                     __end_of_Lcd_Cmd:
 11575                           
 11576                           	psect	text36
 11577     19D1                     __ptext36:	
 11578 ;; *************** function _Lcd_Port *****************
 11579 ;; Defined at:
 11580 ;;		line 13 in file "LCD.c"
 11581 ;; Parameters:    Size  Location     Type
 11582 ;;  a               1    wreg     unsigned char 
 11583 ;; Auto vars:     Size  Location     Type
 11584 ;;  a               1    2[COMMON] unsigned char 
 11585 ;; Return value:  Size  Location     Type
 11586 ;;                  1    wreg      void 
 11587 ;; Registers used:
 11588 ;;		wreg
 11589 ;; Tracked objects:
 11590 ;;		On entry : 0/0
 11591 ;;		On exit  : 0/0
 11592 ;;		Unchanged: 0/0
 11593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11594 ;;      Params:         0       0       0       0       0
 11595 ;;      Locals:         1       0       0       0       0
 11596 ;;      Temps:          0       0       0       0       0
 11597 ;;      Totals:         1       0       0       0       0
 11598 ;;Total ram usage:        1 bytes
 11599 ;; Hardware stack levels used: 1
 11600 ;; Hardware stack levels required when called: 2
 11601 ;; This function calls:
 11602 ;;		Nothing
 11603 ;; This function is called by:
 11604 ;;		_Lcd_Cmd
 11605 ;;		_Lcd_Init
 11606 ;;		_Lcd_Write_Char
 11607 ;; This function uses a non-reentrant model
 11608 ;;
 11609                           
 11610     19D1                     _Lcd_Port:	
 11611                           ;psect for function _Lcd_Port
 11612                           
 11613                           
 11614                           ;incstack = 0
 11615                           ; Regs used in _Lcd_Port: [wreg]
 11616                           ;Lcd_Port@a stored from wreg
 11617     19D1  00F2               	movwf	Lcd_Port@a
 11618     19D2                     l4025:
 11619                           
 11620                           ;LCD.c: 14:     if (a & 1)
 11621     19D2  1C72               	btfss	Lcd_Port@a,0
 11622     19D3  29D5               	goto	u6351
 11623     19D4  29D6               	goto	u6350
 11624     19D5                     u6351:
 11625     19D5  29DA               	goto	l144
 11626     19D6                     u6350:
 11627     19D6                     l4027:
 11628                           
 11629                           ;LCD.c: 15:         PORTDbits.RD0 = 1;
 11630     19D6  1283               	bcf	3,5	;RP0=0, select bank0
 11631     19D7  1303               	bcf	3,6	;RP1=0, select bank0
 11632     19D8  1408               	bsf	8,0	;volatile
 11633     19D9  29DD               	goto	l145
 11634     19DA                     l144:	
 11635                           ;LCD.c: 16:     else
 11636                           
 11637                           
 11638                           ;LCD.c: 17:         PORTDbits.RD0 = 0;
 11639     19DA  1283               	bcf	3,5	;RP0=0, select bank0
 11640     19DB  1303               	bcf	3,6	;RP1=0, select bank0
 11641     19DC  1008               	bcf	8,0	;volatile
 11642     19DD                     l145:
 11643                           
 11644                           ;LCD.c: 19:     if (a & 2)
 11645     19DD  1CF2               	btfss	Lcd_Port@a,1
 11646     19DE  29E0               	goto	u6361
 11647     19DF  29E1               	goto	u6360
 11648     19E0                     u6361:
 11649     19E0  29E3               	goto	l146
 11650     19E1                     u6360:
 11651     19E1                     l4029:
 11652                           
 11653                           ;LCD.c: 20:         RD1 = 1;
 11654     19E1  1488               	bsf	8,1	;volatile
 11655     19E2  29E4               	goto	l147
 11656     19E3                     l146:	
 11657                           ;LCD.c: 21:     else
 11658                           
 11659                           
 11660                           ;LCD.c: 22:         RD1 = 0;
 11661     19E3  1088               	bcf	8,1	;volatile
 11662     19E4                     l147:
 11663                           
 11664                           ;LCD.c: 24:     if (a & 4)
 11665     19E4  1D72               	btfss	Lcd_Port@a,2
 11666     19E5  29E7               	goto	u6371
 11667     19E6  29E8               	goto	u6370
 11668     19E7                     u6371:
 11669     19E7  29EA               	goto	l148
 11670     19E8                     u6370:
 11671     19E8                     l4031:
 11672                           
 11673                           ;LCD.c: 25:         RD2 = 1;
 11674     19E8  1508               	bsf	8,2	;volatile
 11675     19E9  29EB               	goto	l149
 11676     19EA                     l148:	
 11677                           ;LCD.c: 26:     else
 11678                           
 11679                           
 11680                           ;LCD.c: 27:         RD2 = 0;
 11681     19EA  1108               	bcf	8,2	;volatile
 11682     19EB                     l149:
 11683                           
 11684                           ;LCD.c: 29:     if (a & 8)
 11685     19EB  1DF2               	btfss	Lcd_Port@a,3
 11686     19EC  29EE               	goto	u6381
 11687     19ED  29EF               	goto	u6380
 11688     19EE                     u6381:
 11689     19EE  29F1               	goto	l150
 11690     19EF                     u6380:
 11691     19EF                     l4033:
 11692                           
 11693                           ;LCD.c: 30:         RD3 = 1;
 11694     19EF  1588               	bsf	8,3	;volatile
 11695     19F0  29F2               	goto	l151
 11696     19F1                     l150:	
 11697                           ;LCD.c: 31:     else
 11698                           
 11699                           
 11700                           ;LCD.c: 32:         RD3 = 0;
 11701     19F1  1188               	bcf	8,3	;volatile
 11702     19F2                     l151:
 11703                           
 11704                           ;LCD.c: 34:     if (a & 16)
 11705     19F2  1E72               	btfss	Lcd_Port@a,4
 11706     19F3  29F5               	goto	u6391
 11707     19F4  29F6               	goto	u6390
 11708     19F5                     u6391:
 11709     19F5  29F8               	goto	l152
 11710     19F6                     u6390:
 11711     19F6                     l4035:
 11712                           
 11713                           ;LCD.c: 35:         RD4 = 1;
 11714     19F6  1608               	bsf	8,4	;volatile
 11715     19F7  29F9               	goto	l153
 11716     19F8                     l152:	
 11717                           ;LCD.c: 36:     else
 11718                           
 11719                           
 11720                           ;LCD.c: 37:         RD4 = 0;
 11721     19F8  1208               	bcf	8,4	;volatile
 11722     19F9                     l153:
 11723                           
 11724                           ;LCD.c: 39:     if (a & 32)
 11725     19F9  1EF2               	btfss	Lcd_Port@a,5
 11726     19FA  29FC               	goto	u6401
 11727     19FB  29FD               	goto	u6400
 11728     19FC                     u6401:
 11729     19FC  29FF               	goto	l154
 11730     19FD                     u6400:
 11731     19FD                     l4037:
 11732                           
 11733                           ;LCD.c: 40:         RD5 = 1;
 11734     19FD  1688               	bsf	8,5	;volatile
 11735     19FE  2A00               	goto	l155
 11736     19FF                     l154:	
 11737                           ;LCD.c: 41:     else
 11738                           
 11739                           
 11740                           ;LCD.c: 42:         RD5 = 0;
 11741     19FF  1288               	bcf	8,5	;volatile
 11742     1A00                     l155:
 11743                           
 11744                           ;LCD.c: 44:     if (a & 64)
 11745     1A00  1F72               	btfss	Lcd_Port@a,6
 11746     1A01  2A03               	goto	u6411
 11747     1A02  2A04               	goto	u6410
 11748     1A03                     u6411:
 11749     1A03  2A06               	goto	l156
 11750     1A04                     u6410:
 11751     1A04                     l4039:
 11752                           
 11753                           ;LCD.c: 45:         RD6 = 1;
 11754     1A04  1708               	bsf	8,6	;volatile
 11755     1A05  2A07               	goto	l157
 11756     1A06                     l156:	
 11757                           ;LCD.c: 46:     else
 11758                           
 11759                           
 11760                           ;LCD.c: 47:         RD6 = 0;
 11761     1A06  1308               	bcf	8,6	;volatile
 11762     1A07                     l157:
 11763                           
 11764                           ;LCD.c: 49:     if (a & 128)
 11765     1A07  1FF2               	btfss	Lcd_Port@a,7
 11766     1A08  2A0A               	goto	u6421
 11767     1A09  2A0B               	goto	u6420
 11768     1A0A                     u6421:
 11769     1A0A  2A0D               	goto	l158
 11770     1A0B                     u6420:
 11771     1A0B                     l4041:
 11772                           
 11773                           ;LCD.c: 50:         RD7 = 1;
 11774     1A0B  1788               	bsf	8,7	;volatile
 11775     1A0C  2A0E               	goto	l160
 11776     1A0D                     l158:	
 11777                           ;LCD.c: 51:     else
 11778                           
 11779                           
 11780                           ;LCD.c: 52:         RD7 = 0;
 11781     1A0D  1388               	bcf	8,7	;volatile
 11782     1A0E                     l160:
 11783     1A0E  0008               	return
 11784     1A0F                     __end_of_Lcd_Port:
 11785                           
 11786                           	psect	text37
 11787     1D1D                     __ptext37:	
 11788 ;; *************** function _isr *****************
 11789 ;; Defined at:
 11790 ;;		line 81 in file "main.c"
 11791 ;; Parameters:    Size  Location     Type
 11792 ;;		None
 11793 ;; Auto vars:     Size  Location     Type
 11794 ;;		None
 11795 ;; Return value:  Size  Location     Type
 11796 ;;                  1    wreg      void 
 11797 ;; Registers used:
 11798 ;;		wreg, status,2, status,0, pclath, cstack
 11799 ;; Tracked objects:
 11800 ;;		On entry : 0/0
 11801 ;;		On exit  : 0/0
 11802 ;;		Unchanged: 0/0
 11803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11804 ;;      Params:         0       0       0       0       0
 11805 ;;      Locals:         0       0       0       0       0
 11806 ;;      Temps:          2       0       0       0       0
 11807 ;;      Totals:         2       0       0       0       0
 11808 ;;Total ram usage:        2 bytes
 11809 ;; Hardware stack levels used: 1
 11810 ;; Hardware stack levels required when called: 1
 11811 ;; This function calls:
 11812 ;;		_UART_read_char
 11813 ;; This function is called by:
 11814 ;;		Interrupt level 1
 11815 ;; This function uses a non-reentrant model
 11816 ;;
 11817                           
 11818     1D1D                     _isr:	
 11819                           ;psect for function _isr
 11820                           
 11821     1D1D                     i1l3887:
 11822                           
 11823                           ;main.c: 84:     if (PIR1bits.TXIF){
 11824     1D1D  1283               	bcf	3,5	;RP0=0, select bank0
 11825     1D1E  1303               	bcf	3,6	;RP1=0, select bank0
 11826     1D1F  1E0C               	btfss	12,4	;volatile
 11827     1D20  2D22               	goto	u624_21
 11828     1D21  2D23               	goto	u624_20
 11829     1D22                     u624_21:
 11830     1D22  2D24               	goto	i1l93
 11831     1D23                     u624_20:
 11832     1D23                     i1l3889:
 11833                           
 11834                           ;main.c: 85:         PIR1bits.TXIF = 0;
 11835     1D23  120C               	bcf	12,4	;volatile
 11836     1D24                     i1l93:	
 11837                           ;main.c: 86:     }
 11838                           
 11839                           
 11840                           ;main.c: 89:     if (PIR1bits.RCIF){
 11841     1D24  1E8C               	btfss	12,5	;volatile
 11842     1D25  2D27               	goto	u625_21
 11843     1D26  2D28               	goto	u625_20
 11844     1D27                     u625_21:
 11845     1D27  2D71               	goto	i1l3915
 11846     1D28                     u625_20:
 11847     1D28                     i1l3891:
 11848                           
 11849                           ;main.c: 90:         signo = UART_read_char();
 11850     1D28  160A  158A  207F  160A  158A  	fcall	_UART_read_char
 11851     1D2D  00FB               	movwf	_signo
 11852     1D2E                     i1l3893:
 11853                           
 11854                           ;main.c: 93:         if (signo == '+'){
 11855     1D2E  302B               	movlw	43
 11856     1D2F  067B               	xorwf	_signo,w
 11857     1D30  1D03               	btfss	3,2
 11858     1D31  2D33               	goto	u626_21
 11859     1D32  2D34               	goto	u626_20
 11860     1D33                     u626_21:
 11861     1D33  2D4F               	goto	i1l3903
 11862     1D34                     u626_20:
 11863     1D34                     i1l3895:
 11864                           
 11865                           ;main.c: 96:               cont = cont++;
 11866     1D34  3000               	movlw	0
 11867     1D35  1683               	bsf	3,5	;RP0=1, select bank1
 11868     1D36  1303               	bcf	3,6	;RP1=0, select bank1
 11869     1D37  025F               	subwf	(_cont+1)^(0+128),w
 11870     1D38  30FF               	movlw	255
 11871     1D39  1903               	skipnz
 11872     1D3A  025E               	subwf	_cont^(0+128),w
 11873     1D3B  1803               	skipnc
 11874     1D3C  2D3E               	goto	u627_21
 11875     1D3D  2D3F               	goto	u627_20
 11876     1D3E                     u627_21:
 11877     1D3E  2D46               	goto	i1l3899
 11878     1D3F                     u627_20:
 11879     1D3F                     i1l3897:
 11880     1D3F  3001               	movlw	1
 11881     1D40  07DE               	addwf	_cont^(0+128),f
 11882     1D41  1803               	skipnc
 11883     1D42  0ADF               	incf	(_cont+1)^(0+128),f
 11884     1D43  3000               	movlw	0
 11885     1D44  07DF               	addwf	(_cont+1)^(0+128),f
 11886                           
 11887                           ;main.c: 97:             }
 11888     1D45  2D6E               	goto	i1l3913
 11889     1D46                     i1l3899:
 11890     1D46  0A5E               	incf	_cont^(0+128),w
 11891     1D47  045F               	iorwf	(_cont+1)^(0+128),w
 11892     1D48  1D03               	btfss	3,2
 11893     1D49  2D4B               	goto	u628_21
 11894     1D4A  2D4C               	goto	u628_20
 11895     1D4B                     u628_21:
 11896     1D4B  2D6E               	goto	i1l3913
 11897     1D4C                     u628_20:
 11898     1D4C                     i1l3901:
 11899                           
 11900                           ;main.c: 100:                 cont=0;
 11901     1D4C  01DE               	clrf	_cont^(0+128)
 11902     1D4D  01DF               	clrf	(_cont+1)^(0+128)
 11903     1D4E  2D6E               	goto	i1l3913
 11904     1D4F                     i1l3903:
 11905     1D4F  302D               	movlw	45
 11906     1D50  067B               	xorwf	_signo,w
 11907     1D51  1D03               	btfss	3,2
 11908     1D52  2D54               	goto	u629_21
 11909     1D53  2D55               	goto	u629_20
 11910     1D54                     u629_21:
 11911     1D54  2D6E               	goto	i1l3913
 11912     1D55                     u629_20:
 11913     1D55                     i1l3905:
 11914                           
 11915                           ;main.c: 107:                cont = cont--;
 11916     1D55  1683               	bsf	3,5	;RP0=1, select bank1
 11917     1D56  1303               	bcf	3,6	;RP1=0, select bank1
 11918     1D57  085E               	movf	_cont^(0+128),w
 11919     1D58  045F               	iorwf	(_cont+1)^(0+128),w
 11920     1D59  1903               	btfsc	3,2
 11921     1D5A  2D5C               	goto	u630_21
 11922     1D5B  2D5D               	goto	u630_20
 11923     1D5C                     u630_21:
 11924     1D5C  2D64               	goto	i1l3909
 11925     1D5D                     u630_20:
 11926     1D5D                     i1l3907:
 11927     1D5D  3001               	movlw	1
 11928     1D5E  02DE               	subwf	_cont^(0+128),f
 11929     1D5F  3000               	movlw	0
 11930     1D60  1C03               	skipc
 11931     1D61  03DF               	decf	(_cont+1)^(0+128),f
 11932     1D62  02DF               	subwf	(_cont+1)^(0+128),f
 11933                           
 11934                           ;main.c: 108:             }
 11935     1D63  2D6E               	goto	i1l3913
 11936     1D64                     i1l3909:
 11937     1D64  085E               	movf	_cont^(0+128),w
 11938     1D65  045F               	iorwf	(_cont+1)^(0+128),w
 11939     1D66  1D03               	btfss	3,2
 11940     1D67  2D69               	goto	u631_21
 11941     1D68  2D6A               	goto	u631_20
 11942     1D69                     u631_21:
 11943     1D69  2D6E               	goto	i1l3913
 11944     1D6A                     u631_20:
 11945     1D6A                     i1l3911:
 11946                           
 11947                           ;main.c: 110:                 cont = 255;
 11948     1D6A  30FF               	movlw	255
 11949     1D6B  00DE               	movwf	_cont^(0+128)
 11950     1D6C  3000               	movlw	0
 11951     1D6D  00DF               	movwf	(_cont^(0+128)+1)
 11952     1D6E                     i1l3913:
 11953                           
 11954                           ;main.c: 115:         PIR1bits.RCIF = 0;
 11955     1D6E  1283               	bcf	3,5	;RP0=0, select bank0
 11956     1D6F  1303               	bcf	3,6	;RP1=0, select bank0
 11957     1D70  128C               	bcf	12,5	;volatile
 11958     1D71                     i1l3915:
 11959                           
 11960                           ;main.c: 119:     if (PIR1bits.ADIF){
 11961     1D71  1F0C               	btfss	12,6	;volatile
 11962     1D72  2D74               	goto	u632_21
 11963     1D73  2D75               	goto	u632_20
 11964     1D74                     u632_21:
 11965     1D74  2D76               	goto	i1l104
 11966     1D75                     u632_20:
 11967     1D75                     i1l3917:
 11968                           
 11969                           ;main.c: 120:         PIR1bits.ADIF = 0;
 11970     1D75  130C               	bcf	12,6	;volatile
 11971     1D76                     i1l104:	
 11972                           ;main.c: 121:     }
 11973                           
 11974                           
 11975                           ;main.c: 124:     if (INTCONbits.T0IF){
 11976     1D76  1D0B               	btfss	11,2	;volatile
 11977     1D77  2D79               	goto	u633_21
 11978     1D78  2D7A               	goto	u633_20
 11979     1D79                     u633_21:
 11980     1D79  2D7D               	goto	i1l3923
 11981     1D7A                     u633_20:
 11982     1D7A                     i1l3919:
 11983                           
 11984                           ;main.c: 125:         TMR0 = 179;
 11985     1D7A  30B3               	movlw	179
 11986     1D7B  0081               	movwf	1	;volatile
 11987     1D7C                     i1l3921:
 11988                           
 11989                           ;main.c: 126:         INTCONbits.T0IF = 0;
 11990     1D7C  110B               	bcf	11,2	;volatile
 11991     1D7D                     i1l3923:
 11992                           
 11993                           ;main.c: 130:     if (INTCONbits.RBIF){
 11994     1D7D  1C0B               	btfss	11,0	;volatile
 11995     1D7E  2D80               	goto	u634_21
 11996     1D7F  2D81               	goto	u634_20
 11997     1D80                     u634_21:
 11998     1D80  2D82               	goto	i1l107
 11999     1D81                     u634_20:
 12000     1D81                     i1l3925:
 12001                           
 12002                           ;main.c: 131:         INTCONbits.RBIF = 0;
 12003     1D81  100B               	bcf	11,0	;volatile
 12004     1D82                     i1l107:
 12005     1D82  0871               	movf	??_isr+1,w
 12006     1D83  008A               	movwf	10
 12007     1D84  0E70               	swapf	??_isr,w
 12008     1D85  0083               	movwf	3
 12009     1D86  0EFE               	swapf	btemp,f
 12010     1D87  0E7E               	swapf	btemp,w
 12011     1D88  0009               	retfie
 12012     1D89                     __end_of_isr:
 12013                           
 12014                           	psect	intentry
 12015     0004                     __pintentry:	
 12016                           ;incstack = 0
 12017                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
 12018                           
 12019     0004                     interrupt_function:
 12020     007E                     saved_w	set	btemp
 12021     0004  00FE               	movwf	btemp
 12022     0005  0E03               	swapf	3,w
 12023     0006  00F0               	movwf	??_isr
 12024     0007  080A               	movf	10,w
 12025     0008  00F1               	movwf	??_isr+1
 12026     0009  160A  158A  2D1D   	ljmp	_isr
 12027                           
 12028                           	psect	text38
 12029     187F                     __ptext38:	
 12030 ;; *************** function _UART_read_char *****************
 12031 ;; Defined at:
 12032 ;;		line 40 in file "uart.c"
 12033 ;; Parameters:    Size  Location     Type
 12034 ;;		None
 12035 ;; Auto vars:     Size  Location     Type
 12036 ;;		None
 12037 ;; Return value:  Size  Location     Type
 12038 ;;                  1    wreg      unsigned char 
 12039 ;; Registers used:
 12040 ;;		wreg
 12041 ;; Tracked objects:
 12042 ;;		On entry : 0/0
 12043 ;;		On exit  : 0/0
 12044 ;;		Unchanged: 0/0
 12045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12046 ;;      Params:         0       0       0       0       0
 12047 ;;      Locals:         0       0       0       0       0
 12048 ;;      Temps:          0       0       0       0       0
 12049 ;;      Totals:         0       0       0       0       0
 12050 ;;Total ram usage:        0 bytes
 12051 ;; Hardware stack levels used: 1
 12052 ;; This function calls:
 12053 ;;		Nothing
 12054 ;; This function is called by:
 12055 ;;		_isr
 12056 ;; This function uses a non-reentrant model
 12057 ;;
 12058                           
 12059     187F                     _UART_read_char:	
 12060                           ;psect for function _UART_read_char
 12061                           
 12062     187F                     i1l3385:	
 12063                           ;incstack = 0
 12064                           ; Regs used in _UART_read_char: [wreg]
 12065                           
 12066                           
 12067                           ;uart.c: 41:     return RCREG;
 12068     187F  1283               	bcf	3,5	;RP0=0, select bank0
 12069     1880  1303               	bcf	3,6	;RP1=0, select bank0
 12070     1881  081A               	movf	26,w	;volatile
 12071     1882                     i1l249:
 12072     1882  0008               	return
 12073     1883                     __end_of_UART_read_char:
 12074     007E                     btemp	set	126	;btemp
 12075     007E                     wtemp0	set	126
 12076                           
 12077                           	psect	idloc
 12078                           
 12079                           ;Config register IDLOC0 @ 0x2000
 12080                           ;	unspecified, using default values
 12081     2000                     	org	8192
 12082     2000  3FFF               	dw	16383
 12083                           
 12084                           ;Config register IDLOC1 @ 0x2001
 12085                           ;	unspecified, using default values
 12086     2001                     	org	8193
 12087     2001  3FFF               	dw	16383
 12088                           
 12089                           ;Config register IDLOC2 @ 0x2002
 12090                           ;	unspecified, using default values
 12091     2002                     	org	8194
 12092     2002  3FFF               	dw	16383
 12093                           
 12094                           ;Config register IDLOC3 @ 0x2003
 12095                           ;	unspecified, using default values
 12096     2003                     	org	8195
 12097     2003  3FFF               	dw	16383
 12098                           
 12099                           	psect	config
 12100                           
 12101                           ;Config register CONFIG1 @ 0x2007
 12102                           ;	Oscillator Selection bits
 12103                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 12104                           ;	Watchdog Timer Enable bit
 12105                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 12106                           ;	Power-up Timer Enable bit
 12107                           ;	PWRTE = OFF, PWRT disabled
 12108                           ;	RE3/MCLR pin function select bit
 12109                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 12110                           ;	Code Protection bit
 12111                           ;	CP = OFF, Program memory code protection is disabled
 12112                           ;	Data Code Protection bit
 12113                           ;	CPD = OFF, Data memory code protection is disabled
 12114                           ;	Brown Out Reset Selection bits
 12115                           ;	BOREN = OFF, BOR disabled
 12116                           ;	Internal External Switchover bit
 12117                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 12118                           ;	Fail-Safe Clock Monitor Enabled bit
 12119                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 12120                           ;	Low Voltage Programming Enable bit
 12121                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 12122                           ;	In-Circuit Debugger Mode bit
 12123                           ;	DEBUG = 0x1, unprogramme 12124     2007                     	org	8199
 12125     2007  20D4               	dw	8404
 12126                           
 12127                           ;Config register CONFIG2 @ 0x2008
 12128                           ;	Brown-out Reset Selection bit
 12129                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 12130                           ;	Flash Program Memory Self Write Enable bits
 12131                           ;	WRT = OFF, Write protection off
 12132     2008                     	org	8200
 12133     2008  3FFF               	dw	16383

Data Sizes:
    Strings     25
    Constant    144
    Data        0
    BSS         38
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     79      79
    BANK1            80     42      79
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_7(CODE[5]), STR_5(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 4
		 -> ADC2(BANK1[4]), ADC1(BANK1[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UART_write_char@character	PTR unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 4
		 -> STR_8(CODE[2]), ADC2(BANK1[4]), STR_6(CODE[2]), ADC1(BANK1[4]), 
		 -> STR_4(CODE[4]), STR_3(CODE[3]), STR_2(CODE[3]), 


Critical Paths under _main in COMMON

    _main->___lwmod
    _sprintf->___lldiv
    _sprintf->___llmod
    _sprintf->__div_to_l_
    ___awdiv->___awmod
    _fround->___lwmod
    ___lwmod->___lwdiv
    ___flmul->__Umul8_16
    ___flmul->___lwmod
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___flsub->___fladd
    ___fladd->_fround
    _readADC->___fltol
    ___fltol->_scale
    ___fldiv->___flmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   48011
                                             38 BANK1      4     4      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                     _UART_RX_config
                     _UART_TX_config
                    _UART_write_char
                            ___fldiv
                            ___flmul
                            ___lwdiv
                            ___lwmod
                           ___xxtofl
                            _readADC
                              _setup
                           _setupADC
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   34269
                                             74 BANK0      5     0      5
                                              8 BANK1     30    30      0
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7864
                                             34 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1516
                                              9 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    7101
                                             34 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4    1132
                                             10 COMMON     1     1      0
                                              0 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     922
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                              8 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              2 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              2 COMMON     8     0      8
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              2 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     772
                                              2 COMMON     9     1      8
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             54 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readADC                                              6     4      2    1431
                                             63 BANK0      6     4      2
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     702
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     533
                                             53 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1425
                                             34 BANK0     26    18      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_write_char                                      2     2      0      78
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _UART_TX_config                                       2     0      2      76
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _UART_RX_config                                       2     0      2      76
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2    1039
                                              5 COMMON     5     3      2
                                              0 BANK0      2     2      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0     279
                                              3 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       3     2      1    1011
                                              6 COMMON     3     2      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             3     3      0     527
                                              6 COMMON     3     3      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     279
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     279
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     248
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
                     _UART_read_char
 ---------------------------------------------------------------------------------
 (6) _UART_read_char                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   _UART_RX_config
   _UART_TX_config
   _UART_write_char
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
   ___flmul
   ___lwdiv
   ___lwmod
   ___xxtofl
   _readADC
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___xxtofl
   _setup
   _setupADC
   _sprintf
     ___awdiv
     ___fladd
       _fround (ARG)
         ___flmul
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 _isr (ROOT)
   _UART_read_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      AA       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2A      4F       7       98.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      AA      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Feb 01 22:37:45 2023

            ___fldiv@aexp 005B              ___fldiv@bexp 005A                         pc 0002  
            ___fldiv@sign 0053              ___awdiv@sign 0025                        fsr 0004  
     ___wmul@multiplicand 0074       __Umul8_16@word_mpld 0078                       l211 0859  
                     l213 085D                       l150 19F1                       l214 089F  
                     l206 081B                       l118 1994                       l151 19F2  
                     l160 1A0E                       l152 19F8                       l144 19DA  
                     l208 081F                       l153 19F9                       l145 19DD  
                     l217 18E5                       l154 19FF                       l146 19E3  
                     l234 189B                       l242 1922                       l410 04BD  
                     l155 1A00                       l147 19E4                       l163 18FF  
                     l403 047F                       l156 1A06                       l148 19EA  
                     l172 191F                       l157 1A07                       l149 19EB  
                     l237 0806                       l158 1A0D                       l166 1889  
                     l246 1940                       l430 1965                       l175 1C4B  
                     l351 133E                       l184 1A98                       l424 0665  
                     l178 18CE                       l602 091A                       l418 061E  
                     l428 194D                       l614 1AB7                       l622 1E13  
                     l358 0FFF                       l631 107A                       l615 1AD3  
                     l623 1E2C                       l616 1AE8                       l464 1CB3  
                     l641 107A                       l801 1B38                       l609 094A  
                     l377 009B                       l811 1E83                       l619 1DA7  
                     l627 18A6                       l813 1FFF                       l901 06CD  
                     l645 1131                       l581 1D1C                       l638 1065  
                     l646 10A5                       l734 1A52                       l656 1124  
                     l744 19D0                       l833 1FE7                       l761 13F6  
                     l649 10F4                       l594 1BE7                       l835 1FF5  
                     l827 1F75                       l755 139A                       l851 0C9C  
                     l915 18B8                       l908 06E9                       l780 150A  
                     l684 1B8E                       l909 06F5                       l598 0957  
                     l870 07ED                       l759 141D                       l599 08BE  
                     l863 0C90                       l776 14E6                       l768 1596  
                     l872 07FF                       l857 0C0C                       l786 152C  
                     l797 158C                       l789 156A                       l798 1596  
                     l895 068A                       l897 071F                       _RD1 0041  
                     _RD2 0042                       _RD3 0043                       _RD4 0044  
                     _RD5 0045                       _RD6 0046                       _RD7 0047  
                     _isr 1D1D                       fsr0 0004                       indf 0000  
            ___awmod@sign 0078              ___flmul@aexp 003A              ___flmul@bexp 003B  
            ___flmul@sign 0035              ___flmul@temp 0040              ___flmul@prod 003C  
            ___fltol@exp1 005E                      l3001 0C8B                      l3003 0C94  
                    l3111 10AC                      l3103 1095                      l3201 1941  
                    l3121 10DB                      l3113 10BB                      l3211 1961  
                    l3203 1943                      l3123 10E5                      l3115 10BD  
                    l3051 0CAD                      l3301 1041                      l3221 1C6E  
                    l3205 1947                      l3125 10E6                      l3117 10C4  
                    l3109 10A6                      l3045 0CA0                      l4031 19E8  
                    l3311 106A                      l3303 1053                      l3231 1C9C  
                    l3223 1C72                      l3215 1C4C                      l4111 1B57  
                    l4103 1B39                      l3207 1954                      l3151 08AB  
                    l3143 1119                      l3135 1100                      l3127 10EE  
                    l3119 10CD                      l2511 07DA                      l3063 0E26  
                    l3047 0CA4                      l4041 1A0B                      l4033 19EF  
                    l4025 19D2                      l3313 106F                      l3401 1974  
                    l3241 1AAF                      l3233 1CA5                      l3225 1C7B  
                    l3217 1C5E                      l4113 1B69                      l4105 1B41  
                    l3209 195B                      l3161 08BF                      l3145 1129  
                    l3129 10F8                      l3137 1112                      l2521 07FB  
                    l2513 07DC                      l2601 1BAA                      l3081 0FD3  
                    l3057 0D97                      l3049 0CA6                      l4201 009D  
                    l4035 19F6                      l4027 19D6                      l4131 1C10  
                    l4123 1BE8                      l3411 197B                      l3403 1977  
                    l3243 1ACB                      l3251 1D89                      l3227 1C8D  
                    l3219 1C61                      l3235 1CAB                      l4115 1B77  
                    l4107 1B46                      l3171 08EA                      l3163 08C7  
                    l3155 08B4                      l2515 07E3                      l4051 19AB  
                    l4043 1995                      l3091 18B5                      l2611 1BC6  
                    l2603 1BAD                      l3075 0F44                      l3059 0D9E  
                    l3067 0E53                      l4211 00DD                      l4203 00BB  
                    l4037 19FD                      l4029 19E1                      l4141 1C3A  
                    l4133 1C1A                      l4125 1BEE                      l3309 105A  
                    l3341 0669                      l3421 1983                      l3413 197F  
                    l3405 1978                      l3245 1AE5                      l3261 1DEB  
                    l3253 1D9F                      l2701 1378                      l3229 1C9B  
                    l4117 1B80                      l4109 1B53                      l3181 091E  
                    l3173 08FC                      l3165 08D8                      l3149 08A0  
                    l2517 07E7                      l4053 19AF                      l4045 199D  
                    l4061 19CC                      l3093 18B7                      l3085 18A8  
                    l2621 1BE3                      l2613 1BCC                      l2605 1BB4  
                    l3077 0F4B                      l3069 0E5A                      l4301 0475  
                    l4221 011B                      l4213 00E1                      l4205 00C7  
                    l4039 1A04                      l4143 1C3F                      l4135 1C1E  
                    l4127 1BFB                      l4151 1906                      l4071 18C6  
                    l3343 066E                      l3511 0807                      l3431 1993  
                    l3423 1986                      l3415 1980                      l3407 1979  
                    l3247 1AE7                      l3239 1A99                      l3263 1DEF  
                    l3255 1DBB                      l3271 189C                      l2711 138F  
                    l2703 137C                      l3335 1AE9                      l4119 1B86  
                    l3175 090A                      l3167 08DA                      l2519 07F6  
                    l2631 1A1A                      l4055 19B9                      l4047 19A0  
                    l3087 18A9                      l2551 1CC2                      l2543 1CB4  
                    l2615 1BD3                      l2607 1BB8                      l4311 04A5  
                    l4303 0487                      l4231 017B                      l4223 0134  
                    l4215 00FA                      l4207 00CB                      _ADC1 00EB  
                    _ADC2 00E7                      l4081 18F3                      l4145 1C45  
                    l4137 1C29                      l4129 1C0A                      l4153 1909  
                    l4073 18CB                      l4065 18BA                      l4161 1A53  
                    l3281 100E                      l3361 06B6                      l3353 069B  
                    l3345 0672                      l3521 083D                      l3513 080F  
                    l3425 1987                      l3417 1981                      l3409 197A  
                    l3441 18DE                      l3433 18CF                      l3265 1E29  
                    l3257 1DC3                      l3273 18A4                      l2801 14C4  
                    l2721 13A8                      l2713 1390                      l2705 137D  
                    l3337 1AED                      l3177 090B                      l3169 08E1  
                    l3097 107B                      l2641 1A40                      l2633 1A21  
                    l2625 1A0F                      l4057 19BF                      l4049 19A7  
                    l3089 18AF                      l2561 1CD7                      l2553 1CC6  
                    l2545 1CB7                      l2609 1BBC                      l2617 1BD9  
                    l4321 04D0                      l4313 04B4                      l4305 048E  
                    l4241 0208                      l4233 017F                      l4225 013F  
                    l4217 0113                      l4209 00CF                      l4401 168B  
                    l4083 18FC                      l4075 18E7                      l4147 1883  
                    l4139 1C2F                      l4155 1910                      l4067 18BD  
                    l4163 1A58                      l3291 1033                      l3371 06ED  
                    l3363 06C4                      l3355 069E                      l3347 0682  
                    l3531 085E                      l3515 0811                      l3523 0845  
                    l3427 198A                      l3419 1982                      l3443 18DF  
                    l3435 18D5                      l3267 1E2B                      l3259 1DC7  
                    l3275 18A6                      l2803 14C9                      l2731 13B2  
                    l2723 13AA                      l2707 1382                      l2715 1392  
                    l3195 093F                      l3187 0926                      l3179 0914  
                    l3099 108C                      l2643 1A41                      l2635 1A25  
                    l2627 1A11                      l4059 19C6                      l2571 1CFA  
                    l2563 1CDA                      l2555 1CCB                      l2547 1CBB  
                    l2619 1BDE                      l4331 05A7                      l4323 04D4  
                    l4315 04B9                      l4307 0492                      l4251 028A  
                    l4243 0211                      l4235 0185                      l4227 0145  
                    l4219 0117                      l4171 0023                      l4411 16E3  
                    l4403 16AD                      l4077 18EA                      l4157 1916  
                    l4149 1901                      l4069 18C3                      l4165 1A74  
                    l3293 1035                      l3285 1017                      l3381 0717  
                    l3373 06F7                      l3365 06D4                      l3357 06AB  
                    l3349 0692                      l3525 084B                      l3517 0818  
                    l3429 198B                      l3445 18E0                      l3437 18D8  
                    l2821 1511                      l2813 14FC                      l2805 14D8  
                    l2741 13BC                      l2733 13B4                      l2725 13AC  
                    l2717 13A0                      l2709 1387                      l3197 094F  
                    l3189 0938                      l2901 09A4                      l2645 1A48  
                    l2637 1A29                      l2629 1A17                      l4093 124A  
                    l4085 1135                      l2581 1D13                      l2573 1D00  
                    l2565 1CE1                      l2557 1CCF                      l2549 1CC0  
                    l4341 05FD                      l4333 05B1                      l4325 04F2  
                    l4317 04C6                      l4309 0498                      l4261 0305  
                    l4253 0299                      l4245 022C                      l4237 01A4  
                    l4229 0158                      l4181 0043                      l4173 0029  
                    l4421 1785                      l4413 16FB                      l4405 16B6  
                    l4079 18F0                      l4159 1919                      l4167 1A7C  
                    l3295 1039                      l3287 102A                      l3279 1003  
                    l3375 070D                      l3367 06DF                      l3359 06B2  
                    l3527 084F                      l3535 087C                      l3519 0820  
                    l3391 196A                      l3439 18D9                      l2831 151F  
                    l2823 1513                      l2815 1505                      l2807 14EE  
                    l2743 13BE                      l2735 13B6                      l2727 13AE  
                    l2719 13A4                      l2751 13C6                      l2911 09BF  
                    l2903 09AC                      l2639 1A3A                      l2647 1A4E  
                    l4095 1250                      l4087 113B                      l2583 1D18  
                    l2575 1D01                      l2567 1CE5                      l2559 1CD1  
                    l2591 1B94                      l4351 0629                      l4343 0603  
                    l4327 054D                      l4335 05EC                      l4319 04CB  
                    l4271 0353                      l4263 030E                      l4255 02B4  
                    l4239 01EF                      l4247 0234                      l4191 007D  
                    l4183 0046                      l4175 002E                      l4431 17EA  
                    l4423 178D                      l4415 1751                      l4407 16BF  
                    l3481 189A                      l3473 0800                      l3801 1EC4  
                    l3289 102B                      l3377 0712                      l3369 06E3  
                    l3529 0856                      l3393 196B                      l2841 1536  
                    l2833 1523                      l2825 1518                      l2817 1509  
                    l2809 14F3                      l2761 1403                      l2753 13C7  
                    l2745 13C0                      l2737 13B8                      l2729 13B0  
                    l2681 134D                      l2673 133F                      l2921 0A3B  
                    l2913 09CD                      l2905 09B1                      l2577 1D08  
                    l2569 1CE9                      l2593 1B99                      l4353 062A  
                    l4337 05F4                      l4329 0588                      l4265 0316  
                    l4257 02DB                      l4273 035C                      l4249 0243  
                    l4345 060A                      l4193 0083                      l4185 004C  
                    l4177 0033                      l4169 0020                      l4433 17F3  
                    l4425 17A0                      l4417 1773                      l4409 16C7  
                    l3475 1892                      l3483 1921                      l3811 1EE3  
                    l3803 1ECC                      l3379 0716                      l3395 1970  
                    l2851 1574                      l2843 1544                      l2835 1529  
                    l2819 150E                      l2827 151A                      l2771 1421  
                    l2763 1407                      l2755 13DE                      l2747 13C2  
                    l2739 13BA                      l2683 1352                      l2691 1362  
                    l2675 1344                      l2931 0AA7                      l2923 0A57  
                    l2915 09DA                      l2907 09B6                      l4099 12FB  
                    l2579 1D0E                      l2595 1B9B                      l2587 1B8F  
                    l4355 0639                      l4347 0610                      l4339 05F9  
                    l4291 0405                      l4275 0391                      l4267 0334  
                    l4259 02EA                      l4187 0051                      l4195 0095  
                    l4179 0035                      l4363 064D                      l4427 17C6  
                    l4419 177C                      l3477 1896                      l3485 1928  
                    l3821 1F15                      l3813 1EF5                      l3805 1ED4  
                    l3397 1972                      l3389 1966                      l2861 1588  
                    l2853 157C                      l2845 1548                      l2781 144A  
                    l2829 151E                      l2773 1426                      l2765 1408  
                    l2757 13FA                      l2749 13C4                      l2693 136A  
                    l2685 1357                      l2677 1348                      l2941 0B31  
                    l2933 0AB5                      l2925 0A73                      l2917 09F5  
                    l2597 1B9F                      l2589 1B90                      l4357 0639  
                    l4349 0618                      l4293 0411                      l4285 03C4  
                    l4277 03C0                      l4365 0661                      l4197 0099  
                    l4189 0066                      l4429 17E3                      l4381 15C7  
                    l3479 1897                      l3487 1930                      l3831 1F36  
                    l3823 1F16                      l3815 1EF9                      l3807 1EDC  
                    l3751 1E3A                      l3399 1973                      l2863 1591  
                    l2855 1581                      l2847 1566                      l2839 1531  
                    l2791 145C                      l2783 144E                      l2767 1411  
                    l2759 1401                      l2695 136D                      l2687 135F  
                    l2679 134C                      l2951 0BC1                      l2943 0B3F  
                    l2935 0AD2                      l2927 0A7C                      l2919 0A11  
                    l2871 0961                      l2599 1BA4                      l4359 0647  
                    l4295 0416                      l4279 03C2                      l4391 15F1  
                    l4383 15CF                      l4375 1597                      l3489 1934  
                    l3841 1F4F                      l3833 1F38                      l3825 1F24  
                    l3817 1EFA                      l3809 1EDE                      l3761 1E4E  
                    l3753 1E3B                      l3745 1E2D                      l2865 1595  
                    l2857 1582                      l2849 156F                      l2793 1465  
                    l2785 1455                      l2777 142F                      l2769 1415  
                    l2697 1373                      l2689 1360                      l2961 0BE6  
                    l2953 0BCF                      l2945 0B6A                      l2937 0AE9  
                    l2929 0A8A                      l2881 0978                      l2873 0965  
                    l4297 041B                      l4289 03FB                      l4393 15FA  
                    l4385 15D8                      l4377 15BD                      l3851 1F72  
                    l3835 1F41                      l3843 1F55                      l3819 1F03  
                    l3827 1F28                      l3771 1E65                      l3755 1E40  
                    l3763 1E50                      l3747 1E32                      l2859 1586  
                    l2787 1457                      l2779 1446                      l2795 146A  
                    l2699 1374                      l2971 0C09                      l2955 0BD8  
                    l2963 0BEC                      l2947 0B90                      l2939 0B06  
                    l2891 098F                      l2883 097A                      l2875 0966  
                    l2867 0958                      l4299 0456                      l4395 1602  
                    l4387 15E0                      l4379 15C1                      l3861 1F91  
                    l3845 1F59                      l3837 1F45                      l3829 1F2E  
                    l3781 1E79                      l3773 1E66                      l3765 1E58  
                    l3757 1E45                      l3749 1E36                      l2797 1480  
                    l2789 145B                      l2981 0C28                      l2965 0BF0  
                    l2957 0BDC                      l2949 0BB8                      l2893 0990  
                    l2885 0982                      l2877 096B                      l2869 095D  
                    l4469 00B3                      l4397 161D                      l4389 15E9  
                    l3871 1FDA                      l3863 1FAA                      l3855 1F7A  
                    l3847 1F5A                      l3839 1F46                      l3775 1E6B  
                    l3783 1E7B                      l3767 1E5D                      l3759 1E4D  
                    l2799 14BE                      l2991 0C6E                      l2983 0C41  
                    l2975 0C11                      l2967 0BF1                      l2959 0BDD  
                    l2895 0995                      l2887 0987                      l2879 0970  
                    l4399 1635                      l3881 1FF1                      l3873 1FDE  
                    l3857 1F7F                      l3865 1FB0                      l3849 1F5E  
                    l3785 1E8B                      l3793 1EA4                      l3777 1E70  
                    l3769 1E61                      l2993 0C78                      l2977 0C16  
                    l2985 0C47                      l2969 0BF5                      l2897 099A  
                    l2889 098B                      l3875 1FE6                      l3867 1FBD  
                    l3859 1F8D                      l3795 1EA9                      l3787 1E97  
                    l3779 1E78                      l2995 0C7A                      l2987 0C54  
                    l2979 0C24                      l2899 09A2                      l3877 1FEB  
                    l3869 1FCB                      l3789 1E9B                      l2997 0C86  
                    l2989 0C5F                      l3879 1FEF                      l3799 1EB2  
                    l2999 0C8A                      ?_isr 0070                      STR_1 07C0  
                    STR_2 07D1                      STR_3 07D4                      STR_4 07CD  
                    STR_5 07C8                      STR_6 07D7                      STR_7 07C8  
                    STR_8 07D7                      u4000 1557                      u3200 07FB  
                    u3201 07FA                      u4010 1566                      u4011 1565  
                    u4020 156F                      u4100 098F                      u3300 1CC6  
                    u4021 156E                      u4005 1552                      u4101 098E  
                    u3301 1CC5                      u4030 1574                      u4110 0995  
                    u3310 1CD7                      u4031 1573                      u4111 0994  
                    u3311 1CD6                      u4040 1581                      u5000 1961  
                    u4120 099A                      u3400 1B9F                      u4041 1580  
                    u5001 1960                      u4201 0A99                      u4121 0999  
                    u3401 1B9E                      u4050 1586                      u5010 1C5E  
                    u4202 0AA0                      u4130 09B1                      u3330 1CE9  
                    u3410 1BAA                      u4051 1585                      u5011 1C5D  
                    u4211 0AC4                      u4203 0AA7                      u4131 09B0  
                    u3331 1CE8                      u3411 1BA9                      u5100 1AE5  
                    u4060 1595                      u3180 07E7                      u4212 0ACB  
                    u4140 09B6                      u3500 1A29                      u5101 1AE4  
                    u4061 1594                      u3181 07E6                      u4213 0AD2  
                    u4141 09B5                      u3501 1A28                      u3325 1CDB  
                    u5110 1D9F                      u5030 1C72                      u4070 0965  
                    u3350 1CFA                      u3430 1BBC                      u5111 1D9E  
                    u5031 1C71                      u4231 0AF8                      u4151 0A03  
                    u4071 0964                      u3351 1CF9                      u3431 1BBB  
                    u6000 1E70                      u5200 1025                      u5120 1DBB  
                    u4400 0C37                      u4320 0BDC                      u4232 0AFF  
                    u4152 0A0A                      u4080 096B                      u3520 1A3A  
                    u3440 1BC6                      u6001 1E6F                      u5105 1AE1  
                    u5121 1DBA                      u5025 1C63                      u4321 0BDB  
                    u4305 0BBA                      u4241 0B23                      u4233 0B06  
                    u4225 0AD4                      u4161 0A1F                      u4153 0A11  
                    u4081 096A                      u3521 1A39                      u3345 1CEA  
                    u3441 1BC5                      u3425 1BAE                      u6010 1E8B  
                    u5210 1039                      u5130 1DC7                      u3610 134C  
                    u5050 1C8D                      u4410 0C54                      u4242 0B2A  
                    u4162 0A26                      u4090 0970                      u3370 1D0E  
                    u3290 1CBB                      u6011 1E8A                      u5211 1038  
                    u5131 1DC6                      u3611 134B                      u5051 1C8C  
                    u3195 07EE                      u4411 0C53                      u4315 0BD1  
                    u4251 0B4E                      u4243 0B31                      u4171 0A49  
                    u4163 0A2D                      u4091 096F                      u3515 1A2A  
                    u3371 1D0D                      u3355 1CF6                      u3291 1CBA  
                    u6100 1F36                      u6020 1EA9                      u5220 1040  
                    u3700 13DE                      u3620 1352                      u4420 0C6E  
                    u4340 0BF0                      u4260 0B76                      u4252 0B55  
                    u4172 0A50                      u3540 1A4E                      u3380 1D13  
                    u3460 1BD9                      u6101 1F35                      u6021 1EA8  
                    u5221 103F                      u5205 1020                      u5141 1DD6  
                    u3701 13DD                      u3621 1351                      u5045 1C74  
                    u4421 0C6D                      u4405 0C32                      u4341 0BEF  
                    u4253 0B5C                      u4181 0A65                      u4173 0A57  
                    u3541 1A4D                      u3525 1A36                      u3381 1D12  
                    u3365 1D02                      u3461 1BD8                      u3445 1BC2  
                    u6030 1EE3                      u5150 1DEF                      u5142 1DD7  
                    u3710 13E9                      u3630 1357                      u5070 1CAB  
                    u4430 0C8A                      u4350 0BF5                      u4182 0A6C  
                    u3470 1BDE                      u3390 1B94                      u6031 1EE2  
                    u5151 1DEE                      u5143 1DDC                      u3711 13E7  
                    u3631 1356                      u5071 1CAA                      u5055 1C89  
                    u4431 0C89                      u4415 0C50                      u4351 0BF4  
                    u4335 0BDF                      u4271 0B82                      u4183 0A73  
                    u3535 1A42                      u3471 1BDD                      u3455 1BCD  
                    u3391 1B93                      u6200 1FA0                      u6120 1F45  
                    u5240 1052                      u5080 1AAF                      u5144 1DDD  
                    u3800 144A                      u3720 13EA                      u3640 1373  
                    u4360 0C09                      u4280 0B9E                      u4272 0B89  
                    u3480 1A17                      u4520 0CA4                      u7000 0639  
                    u6121 1F44                      u5241 1051                      u5081 1AAE  
                    u5161 1DFE                      u5145 1DE2                      u3801 1449  
                    u3705 13DA                      u3641 1372                      u5065 1C9D  
                    u4425 0C6A                      u4361 0C08                      u4273 0B90  
                    u4265 0B71                      u3481 1A16                      u4521 0CA3  
                    u7001 0638                      u6210 1FBD                      u5250 1059  
                    u5410 06D3                      u5090 1ACB                      u5170 1E29  
                    u5162 1DFF                      u5146 1DE3                      u3810 144E  
                    u3730 13FA                      u3650 137C                      u4370 0C10  
                    u4610 0E5A                      u4530 0CAD                      u7010 0647  
                    u6211 1FBC                      u6115 1F3A                      u5251 1058  
                    u5235 1042                      u5411 06D2                      u5091 1ACA  
                    u5171 1E28                      u5163 1E04                      u3811 144D  
                    u3731 13F9                      u3651 137B                      u4371 0C0F  
                    u4291 0BAA                      u4195 0A75                      u4611 0E59  
                    u4531 0CAC                      u7011 0646                      u5500 1940  
                    u6220 1FDA                      u6140 1F59                      u6060 1EF9  
                    u5164 1E05                      u5180 18A4                      u3820 145B  
                    u3740 1407                      u3660 1382                      u4380 0C16  
                    u4292 0BB1                      u4700 18B5                      u7020 0661  
                    u5501 193F                      u6221 1FD9                      u6205 1F9B  
                    u6141 1F58                      u6061 1EF8                      u6045 1EE5  
                    u5405 06C5                      u5165 1E0A                      u5181 18A3  
                    u3821 145A                      u3741 1406                      u3661 1381  
                    u4381 0C15                      u4293 0BB8                      u4285 0B99  
                    u4701 18B4                      u4605 0E29                      u7021 0660  
                    u7005 0635                      u6230 1FEF                      u6150 1F5E  
                    u5270 106A                      u5190 100E                      u5430 06E3  
                    u5350 066E                      u5166 1E0B                      u3910 1509  
                    u3670 1387                      u4710 108C                      u4390 0C28  
                    u6231 1FEE                      u6215 1FB9                      u6151 1F5D  
                    u6135 1F48                      u6055 1EEE                      u5271 1069  
                    u5191 100D                      u5431 06E2                      u5351 066D  
                    u5175 1E25                      u3911 1508                      u3671 1386  
                    u4711 108B                      u4391 0C27                      u3495 1A1B  
                    u6400 19FD                      u6160 1F72                      u6080 1F15  
                    u5280 106F                      u5440 06E9                      u5360 0672  
                    u3920 150E                      u3840 1480                      u3760 141D  
                    u3680 13A0                      u4800 1111                      u4720 10A4  
                    u6401 19FC                      u6225 1FD6                      u6161 1F71  
                    u6081 1F14                      u5281 106E                      u5265 105C  
                    u5441 06E8                      u5425 06D8                      u5361 0671  
                    u3921 150D                      u3905 14FE                      u3841 147F  
                    u3761 141C                      u3681 139F                      u4801 1110  
                    u4721 10A3                      u4625 0E7C                      u4545 0CCF  
                    u6410 1A04                      u6170 1F79                      u6090 1F2E  
                    u5450 06ED                      u5370 0692                      u3930 1518  
                    u3770 1421                      u3690 13A4                      u4810 1118  
                    u4650 0F4B                      u4570 0D9E                      u6411 1A03  
                    u7107 1C12                      u6171 1F78                      u6091 1F2D  
                    u6075 1EFC                      u5451 06EC                      u5371 0691  
                    u3931 1517                      u3851 1497                      u3843 147C  
                    u3835 145E                      u3771 1420                      u3755 140A  
                    u3691 13A3                      u4811 1117                      u4651 0F4A  
                    u4635 0EB8                      u4571 0D9D                      u4555 0D0B  
                    u6420 1A0B                      u6180 1F7F                      u5460 0702  
                    u3940 151E                      u3860 14AB                      u3852 1498  
                    u3780 1426                      u4900 091E                      u4740 10DB  
                    u6421 1A0A                      u7117 1C1C                      u6181 1F7E  
                    u6085 1F11                      u7037 18E2                      u3941 151D  
                    u3861 14AC                      u3853 149D                      u3781 1425  
                    u4901 091D                      u4741 10DA                      u4645 0F03  
                    u4565 0D56                      u6350 19D6                      u6190 1F91  
                    u5470 0712                      u5390 06B1                      u3950 1523  
                    u3870 14C9                      u3862 14B1                      u3854 149E  
                    u4910 0925                      u4830 1129                      u6430 199D  
                    u6351 19D5                      u7127 1C26                      u6191 1F90  
                    u5471 0711                      u5391 06B0                      u7047 0815  
                    u3951 1522                      u3871 14C8                      u3863 14B2  
                    u3855 14A3                      u3791 1438                      u4911 0924  
                    u4831 1128                      u4735 10C6                      u6431 199C  
                    u6360 19E1                      u5480 0716                      u5560 080F  
                    u3960 1529                      u3880 14EE                      u3856 14A4  
                    u3792 143F                      u6600 1B69                      u4840 08AB  
                    u4760 10F4                      u6361 19E0                      u7137 1C31  
                    u5481 0715                      u5465 06FD                      u5385 06A3  
                    u7057 0841                      u5561 080E                      u3961 1528  
                    u3881 14ED                      u3793 1446                      u6601 1B68  
                    u4841 08AA                      u4825 111B                      u4761 10F3  
                    u4745 10D7                      u6505 1158                      u4665 0F5E  
                    u4585 0DB1                      u6370 19E8                      u5490 1928  
                    u5570 081F                      u3970 1530                      u3890 14F3  
                    u4930 0937                      u4850 08BD                      u4770 10F8  
                    u6450 19AF                      u6530 1250                      u4690 18AF  
                    u6371 19E7                      u7147 1C3C                      u5491 1927  
                    u7067 0853                      u5571 081E                      u3971 152F  
                    u3891 14F2                      u4931 0936                      u4851 08BC  
                    u4771 10F7                      u4755 10E7                      u6451 19AE  
                    u6531 124F                      u6515 11B4                      u4691 18AE  
                    u4675 0F9A                      u4595 0DED                      u6380 19EF  
                    u5580 084B                      u3980 1536                      u6620 1B86  
                    u4940 093E                      u4780 10FF                      u6460 19B9  
                    u6700 0094                      i1l93 1D24                      u6381 19EE  
                    u7157 18F7                      u7077 18C8                      u5581 084A  
                    u3981 1535                      u6621 1B85                      u6605 1B65  
                    u4941 093D                      u4925 0927                      u4781 10FE  
                    u6461 19B8                      u6445 19A1                      u6525 1209  
                    u4685 0FD6                      u6701 0093                      u6390 19F6  
                    u6630 1906                      u5590 085D                      u3990 1548  
                    u4870 08FC                      u6710 00C7                      u6391 19F5  
                    u7087 1BF4                      u6631 1905                      u5591 085C  
                    u3991 1547                      u6615 1B78                      u4871 08FB  
                    u6711 00C6                      u6640 1916                      u4960 094F  
                    u6480 19CC                      u6800 02B4                      u6720 00CB  
                    u7097 1C05                      u6641 1915                      u4961 094E  
                    u4865 08E3                      u6481 19CB                      u6465 19B5  
                    u6545 126D                      u6801 02B3                      u6721 00CA  
                    u6650 1A62                      u6570 1B41                      u4970 1947  
                    u4890 091A                      u6490 113B                      u6810 02DB  
                    u6730 00FA                      u6571 1B40                      u4971 1946  
                    u4955 0941                      u4891 0919                      u4875 08F8  
                    u4795 1101                      u6475 19C0                      u6555 12BA  
                    u6491 113A                      u6811 02DA                      u6731 00F9  
                    u6660 1A86                      u6900 04A5                      u6820 02EA  
                    u6740 0134                      u4885 090D                      u6565 1306  
                    u6901 04A4                      u6821 02E9                      u6741 0133  
                    u6670 1A98                      u5950 1E3A                      u6590 1B57  
                    u6910 04B4                      u6830 0305                      u6750 017F  
                    u6671 1A97                      u5951 1E39                      u6591 1B56  
                    u6911 04B3                      u6831 0304                      u6751 017E  
                    u5960 1E40                      u6920 04CB                      u6760 0208  
                    u6680 0029                      u5961 1E3F                      u6585 1B48  
                    u4985 194E                      u6921 04CA                      u6905 04A1  
                    u6825 02E6                      u6761 0207                      u6681 0028  
                    u5970 1E45                      u6850 03FA                      u6770 022C  
                    u6690 0043                      u5971 1E44                      u4995 1955  
                    u6915 04B0                      u6851 03F9                      u6771 022B  
                    u6691 0042                      u5980 1E65                      u6860 0405  
                    u6780 0243                      u5981 1E64                      u6861 0404  
                    u6845 03C7                      u6781 0242                      u5990 1E6B  
                    u6950 05F3                      u6870 0411                      u6790 0299  
                    u5991 1E6A                      u6951 05F2                      u6935 0550  
                    u6871 0410                      u6855 03F6                      u6791 0298  
                    u6960 0609                      u6961 0608                      u6945 05B4  
                    u6785 023F                      u6970 0610                      u6890 0486  
                    u6971 060F                      u6891 0485                      u6795 0295  
                    u6980 0618                      u6981 0617                      u6885 041E  
                    u6990 0629                      u6991 0628                      u6995 0625  
                    _TMR0 0001                      _TXIF 0064         ?_Lcd_Write_String 0075  
                    _cont 00DE                      _main 1597                      _ones 00E4  
                    _tens 00E5                      btemp 007E                      start 000C  
      ??_Lcd_Write_String 0077           ___fldiv@new_exp 0054              _sprintf$1273 00AD  
         __end_of_Lcd_Cmd 1900                     ??_isr 0070             ___fltol@sign1 005D  
         __end_of___fladd 1597                     ?_main 0070           __end_of___fldiv 2000  
         __end_of___awdiv 1D1D           __end_of___flneg 18A7           __end_of___awmod 1BE8  
         __end_of___flmul 0C9D           __end_of___flsub 1B39           __end_of___fltol 107B  
                   _ANSEL 0188           __end_of___lldiv 1CB4           ___awdiv@divisor 0020  
         __end_of___llmod 1B8F           __end_of___lwdiv 1A53                     i1l104 1D76  
                   i1l107 1D82                     i1l249 1882           __end_of___lwmod 19D1  
         ___awdiv@counter 0024                     _RCREG 001A                     _SPBRG 0099  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _PORTE 0009                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
                   _TRISE 0089                     _TXREG 0019           __end_of_readADC 08A0  
         __end_of_dpowers 07C0                     _scale 0C9D           __end_of_isdigit 18B9  
                   _signo 007B                     _setup 1966                     pclath 000A  
                   status 0003                     wtemp0 007E           __end_of_sprintf 0666  
        __end_of_Lcd_Init 1C4C          __end_of_Lcd_Port 1A0F           __initialization 000F  
            __end_of_main 1800                    ??_main 007B          ___llmod@dividend 0076  
                  ?_scale 0042                    _ADRESH 001E          ___awdiv@dividend 0022  
                  ?_setup 0070                    _ANSELH 0189                    i1l3385 187F  
                  i1l3901 1D4C                    i1l3911 1D6A                    i1l3903 1D4F  
                  i1l3921 1D7C                    i1l3905 1D55                    i1l3913 1D6E  
                  i1l3923 1D7D                    i1l3907 1D5D                    i1l3915 1D71  
                  i1l3925 1D81                    i1l3917 1D75                    i1l3909 1D64  
                  i1l3919 1D7A                    i1l3891 1D28                    i1l3893 1D2E  
                  i1l3895 1D34                    i1l3887 1D1D                    i1l3897 1D3F  
                  i1l3889 1D23                    i1l3899 1D46                    u630_20 1D5D  
                  u630_21 1D5C                    u631_20 1D6A                    u631_21 1D69  
                  u632_20 1D75                    u624_20 1D23                    u632_21 1D74  
                  u624_21 1D22                    u633_20 1D7A                    u625_20 1D28  
                  u633_21 1D79                    u625_21 1D27                    u634_20 1D81  
                  u626_20 1D34                    u634_21 1D80                    u626_21 1D33  
                  u627_20 1D3F                    u627_21 1D3E                    u628_20 1D4C  
                  u628_21 1D4B                    u629_20 1D55                    u629_21 1D54  
               ??_Lcd_Cmd 0073          __end_of___xxtofl 0720          __end_of__powers_ 0764  
                  ___flge 1D89              readADC@canal 005F                    ___fleq 1A99  
               ??___fladd 005E                    ___wmul 1941                 ??___fldiv 004A  
               ??___awdiv 0079                 ??___flneg 0076                 ??___awmod 0076  
               ??___flmul 0030                 ??___flsub 007B                 ??___fltol 0059  
               ??___lldiv 007A                 ??___llmod 007A                 ??___lwdiv 0076  
               ??___lwmod 007A                    _fround 1132          ___awdiv@quotient 0026  
         ___awmod@divisor 0072           ___awmod@counter 0077                    _prueba 00CE  
               ??_readADC 0061                 ??_isdigit 0072           _UART_write_char 1920  
        __end_of_setupADC 18E6                    saved_w 007E                 ??_sprintf 00A8  
         Lcd_Set_Cursor@a 0077           Lcd_Set_Cursor@b 0076                ___flge@ff1 0072  
              ___flge@ff2 0076              ___xxtofl@arg 0022              ___xxtofl@exp 0021  
            ___xxtofl@val 0072                ___fleq@ff1 0072                ___fleq@ff2 0076  
 __end_of__initialization 0019                ___flneg@f1 0072         __end_of_Lcd_Clear 188A  
              ___fltol@f1 0055            __pcstackCOMMON 0070             __end_of_scale 1000  
           __end_of_setup 1995            _Lcd_Set_Cursor 1900                __div_to_l_ 08A0  
          _OPTION_REGbits 0081                 ?_Lcd_Init 0070                 ?_Lcd_Port 0070  
         __div_to_l_@exp1 0025           __div_to_l_@cntr 0024                   ??_scale 0046  
         __div_to_l_@quot 0020                   ??_setup 0072                __pbssBANK1 00CA  
           __div_to_l_@f1 0072             __div_to_l_@f2 0076         __end_of__Umul8_16 0800  
              __pmaintext 1597                   ?___flge 0072                   ?___fleq 0072  
                 ?___wmul 0072                __pintentry 0004   __end_of_UART_write_char 1941  
                 ?_fround 0042    __end_of_Lcd_Set_Cursor 1920                 ?___xxtofl 0072  
              ??_Lcd_Init 0076                ??_Lcd_Port 0072                __stringtab 0720  
          _Lcd_Write_Char 18B9                   _Lcd_Cmd 18E6            _UART_RX_config 1892  
          _UART_TX_config 0800         __end_of__npowers_ 0798                _scale$1272 0050  
               ?_setupADC 0070                   ___fladd 133F                   ___fldiv 1E2D  
                 ___awdiv 1CB4                   ___flneg 189C                   ___awmod 1B8F  
                 ___flmul 0958                   ___flsub 1AE9                   ___fltol 1003  
                 ___lldiv 1C4C                   ___llmod 1B39                   ___lwdiv 1A0F  
                 ___lwmod 1995           ?_Lcd_Set_Cursor 0076                   __ptext1 001D  
                 __ptext2 0C9D                   __ptext3 1B8F                   __ptext4 1CB4  
                 __ptext5 18A7                   __ptext6 1132                   __ptext7 1995  
                 __ptext8 1A0F                   __ptext9 0958                   _readADC 0807  
             ?__div_to_l_ 0072                   _dpowers 0798                   _isdigit 18A7  
              ??___xxtofl 0076          ___awmod@dividend 0074                   _sprintf 001D  
                 clrloop0 188B    __end_of_Lcd_Write_Char 18CF      end_of_initialization 0019  
  __end_of_UART_RX_config 189C    __end_of_UART_TX_config 0807           ___lldiv@divisor 0072  
         ___lldiv@counter 0024                ??_setupADC 0072                 _RCSTAbits 0018  
               Lcd_Port@a 0072            __tdiv_to_l_@f1 0072            __tdiv_to_l_@f2 0076  
        ?_UART_write_char 0070             ??__tdiv_to_l_ 0020                 _PORTBbits 0006  
               _PORTDbits 0008               ___fladd@grs 0069             ___xxtofl@sign 0020  
             ___fldiv@grs 0056               ___fldiv@rem 004F           ?_Lcd_Write_Char 0070  
       Lcd_Write_String@a 0075         Lcd_Write_String@i 0020           ?_UART_RX_config 0072  
             ___flmul@grs 0036           ?_UART_TX_config 0072                 _TXSTAbits 0098  
               _Lcd_Clear 1883    UART_RX_config@baudrate 0072            __end_of___flge 1E2D  
          __end_of___fleq 1AE9            __end_of___wmul 1966            _UART_read_char 187F  
        _Lcd_Write_String 1A53            __end_of_fround 133F       start_initialization 000F  
     __end_of__tdiv_to_l_ 1132               __end_of_isr 1D89               _ADC_Voltaje 00CA  
         ___llmod@divisor 0072           ___llmod@counter 0020                ?_Lcd_Clear 0070  
                ??___flge 0020                  ??___fleq 0020    __end_of_UART_read_char 1883  
                ??___wmul 0076                 __Umul8_16 07D9           Lcd_Write_Char@a 0074  
                ??_fround 0046             sprintf@tmpval 00BA                 ___fladd@a 005A  
               ___fladd@b 0056                fround@prec 0055                 ___fldiv@a 0042  
               ___fldiv@b 0046                 ___flmul@a 002C                 ___flmul@b 0028  
             __pbssCOMMON 007B                 ___flsub@a 00A0                 ___flsub@b 00A4  
               ___latbits 0002             __pcstackBANK0 0020             __pcstackBANK1 00A0  
            _isdigit$1087 0072                  ?_Lcd_Cmd 0070               sprintf@flag 00B2  
             sprintf@eexp 00B8               sprintf@fval 00C1               sprintf@prec 00BF  
               _main$1269 00C6          ___lwdiv@dividend 0074          ??_Lcd_Set_Cursor 0077  
                ?___fladd 0056                  ?___fldiv 0042           ?_UART_read_char 0070  
                ?___awdiv 0020                  ?___flneg 0072                  ?___awmod 0072  
                ?___flmul 0028                  ?___flsub 00A0                  ?___fltol 0055  
                ?___lldiv 0072                  ?___llmod 0072                 __npowers_ 0764  
              ?__Umul8_16 0072                  ?___lwdiv 0072                  ?___lwmod 0020  
               __pstrings 0720               __tdiv_to_l_ 107B              ??__div_to_l_ 007A  
                ?_readADC 005F                  ?_isdigit 0070          ___lwdiv@quotient 0077  
                ?_sprintf 006A         interrupt_function 0004            ___wmul@product 0076  
               clear_ram0 188A                  _PIE1bits 008C                  Lcd_Cmd@a 0075  
                _PIR1bits 000C        __end_of__div_to_l_ 0958               ??_Lcd_Clear 0076  
                _VOLTAJE1 00D6                  _VOLTAJE2 00D2                _ADCON0bits 001F  
             __stringbase 072F                _ADCON1bits 009F         ___wmul@multiplier 0072  
        ??_Lcd_Write_Char 0073          ??_UART_RX_config 0074                  _Lcd_Init 1BE8  
                _Lcd_Port 19D1          ??_UART_TX_config 0074  __end_of_Lcd_Write_String 1A99  
             ??__Umul8_16 0074               _fround$1270 0051               _fround$1271 004D  
      __end_of__stringtab 0730                sprintf@val 00B4                  ___xxtofl 0666  
         ___lwdiv@divisor 0072           ___lwdiv@counter 0079                  __ptext10 07D9  
                __ptext11 107B                  __ptext20 1A99                  __ptext12 08A0  
                __ptext21 18CF                  __ptext13 1941                  __ptext30 1A53  
                __ptext22 1966                  __ptext14 1B39                  __ptext31 18B9  
                __ptext23 0807                  __ptext15 1C4C                  __ptext32 1900  
                __ptext24 0666                  __ptext16 1AE9                  __ptext33 1BE8  
                __ptext25 1003                  __ptext17 133F                  __ptext34 1883  
                __ptext26 1E2D                  __ptext18 189C                  __ptext35 18E6  
                __ptext27 1920                  __ptext19 1D89                  __ptext36 19D1  
                __ptext28 0800                  __ptext37 1D1D                  __ptext29 1892  
                __ptext38 187F                  __powers_ 0730                  _hundreds 00E6  
                _valorADC 00DA                  _setupADC 18CF    UART_TX_config@baudrate 0072  
                _voltaje1 00E2                  _voltaje2 00E0                _INTCONbits 000B  
                isdigit@c 0073                  scale@scl 0054                  intlevel1 0000  
               sprintf@ap 00B1          __tdiv_to_l_@exp1 0028          __tdiv_to_l_@cntr 0027  
               sprintf@sp 00BE          __tdiv_to_l_@quot 0023          ___lwmod@dividend 0022  
        ___lldiv@dividend 0076          ??_UART_read_char 0070                 stringcode 072A  
              _OSCCONbits 008F        Lcd_Set_Cursor@temp 0078              ?__tdiv_to_l_ 0072  
  __Umul8_16@multiplicand 0072                  sprintf@c 00C5                  sprintf@f 006A  
        ___lldiv@quotient 0020           ___lwmod@divisor 0020           ___lwmod@counter 0024  
                stringdir 072A                  stringtab 0720  UART_write_char@character 0073  
           ___fladd@signs 0066         ??_UART_write_char 0072              ___fladd@aexp 0067  
            ___fladd@bexp 0068      __Umul8_16@multiplier 007A         __Umul8_16@product 0076  
